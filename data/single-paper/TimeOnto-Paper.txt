ONTOLOGIES OF TIME: REVIEW AND TRENDS
Time, as a phenomenon, has been in the focus of scientific thought from ancient times. It continues to be an important subject of research in many disciplines due to its importance as a basic aspect for understanding and formally representing change. The goal of this analytical review is to find out if the formal representations of time developed to date suffice to the needs of the basic and applied research in Computer Science, and in particular within the Artificial Intelligence and Semantic Web communities. To analyze if the existing basic theories, models, and implemented ontologies of time cower these needs well, the set of the features of time has been extracted and appropriately structured using the paper collection of the TIME Symposia series as the document corpus. This feature set further helped to structure the comparative review and analysis of the most prominent temporal theories. As a result, the selection of the subset of the features of time (the requirements for a Synthetic Theory) has been made reflecting the TIME community sentiment.  Further, the temporal logics, representation languages, and ontologies available to date, have been reviewed regarding their usability aspects and the coverage of the selected temporal features. The results reveal that the reviewed ontologies of time taken together do not satisfactorily cover some important features: (i) density; (ii) relaxed linearity; (iii) scale factors; (iv) proper and periodic subintervals; (v) temporal measures and clocks.  It has been concluded that a cross-disciplinary effort is required to address the features not covered by the existing ontologies of time, and also harmonize the representations addressed differently.   
Keywords: Time; sentiment; temporal feature; coverage; ontology; representation; reasoning.
1. Introduction
It is acknowledged that “when God made time, he made plenty of it”. Remarkably, when it goes about the formal treatment of time, the status is very much following this Irish saying.  Time, as a phenomenon, has been in the focus of scientific thought from ancient times. Today it continues to be an important subject of research for philosophers, physicists, mathematicians, logicians, computer scientists, and even biologists. One reason, perhaps, is that time is a fundamental aspect to understand and react to change in the World, including the broadest diversity of applications that impact the evolution of the Humankind. So, the progress in understanding the World in its dynamics: (a) is based on having an adequately rich and deep model of time; and (b) pushes forward the further refinement of our time models.  For example, in Computer Science the developments in Artificial Intelligence, Databases, Distributed Systems, etc. in the last two decades have brought to life several prominent theoretical frameworks dealing with temporal aspects. Some parts of these theories gave boost to the research in logics – yielding a family of temporal logics, comprising temporal description logics. Based on this logical foundation, knowledge representation languages have received their capability to represent time, and several ontologies of time have been implemented by the Semantic Web community.  It is however important to find out if this plenty is enough to meet the requirement in Computer Science research and development.
The objective of this analytic review paper is to answer this question – i.e. to find out if the formal representations of time developed to date suffice to the needs of coping with different aspects of change. The remainder of the paper is structured as follows. 
To assess the sufficiency of this coverage, the consensual set of the features of time has to be extracted and appropriately structured. This is done by analyzing the document corpus produced by the chosen professional community.  As the focus of our interest lies in the formal representations of time, the TIME community* has been chosen. The document corpus for temporal feature extraction has been formed of the proceedings papers of the TIME Symposia series from 1994 to date. As presented in Section 2, the OntoElect methodology has been used for the extraction of the set of Temporal Features. Using OntoElect also allowed us to receive the evidence that the extracted set of features represents a consensual sentiment of the TIME community about the requirements to the formalizations of time. The extracted set has been further cleaned and structured which resulted in the taxonomy of temporal features and helped us structure the discussion in the subsequent sections of the paper.
Section 3 of the paper focuses on the analytical review of the most prominent theories of time in Computer Science regarding the ways they deal with the temporal features representing the TIME community sentiment. To narrow the focus, the emphasis in this review is put on the parts of these theories that represent their basic models of time – leaving all the temporal incidence aspects out of the scope. The analysis is structured based on the taxonomy of temporal features. Apart of this analysis, another important result of this section is the selection of the subset of the temporal features which may form a so called Synthetic Theory of time which best meets the community sentiment.
Section 4 overviews the temporal logics, representation languages, and ontologies available to date, regarding their usability aspects and the coverage of the temporal features. The resulting Table 10 also compares the features implemented in the reviewed ontologies to the features selected for the Synthetic Theory in Section 3.
Section 5 discusses the findings and briefly outlines the potential agenda for the future work towards the development of a synergetic formal representation of time for computer scientists.
2. Community Sentiment about the Features of Time
Formalizing, representing, and reasoning about time is a research issue which attracted a lot of attention and effort† in the last two decades. Hence, reviewing the existing body of scholarly sources on the topic is an awkward task. It requires an appropriate method to be done efficiently and effectively. 
The task of this analytical review is to find out if the ontologies of time, that are available to date, offer sufficient expressive power and completeness to deal with all aspects and features of time that are required by professional communities in Computer Science – in particular in the Semantic Web and Artificial Intelligence. Hence, a concise representation of the opinion of these communities has to be taken into account. Finding out what is the opinion of a community is not however an easy problem. 
One possible way to reconstruct a representative community sentiment is to use the materialized product of the community members which describes their domain. Such products are available in the form of information resources, for example professional texts authored by the subject experts in the domain. To the best of our knowledge, a characteristic set of the professional texts about the features of time in the context of our interest is the collection of the proceedings of the International Symposium on Time Representation and Reasoning. These proceedings are available starting from 1994 till 2013‡ and comprise circa 440 papers. 
This TIME document collection has been assessed for its representativeness, and further used to extract the characteristic set of temporal features which constitute the opinion of TIME authors developed in the last two decades. Requirements elicitation phase of the OntoElect methodology [Tatarintseva et al. (2013)] was used for that.  
OntoElect is an ontology engineering methodology which allows assessing the representativeness of the document collection based on the termhood difference metric (thd). The documents are sorted in their chronological order, transformed to plain texts and further grouped in incremental slices. In the case of the TIME collection, each increment comprised the texts of a particular symposium year: the first slice () contained TIME 1994 papers; the second slice () contained the first slice plus TIME 1995 papers; …; the last twentieth slice () contained all TIME 1994–2013 papers. 
For each slice :
* The bag of terms was extracted§ and sorted by term scores ; the normalized scores were computed for each term in the bag 
* The slice termhood  was produced by filtering out the lower part of the bag of terms which are not significant. Significance was accessed using the OntoElect rule of 50 percent plus one vote on the normalized scores: the sum of the normalized scores of the retained upper part of the term list is bigger than the sum of the normalized scores of the lower part of the list which was filtered out. The lowest score of the retained terms is given as the significance threshold epsi.
* The absolute termhood difference value was computed assuming that and using the THD algorithm [Tatarintseva et al. (2013)]
* The relative termhood difference value was computed as
Hence, the termhoods were pair-wise compared using thd / thdr metric. The results are presented in Table 1.  

The analysis of the results presented in Table 1 and Fig. 1 reveals:

* Termhood saturation. Starting from the 1994-2009 collection slice, the number of the terms retained in the termhoods does not grow similarly to the earlier slices (Fig. 1(a)). This fact indicates that the termhoods became saturated in terms – i.e. any reasonable addition of the relevant papers to the collection will not substantially change the terminological footprint of the entire collection. This indication is further supported by the behaviour of the thd curve in Fig. 1(b). Indeed, for 2009, 2010, 2012, 2013 slices, the termhood difference is comparable to or even below the score significance threshold eps. Hence, the collection may be considered as saturated and therefore representative with respect to its terminological footprint.  

* Terminological shift in time. The values of thd (Fig. 1(b)), even at the points mentioned above as indicating saturation, are still higher than zero. The reason for that is that the termhoods, extracted from the collection slices organized chronologically, evolve in time – i.e. new significant terms appear in the later papers and possibly some of the terms, introduced in the earlier papers, loose their significance. This terminological shift is an indicator of the continuous development in the field represented by the document collection.   


Table 1.  Pair-wise comparison of the termhoods extracted from the paper collection slices.
Collection SliceTerms  in theepsthd, valuethdr, %Bag of TermsTermhood199485468383.000054.4448100.00001994-19951459711793.169935.980762.38061994-19962399215483.754936.085559.63661994-19973142721044.000023.704435.41531994-19983812221834.754922.434130.79011994-19994278824005.000014.991118.72181994-20004998628215.000017.485320.72871994-20015929434305.000023.187726.90351994-20026562737675.000013.181915.37471994-20037517135845.614725.081036.76631994-20048161738936.00009.600513.82781994-20059169244106.000013.389419.75951994-200610119049036.00009.050212.63761994-200710820352556.00007.32609.89461994-200811549356586.00008.597611.77901994-200912183260076.00006.61749.03021994-201012817155646.30436.34229.08291994-201113791860436.339913.073420.20611994-201214517361096.35495.10338.03951994-201315107562596.66675.48958.7677  

(a) The number of terms retained in the termhoods

(b) Pair-wise termhood difference (thd) and term significance threshold (eps)
Fig. 1.  Graphical representation of the pair-wise termhood comparison (Table 1)
* Terminology contribution peaks.  Fig. 1(b) indicates that the paper collection increments of 2001, 2003, 2005, 2008, and 2011 have contributed substantial additions to the terminology. This fact hints that perhaps the proceedings of the mentioned years contained the papers with most significant impact to the progress beyond the state-of-the-art in the field. If this hypothesis is supported by further analysis, focusing on the papers of this sample will significantly decrease the amount of further work on extracting the opinion of the community about the features of time.
For checking the hypothesis about the terminology contribution peaks the information about the impact of all TIME papers in terms of the number of their citations** has been collected. Based on the citation frequency cfr (the number of citations per year), the impact of each paper in the collection has been computed as: 
	,	(1)
where the square brackets stand for taking integer part. Hence, the contribution of the frequency of citations to the impact of the paper is weighted by 0.2, while the papers having no citations are filtered out. Further, the papers of imp=n have been replicated n times in the respective collection slice increment to magnify their contribution to the termhood according to their impact. Based on these changes in the TIME paper collection the measurement of the thd using the incremental slices was repeated. The graphical interpretation of the results and comparison to the first experiment are pictured in Fig. 2.
As could be seen in Fig. 2, the terminology contribution peaks measured in the experiment accounting for the impact of the papers are perfectly synchronized with the peaks measured in the previous experiment. This proves the hypothesis about the increased terminological contribution of the papers having high impact. It is also worth noting that the thd values of the ‘impact’ slices demonstrate better saturation. 
 

Fig. 2.  The influence of paper impacts on their terminology contribution  
Hence, there is a strong likelihood that focusing only on high-impact papers of the TIME paper collection will allow to:
* Significantly reduce the effort for extracting the features characteristic for the domain
* Still retain the representativeness of the reduced set of papers and extracted set of terms with respect to the implicit opinion of the community. 
   Based on these assumptions, the reduced paper collection has been formed (24 papers in total) by keeping the increments of the years with terminology contribution peaks and filtering out the papers having imp < 2. The bag of terms for this reduced collection has been extracted exactly as in the previous experiments. This term list has been further manually cleaned with 686 terms retained. The terms were also classified as indicated in Table 2††. Each term has been put into only one category. 
Table 2.  The first fourteen terms extracted from the reduced dataset and their classification. The numbers under the categories indicate the total quantities of the corresponding items. 
ScoreTermLogicProblemFormulaFormalismOperatorMethodModelReasonerDomainLanguageFeatureConstraintInstancePatternApplicationProjectAuthorTotal No of terms: 686442763682224148175281131101178147.11temporal logic?100.11calendar pattern?86.54temporal constraint?68.73temporal operator?59.58fuzzy match?52.25temporal structure?49.83calendar schema?46.25temporal representation?41.00temporal reasoning?40.00freeze quantifier?37.73fuzzy interval?36.36xml document?36.00crisp interval?34.00satisfiability problem?
Based on this classification, the taxonomy of temporal features has been further manually developed as shown in Fig. 3. The authenticity of the names was preserved from the abovementioned list to a maximal extent. It would be also wrong to state that the taxonomy covers all the features of time mentioned in the literature completely. Some fragments are also questionable in terms of semantics from the ontology engineering point of view. However, it may be stated that, by its design described above, the taxonomy represents the consolidated opinion of the TIME community about the important temporal features. This taxonomy is further used to structure the discussion as well as to assess the reviewed temporal theories, models, and ontologies in the subsequent sections of the paper.    

3. Theories and Models of Time
In Philosophy and Computer Science, time has been and is being taken as a fundamental aspect in representing and reasoning about change and dynamics. In this paper however we are interested not in the gems of the philosophical thought, but in the theories that are in use – in applications. Many theories comprising a temporal aspect have been developed, covering the contexts of change and actions, events, situations, communication, execution and control, distributed real-time systems, planning and processes, data and information mining, cognitive sciences and linguistics, etc. The most prominent of these theories are [Lamport (1978)](8651)‡‡; [Allen (1983)](7894); [Pinto (1994)](220) based on [Kowalski and Sergot (1986)](1708); [Prior (1967)](1496); [McDermott (1982)](1130); [Sandewall (1995)](404); [Halpern and Shoham (1991)](389); [Bacchus and Kabanza (1998)](230) based on [Alur et al. (1996)](399); [Williams (1986)](198); [Koubarakis (1992)](55); [Iwasaki et al. (1995)](52). A more recent model of time by [Ermolayev et al. (2008a)] is also included in the comparative review as it covers the sentiments of the TIME community quite well.
In this section theoretical temporal frameworks and models of time are reviewed by checking them against the taxonomy of temporal features (Fig. 3). Based on this review, a set of the requirements for a so to say “synthetic” model will be outlined by putting together the models by the mentioned authors to cover the requested features of time to the maximal possible extent§§.    
3.1. High-Level Features of Time
The taxonomy of the high-level temporal features relevant to our discussion is pictured in Fig. 4. These and other important related features have been the subject of philosophical thought since ancient times (see e.g. [Ladyman (2007)]. They are also mentioned in different combinations in many relevant review and survey papers in Computer Science to say broadly, for example [Schreiber (1994)], and more recently [Vila (2005)] in Artificial Intelligence. One important aspect that helps circumscribing the relevant set of features for our analysis is temporal incidence (c.f. [Vila (2005)]):
A temporal formalism generally consists of the two components: (i) a basic theory of time; and (ii) a theory of temporal incidence. A theory of time defines the nomenclature of temporal elements, structures, properties, and the method of their use – e.g. temporal reasoning. The theory of temporal incidence defines the domain-independent properties that influence the truth-value of the propositions over fluents and events throughout time.
It is worth mentioning here that Aristotle is recognized as the first who decoupled time (basic theory) from motion (temporal incidence). He mentioned that time is a quantifiable (numerable) aspect of motion as it is important for the “before – after” ordering [Aristotle (2007)] (book IV, chapter 11). 
Notably, all the theoretical frameworks listed above and reviewed in this paper are the theories of temporal incidence. So, our emphasis will only be put on their parts representing the proposed basic models of time. 


Fig. 4. High-level temporal features
The theories of temporal incidence, however, provide a valid set of requirements for the expressiveness and completeness of the temporal elements and structures operated by these time theories. For example, the feature of TemporalModality (grayed in Fig. 4) is in fact a domain-independent property affecting the truth value of the propositions regarding fluents or events. So, TemporalModality will not be discussed explicitly as a relevant temporal feature. However, is a basic property for introducing branching time in modeling and analysis of real-time and embedded systems (e.g. [Gascon et al. (2011)]) or concurrent execution frameworks (e.g. [Schellhorn (2011)]) – leading to the discussion of clocks and time measures in section 3.5. Furthermore, TimeWarping (also grayed in Fig. 4), the property addressing the possible irregularity of timing in a sequence of events, is also the feature rather belonging to a temporal incidence theory. DynamicTimeWarping is the technique for measuring similarity between two temporal sequences which may be different in time or speed. This technique is extensively used for the analyses of timed series of audio and video in speech, speaker, signature, gesture recognition and also in data mining, robotics, manufacturing, and medicine [Stan and Chan (2007)]. To be put more generally, temporal incidence theories present the requirements, to the models of time, which are demanded in different application areas. These applications will be mentioned in the summary at the end of Section 3.
TIME community suggests (Fig. 4.) that there are several facets of time that need to be dealt with in a comprehensive basic theory, namely: (i) the aspects of openness and anisotropy implying the choice of temporal ordering; (ii) partitioning based on the choice between an absolutist and relativist treatment of time, and further defining time structures; and (iii) periodicity of time. In addition to these, the aspects of: (iv) granularity as an implication of choosing a proper density of time; and (v) time branching; are briefly discussed.
Unbounded versus Bounded Time
A philosophical doctrine about the bounded*** and cyclic nature of time has perhaps been inspired by one of the archaic thoughts describing the evolution of the world – the Heraclitus’es “theory of transmutation”. Heraclitus††† considered that the world was involved in an infinite cycle of birth and death. In this cycle the substance remained essentially unchanged, but transmuted through rarefaction and condensation. Another argument in favor of the cyclic character of time for the antique philosophers was found in their observations of the celestial phenomena. For example, Plato‡‡‡ believed that time was being caused by the revolution of the celestial sphere(s) and emerged with it. 
The representatives of the Atomistic school§§§ were the first to drop the circular view on the nature of time in favor of considering it as not a derivative of celestial sphere motion, but a separate aspect of nature. They stated, stressing the infinity and unboundedness of time, that time was not created – hence, there is no the beginning of time. However, they did not consider time as unbounded (open) in the future. Aristotle**** considered that time could be measured by a uniform circular motion. He concluded that time is infinite, unbounded, and continuous, both in the past and in the future, as a consequence of such a motion.
Sandewall (1995) considers that time is not cyclic. He also suggests that time could, but not necessarily, be bounded and closed at the beginning. For that, his theory allows introducing one distinguished time point zero, called the origo, which has itself as its predecessor, and which is the direct or indirect predecessor of all other time points. Alur et al. (1996) and Pinto (1984) follow this approach by using the set R?0 of the nonnegative real numbers as their time domain – so bounding time at t=0. McDermott (1982) however uses all real numbers to model time points in his theory assuming that time is infinite, both in the past and in the future, and noncircular. The only assumption by Halpern and Shoham (1991), relevant to the unboundedness versus boundedness of time, is that the set of time points that lie between any two points is totally ordered. Therefore, their time model does not specifically choose unboundedness or boundedness. The theory by Prior (1967) also allows both for unbounded and bounded domains of time, depending on the alternatives in logical postulates. Allen (1983), Koubarakis (1992), Iwasaki et al. (1995) base their theories on the assumption of unbounded time.
Summarizing these views, it may be postulated in our synthetic theory that: (i) time is not cyclic; (ii) time is unbounded in the past and future; (iii) in some applications it might be reasonable to introduce a distinguished point of time (e.g. the origo) before which time is not relevant for the application. 
Anisotropy of Time
Regarding the difference between time and space at least the two philosophical systems need to be mentioned: eternalism and presentism (c.f. [Ladyman (2007)] – which landmark the fact that the nature of time is still under an intense debate among philosophers and natural scientists.
The eternalist view postulates that all four dimensions in a space-time continuum are “equal” and time is seen ontologically similarly to any (of the three) space dimension(s), with a consequence that all points in time are “real” and that there is no objective flow of time. Such an approach is sometimes referred to as the four-dimensional "block universe" theory. 
The presentist view assumes that time is anisotropic – i.e.: (i) only present is real; (ii) there is a direction associated with time; and (iii) there is a flow of (the reality in) time in its direction. This approach is advocated based on the observed natural laws – see e.g. [Reichenbach (1971)].  
Pinto (1984) admits as obvious the asymmetry between the end and start functions to reflect temporal asymmetry (anisotropy) of the situation calculus [McCarthy and Hayes (1969)]. Allen (1983), Kowalski and Sergot (1986), Prior (1967), Sandewall (1995), Ermolayev et al. (2008a) are also explicit in postulating the anisotropy of time. Lamport (1978), McDermott (1982), Halpern and Shoham (1991), Alur et al. (1996), Williams (1986), Koubarakis (1992), Iwasaki et al. (1995), though not been explicit in their attitude to this feature, do not state anything opposing the anisotropy of time.  
Summarizing these views, the presentist approach subsuming time anisotropy may be adopted in our synthetic theory.
Partitioning and Structuring of Time 
Aristotle (2007) offered the (absolutist) structuring of time by observing that “present” is the moment (instant) that separates the past from the future. McTaggart (1927) provided a clear philosophical distinction between the absolutist and relativist view on the relationships defining the structure of time, while noting their duality. He wrote that positions in time are distinguished in two ways:
(i) Relativist – B-series.  Each position in time is earlier than and also later than some other positions. 
(ii) Absolutist – A-series. Each position is either past, or present, or future. 
Relativist distinctions between the positions are permanent, while absolutist distinctions change in time. McTaggart (1927) writes: “an event, which is now present, was future, and will be past”, which hints us about using a slider window labeled “Present” over a time line directed from the “Past” to the “Future”. Past and Future are therefore the segments of a time line open (unbounded) on the side of a Present and also at the opposite ends (unbounded and infinite).
Both absolutist and relativist approaches to structure time have been used in temporal theories. The advances of Linguistics and Natural Language Processing in mid 1990s gave rise to the family of non-standard “tense” logics. Among the theories under our review the work by Prior (1967) landmarks the field and considers both the absolutist and relativist view on time structuring. Another group of researches, having interests originating from Natural Sciences and Mathematics, considered that a first order theory is fully sufficient to cope with time. Among them Lamport (1978) and Allen (1983) followed the relativist view, while Sandewal (1995) and also Ermolayev et al. (2008a) combined the expressiveness of both (absolutist and relativist) approaches in their frameworks. The approach leaving any non-standard tense theory aside will be further used in our analysis – to follow the views of the majority.  
McDermott (1982) uses the concept of a time line as a basic structure on which the chronsets, comprising facts and events, are projected for temporal ordering. Sandewall (1995) admits that (optionally) a time line may contain one special time point 0, the origo, which is the only point in time that “… has itself as its predecessor, and which is the direct or indirect predecessor of all other time points.” Having a starting time point on a time line could be useful for the applications in which the times before the origo are irrelevant (e.g. before an artifact has been brought to action).  
Halpern and Shoham (1991) stress the importance of “now”, the current instant of time, in any point-based model temporal theory. By contrast, in their interval-based theory they introduce the notion of a current interval. Alur et al. (1996) formalize the structuring of time in a mixed point-interval-based framework. 
All these structural elements are pictured in Fig. 5. Linearity (total ordering) of time is assumed for any individual time line. 
 Fig. 5. The structure of a time line
Density of Time
The density of time is the feature used to balance the expressive power of the model versus its computational complexity. In the mathematical sense, time is dense iff there is an element of time strictly between any other two distinct atomic elements of time. Different time theories offer different views on this matter. Some use discrete time models – which are sparse, the other employ different kinds of dense number sets at their time domains – rationals, (hyper-)reals. Discrete models give up some expressiveness in favor of making their representations concise and more economic in computation. Dense models focus on more granular and “smooth” time representations to better reflect the continuous nature of the world. 
Sandewall (1995) in the discrete part of his theory postulates that each time point has a unique predecessor. Hence, any two time points (not necessarily different) have a common indirect predecessor. Postulating the discreteness of time further allows him to “convolve” each stable period to a time point, and exclude temporal gaps from consideration. Such an approach is said to be the “most natural to use”, computationally advantageous, and also to allow convenient way of dealing with causal chains. Combined with the use of non-metric time points, such a theory offers a way to reason about scenario overviews in a concise manner. Sandewall also allows dense time representation in the other proposed logic. The least specific among the theories regarding the density of their model is [Halpern and Shoham (1991)]. They state that their framework may be generally applied to discrete, rational (dense), and continuous domains. Prior (1967) also covers sparse and dense time models by offering different flavours of his tense logic.  
Dense time model having rationals as its domain is postulated by Alur et al. (1996) and Koubarakis (1992). Alur et al. (1996) define a language that can constrain the time difference between events only with finite, yet arbitrary, precision. Koubarakis (1992) considers time points identified with the rational numbers, mentioning however that his results still hold if points are identified using reals. 
Among the theories for which the continuity of time is a key premise are: Lamport (1978), Allen (1983), Pinto (1994), Kowalski and Sergot (1986), McDermott (1982), Iwasaki et al. (1995). The reason for their choice is that the applications / phenomena, from which the inspiration is taken, hint that things do not happen discontinuously.  
McDermott (1982) models the continuity of time by having a continuum of instances between any two instants, using reals as the domain for these instances. He postulates that every state has a time of occurrence, a real number, and calls this number a date. Pinto (1984) incorporates the sort T into his model, interpreted as a continuous time line. The sort T is considered isomorphic to the non-negative reals. Iwasaki et al. (1995): use hyper-real numbers as the model of time. They specify a system *R of hyper-real numbers as a system R (reals) extended with infinite numbers of infinitesimal and infinite elements, and closed under addition and multiplication. A significant aspect of *R for their purpose of modelling hybrid discrete/continuous systems is that it gives the notion of infinitesimal differences between two points of time (or quantity values) that are smaller than the difference between any two standard real numbers.
In a summary of these views, it may be stated that the choice of an appropriate density of time is indeed application specific. So, our synthetic theory needs to allow all possible alternatives: discrete, dense, continuous time. 
Order: Linear versus Branching Time
The debate about linear versus branching time approach is in fact about the two aspects related to a theory of time: (i) temporal incidence; and (ii) the ordering established among the basic elements representing time.
Most of the theories standing for branching time, hence subsuming that only partial order is imposed on time elements, are in fact stating that what is branching is not time but event occurrences. Hence, such views, though important for the domains they cover, are not relevant to a basic time theory. 
A topical statement in support of a narrower view of time branching is provided by McDermott (1982), whose key idea in modeling time is the indeterminism of the future. He states in support of choosing a branching model, that “… a chronicle is a complete possible history of the universe, a totally ordered set of states extending infinitely in time. Chronicles branch only into the future”. In fact, such a branching structure is not that of time, but of happenings Ermolayev et al. (2008b). Hence, McDermott continues quite logically that “… rather than have different time lines, we can have one big time line, with some parts invisible in some chronsets …” Pinto (1994) observes that his basic theory, the situation calculus by McCarthy and Hayes (1969), is a temporal logic in which time is seen as a branching structure. The structure of situations is a tree rooted at the initial situation S0. In general, the initial situation S0 is taken as the present time. Hence, each branch that starts in S0 can be understood as a hypothetical future. Pinto extends the language of the basic situation calculus, which is atemporal, by incorporating the basic time theory. Topically, his time theory is a linear temporal logic.
Sandewall (1995) formally allows both branching and linear (non-metric) time in his theory. He represents a special case of a forward-branching time domain, with an origo, using the discrete time structure (Hebrand time): , where T is essentially the set of sequences of the successor-forming symbols Ni, , and  for all i and t. He specifies the case of a linear non-metric time domain with an origo as a special case of Herbrand time with n = 1, that is, , where N is the successor function and < is a total order. Sandewall does not make clear however, what are the requirements for such a branching structure in a basic time theory.  
A somewhat compromise approach has been proposed by Halpern and Shoham (1991). They state that a temporal structure is linear if any two points that are comparable under the symmetric and transitive closure of ? are also comparable under ?, that is, if there is no branching in the forest induced by the structure. This proposal allows the existence of many “parallel” time lines. The clocks associated with these different time lines may operate at different speed and have different granularity – so allowing an adequately expressive treatment of concurrency in distributed systems.  
Allen (1983), Pinto (1994), Kowalski and Sergot (1986), Bacchus and Kabanza (1998), Alur et al. (1996), Williams (1986), Koubarakis (1992), Iwasaki et al. (1995), and Ermolayev et al. (2008a) explicitly state that their model of time is linear, subsuming total ordering. Prior (1967), Sandewall (1995), Halpern and Shoham (1991) offer a possibility to use either a linear or branching model in different fragments of their theories. Lamport (1978) is the only author who did not mention his choice explicitly as he focused on concurrency and clocks. For our synthetic theory the proposal of a relaxed linear time model allowing many parallel time lines by Halpern and Shoham (1991) would be a balanced choice. 
Temporal Uncertainty
Many authors, e.g. Allen (1983), noted that “often, the exact relationship between two times is not known, but some constraints on how they could be related are known”. Further, the values of some time properties need to be known only partially, or more coarsely than provided at the chosen granularity level of the time model. Such a coarseness or incompleteness in facts leads to the necessity to allow uncertainty in the model.    
McDermott (1982), when analyzing frame references attached to an object (frob) or an event, noted that a frob's (frame) position and other features are "fuzzy", that is known only to be within an interval. Hence he called the aggregation of such frobs a fuzzy map, McDermott also stated that this sort of fuzziness appeared entirely due to uncertainty, which degree could be lowered through the accumulation of constraints (c.f. Allen (1983)). He considered that the times of occurrence are not asserted, but constrained. As constraints accumulate, they become more precisely known. This uncertainty in fact is, so to say, a blur of a basic time element, which could be represented using fuzzy membership functions [Zadeh (1965)] – e.g. as suggested in [Ermolayev et al. (2008a)].  
Periodicity in Time 
It has already been argued above that the time is not circular in its nature. Many events however occur periodically. Time measurement by clocks is also done in a circular fashion. Therefore a model of time needs to have the features allowing the mapping of such periodic behaviors on the time line. All the theories under our review are minimalistic in a sense that they do not prevent constructing such mappings, but do not mention them explicitly. Among the theories under review, only Ermolayev et al. (2008a) mention periodic time structures named as sets of periods. Periods  are time intervals corresponding to the occurrences of regular or repeating events. One may consider finite and infinite sets of periods. A(n) (in)finite set of periodsis associated with an event having a(n) (in)finite number of repetitions.    

The comparative summary of the coverage of the high-level features of time (Fig. 4) by the reviewed theories is given in Table 3. The choices outlined for the Synthetic Theory are given in the last column of this table. 
Table 3.  The use of the high-level features of time in the reviewed temporal theories.

                                      Temporal Theory






   Feature of TimeLamport (1978)Allen (1983)Pinto (1994)
- Kowalski & Sergot (1986)Prior (1967)McDermott (1982)Sandewall (1995)Halpern & Shoham (1991)Bacchus & Kabanza (1998)
 - Alur et al. (1996)Williams (1986)Koubarakis (1992)Iwasaki et al. (1995)Ermolayev et al. (2008a)Synthetic TheoryUnbounded (O), Bounded (C), Bounded at the Beginning (Z) OZOCZOOZOCOCZOOOOZAnisotropy++++++Density: Discrete(I), Dense(D), Continuous (R)RRRIDRRIDIDRDDRIIDRPartitioning++++Periodicity++Linear (L), Branching (B)LLLBBLBL*BLLLLLL*Absolutist(A), Relativist(R)RRARARARARUncertainty(U), Fuzziness(F)UUUFFL* stands for a relaxed linearity allowing a number of parallel independent time lines.
3.2. Temporal Elements and Structures
The taxonomy of temporal features (Fig. 6) suggests that the concepts for describing time comprise TemporalElements and TemporalStructures. 



Fig. 6. Temporal elements and structures
A temporal element is a primitive entity used as a building block in a theory. The analysis of the high-level temporal features suggests that these elements for a theory of time are TimePoints and TimeIntervals. The classification of time points and time intervals extracted from the TIME community sentiment is outlined in Fig. 7. 
A temporal structure is a compound construct in a theory built of temporal structures and temporal elements for a particular purpose.  A Calendar is an example (subclass of) of a temporal structure. One of its important functions is to provide a bridge between a linear time line and a cyclic way of assigning values to time points. 


Fig. 7. Time points and intervals
Time Points
Time points (also called instants) are the elements of a time line. An instant t has no duration. An instant has the value reflecting its position on the time line. One possible way to assign values to instants is [Ermolayev et al. (2008a)]:
* The value is negative if the instant is strictly before present (also instant) – i.e. belongs to the past (the segment of a time line – see also below)
* The value equals to zero if the instant is the present
* The value is positive if the instant is strictly after present – i.e. belongs to the future (another segment of a time line)
Another possible way of assigning values to instants, especially for the time lines with an origo, is using non-negative numbers and assigning the zero value to the origo. 
As also noted by Halpern and Shoham (1991), all the reviewed theories but Allen’s (1983) are point-based in the sense that their only elements are time points. 
Except using the CurrentMoment (“now”, “present”), none of the reviewed theories but [Bacchus and Kabanza (1998)] who mention temporal deadlines, go further in specializing their time points, leaving this detail for the temporal incidence theories in the more specific domains of interest. 
Temporal Point-Based Structures
Halpern and Shoham (1991) relax the linearity of a time structure by denoting it as a temporal structure (T, ?), where T is a set of time points and ? is a partial order on T. The only assumptions made in their theory is that it has ‘‘linear intervals”, which implies that for any two points t1 and t2 such that t1 ? t2, the set of points {t: t1 ? t ? t2} is totally ordered. Given this assumption, the set of points induces a forest-like structure with respect to ? . Sandewall (1995) offers a more expressive structure for discrete time. He specifies it as an algebraic structure Tconsisting of a time domain T whose members are called time points, and a finite number of functions and relations on the time points:  – an  immediate predecessor function; < – a transitive precedence relation. For a system with an origo , the following has to hold true: T, , and. Sandewall (1995) also specifies a special case of a forward-branching time structure, with an origo, as:, where T is essentially the set of sequences of the successor-forming symbols Ni, , and  for all i and t. McDermott (1982) denotes chronicles and facts based on time points: “a chronicle is a complete possible history of the universe, a totally ordered set of states extending infinitely in time”; a fact is “a set of states, intuitively those in which it is true”. Koubarakis (1992) also considers points as the only time elements. Intervals in his theory are represented as structures in terms of their endpoints. Halpern and Shoham (1991) formally specify the unboundedness of a temporal structure T by introducing the following condition: T is unbounded if for any point there exist points such that r < s < t. Ermolayev et al. (2008a) define a time line as an abstract axis describing metric time as an Abelian group†††† with respect to addition operation (T,+).
Temporal Intervals and Segments 
Referring to Physics, Allen (1983) points out that, given an event, one can always "turn up the magnification" and look deeper into the structure of this event. Further and by analogy, he infers the decomposability of times into subparts, concluding that “a notion of a time point, which would not be decomposable, is not useful”. He concludes that a model of time based on points does not correspond to our intuitive understanding of time. He however argues that a substitution of time points by very small time intervals can be of use. Hence, Allen (1983) considers time intervals as primitive entities in his framework. Based on intuition, he specifies these elements as those which have duration by referring to a “during” relationship allowing to define the hierarchies of intervals.  
The importance of accounting for time intervals in a theory is admitted by all the other theories under our review. They do not however consider intervals as their primitive elements, but as point-based structures. For example, McDermott (1982) treated time points as the elements representing states, whereas time intervals – as structures (totally ordered convex sets of states). Halpern and Shoham (1991) constructed intervals out of points, denoting by a pair [t1, t2] the closed interval of time points between t1 and t2. Williams (1986) follows this approach and associates a time interval with each episode (e), referring to this interval as to the episode’s temporal extent. This temporal extent of (e) is closed by the end points t– (e) and t+(e). Alur et al. (1996) use the set R?0 of the nonnegative real numbers as time domain. They also construct a time interval as a nonempty convex subset of R?0. It is worth noting that only McDermott (1982) and Alur et al. (1996) mention convexity as a property of their interval sets, though simply inheriting this property from the number set used as their domain for time. 
Alur et al. (1996) further allow that time intervals are open, half-open, or closed; bounded or unbounded – i.e. having one of the following forms: [a, b], [a, b), [a, ?), (a, b], (a, b), (a, ?), where a ? b for a, b  R?0. They also introduce a singular time interval: I is singular iff it is of the form [a, a]; that is, I is closed and l(I) = r(I), where l and r are its left and right endpoints respectively. McDermott (1982) models unboundedness by picking "forever" to be a very long time, equal to the largest number that can be stored on the machine the universe is being simulated on. Ermolayev et al. (2008a) also allow all sorts of interval shapes mentioned by Alur et al. (1996). In addition to these Ermolayev et al. (2008a) introduce special intervals, namely “past” and “future”, which are unbounded and open at their beginning (past) or ending (future) and are closed at the opposite end by the instant of present which slides toward the future. They denote these two special intervals as the segments of time being the representations of the partitioning of a time line. 
Though mentioning the importance of accounting for the imprecision of or lack of certainty in time values (e.g. [Allen (1983)]), none of the reviewed theories, except [Ermolayev et al. (2008a)], offer a way to model these aspects of time in their structures. The latter offers a formal structure using the fuzziness for time intervals. A fuzzy time interval  is denoted as an ordered point-based structure containing the fuzzy set of its beginning time instants, the crisp set of its inner time instants, the fuzzy set of its ending time instants, and the membership function. In fact, this definition is based on the notion of blur of a time instant, formalized using a fuzzy set membership function, and thus allows modeling the imprecision of the beginning and ending of a time interval. 
Temporal Interval-Based Structures
Allen’s (1984) theory is a typed first-order predicate calculus, in which structures the terms into the following categories: (i) terms of type TIME-INTERVAL denoting time intervals; (ii) terms of type PROPERTY denoting propositions that can hold or not hold during a particular time interval; (iii) terms corresponding to objects in the domain. Allen also introduces a basic set of thirteen mutually exclusive primitive relations that can hold between temporal intervals – discussed in more detail in section 3.4. Each of these intervals is represented by a predicate in the logic.
McDermott (1982) identifies an event by a set of time intervals, those over which the event happens once. Ermolayev et al. (2008a) also introduce interval sets using the notion of a phase and period. Phases are the intervals related to a part of an occurrence, while periods are the time intervals corresponding to the repetitions of occurrences.  
Alur et al. (1996) formalize the structuring of time in a mixed point-interval-based framework as follows. An interval sequence = I0, I1, I2, ... is an infinite sequence of time intervals such that: (i) I0, is left-closed and l(I0) = 0; (ii) for all i ? 0, the intervals Ii, and Ii+1 are adjacent; and (iii) every time tR?0 belongs to some interval Ii.
Williams (1986) frames out every episode in a history to encompass the largest contiguous interval of time during which the state variable maintains a single qualitative value. More formally, he states that the time interval associated with an episode el is maximal if there exists no other episode e2 with the same value of the state variable such that el’s temporal extent is a proper sub-interval of e2’s extent. 
Calendar Systems
A few of the reviewed theories propose their structures for calendars and calendar systems.
Allen (1983) denotes a date line as any representation consisting of a fully ordered set of date values mapped to time values and a date comparison operation. He then suggests that a simple calendar could be designed using a date line comprising: (i) date values as ordered triples of integers, representing year, month (1-12), and day (1-31); (ii) the comparison operation which orders date triples in the obvious manner. Allen allows different date lines in a system, reflecting the existence and use of different calendars. If two intervals are dated by the same date line, and have date values specified, those values can be used to calculate the exact relation between the intervals.
Ermolayev et al. (2008a) relate the definition of calendar systems to the use of periodic time interval structures for which they introduce periods and sets of periods. They mention that periods could be used to specify e.g.:  (i) a working week period which contains a working days period and a weekend period; (ii) a year period which contains four different season periods; (iii) a quarter period which contains three different month periods; (iv) a working day period which comprises a period of working time before the lunch, a lunch time period, an after-lunch; etc.  They further denote a calendar as a rule system which sets the relationships among the durations of a year, a month and a day and organizes periods within a year using the concept of a date.

The comparative summary of the coverage by the reviewed theories of the temporal elements and structures featured by the TIME community (Fig. 6 and 7) is given in Table 4. The choices outlined for the synthetic theory are given in the last column of this table.
Table 4.  The summary of the account for the temporal elements and structures in the reviewed theories.

                                    Temporal Theory





  Feature of TimeLamport (1978)Allen (1983)Pinto (1994)
- Kowalski & Sergot (1986)Prior (1967)McDermott (1982)Sandewall (1995)Halpern & Shoham (1991)Bacchus & Kabanza (1998)
 - Alur et al. (1996)Williams (1986)Koubarakis (1992)Iwasaki et al. (1995)Ermolayev et al. (2008a)Synthetic TheoryTemporal Elements               - Points (Instants)+-+++++++++++   - Intervals++++++++      - Convex(C), Non-convex(N)CCCN      - Open (O), Closed (C)OOCOCOCOCCOCOC      - Bounded (B), Unbounded (I)BUBUBUBBUBU      - Fuzzy(F), Crisp (C) CFCFC   - Periodic Temporal Elements+++Temporal Structures   - Point(P)-, Interval(I)-Based StructuresIPIPIPPPIPIPI   - Temporal Segments+++   - Temporal Periods++   - Calendars+++3.3. Temporal Properties
The taxonomy of the temporal properties suggested as important by the TIME community is pictured in Fig. 8. This subsection discusses time granularities and scaling, temporal distances and durations, representation of dates, and time stamps. Temporal relations are reviewed in the subsequent section 3.4. Metrics are analyzed in section 3.5. The properties of temporal contexts are left out of the scope because these are considered to better relate to the theories of temporal incidence. 


Fig. 8. Temporal properties
Time Granularity and Scaling
The importance of having a varying grain of temporal reasoning has been explicitly recognized by Allen (1983) and Sandewall (1995). The rest of the reviewed theories respect this requirement implicitly. Allen offers to use reference durations as a means to represent different scales or common units. Sandewall exploits the combination of non-metric and (chrono)metric time to elaborate concise fragments of different granularity.   
Temporal Distance and Duration
Temporal distance is obviously either the distance between the boundaries in a pair of disjoint time intervals, or the distance between the two time points. Duration is the length of a time interval. Allen (1985) uses reference durations to measure any arbitrary duration by adding a multiplicative factor. Williams (1986) operates with delays (which are temporal distances) in his temporal constraint propagator. He also specifies delays and durations in his time box structure. Ermolayev et al. (2008a) introduce unit time intervals as a scale to measure temporal distances and compute (infer) the values of the time points in a discrete time domain. They also offer an alternative metric for the structures containing the origo. A similar mechanism is used to measure durations. 
Dates
While denoting a date line, Allen (1985) suggests that dates are represented by the ordered triples of integers, representing year, month (1-12), and day (1-31). Ermolayev et al. (2008a) consider a date to be a mapping of a regular or repeating event to the time line, using a particular granularity (years, months, days).
Timestamps
The notion of a time stamp has perhaps been introduced by Sandewall (1995) as the mappings from Hebrand time points to the periods of chronometric time. Such mappings are considered to be useful e.g. to measure the durations of events in their concise representation. To put it broader, a time stamp could be interpreted as a metric reference to a point in (metric or non-metric) time used to distinguish between different time points and measure temporal distances. Williams (1986) noted that a timestamp may contain precise information, in different forms and formats, about the exact times that events occur in the input histories for many digital and quantitative problems. For example, this information may be provided in terms of precise numerical values, upper and lower bounds, algebraic relations, or a total ordering.
3.4. Temporal Relations
Temporal relations are binary‡‡‡‡ properties which hold between the elements and/or structures of a time model. In the context of the theories of time, relations could be further classifies by the types of participating entities: point to point, point to interval, and interval to interval relations. The taxonomy of the temporal relations suggested by the TIME community for our analysis is pictured in Fig. 9.


Fig. 9. Temporal relations
Temporal precedence – a point to point relation – has already been discussed section 3.2 in the context of relativist and absolutist structuring of time and in the review of the point-based structures presented in section 3.3. The relation of a time point being a starting or ending point of the time interval has also been dealt with in section 3.3 while discussing the interval structures in point-based theories. Similarly, the relation used to form infinite sequences will be skipped, as already dealt with in the time periodicity discussion. This section focuses on the review of the interval to interval relations. So, the starting point for it is Allen’s (1984) time intervals.  Firstly, the relations between crisp intervals are reviewed based on the Allen’s work. Then a fuzzy extension for this sort of relations is discussed.
Crisp Interval to Interval Relations 
Allen (1984) in his time interval-based calculus states that the predicates given in Table 5, taken together with their inverses cover all possible needs to relate between two arbitrary intervals in thirteen different ways, mutually exclusive from the others.  
Table 5. Allen’s interval to interval relations.
Pictorial RepresentationPredicate,
[Allen (1984)]Inverse,
[Allen (1984)] Semantics, [Allen (1984)]equal(I1, I2) I1 and I2 are the same intervalbefore(I1, I2)aftertime interval I1 is before interval I2, and they do not overlap in any waymeets(I1, I2)*met-byinterval I1 is before interval I2, but there is no interval between them, i.e., I1 ends where I2 startsoverlap(I1, I2)overlapped-byinterval I1 starts before I2, and they overlapduring(I1, I2)containstime interval I1 is fully contained within I2starts(I1, I2)started-bytime interval I1 shares the same beginning as I2, but ends before I2 endsfinishes(I1, I2)finished-bytime interval I1 shares the same end as I2, but begins after I2 begins* Allen’s meets(I1, I2) relation is similar to the adjacent(I1, I2) relation by Alur et al. (1996) up to their choice of the basic primitive in their theories – intervals and time points respectively. Alur et al. denote their adjacent(I1, I2) relation as follows: two intervals I1 and I2 are adjacent iff: (i) the right end-point of I1 is the same as the left end-point of I2; and (ii) either I1 is right-open and I2 is left-closed, or I1 is right-closed and I2 is left-open.

Table 6 also suggests the correspondences between Allen’s relations and the interval to interval relations pictured in Fig. 9.
Table 6. Mapping interval to interval relations pictured in Fig. 9 to Allen’s relations.
TIME CommunityCorrespondence to [Allen (1984)]AdjacentTomeets OR met-byConsecutiveWith before OR meets OR met-by OR afterDisjointWithbefore OR afterOverlappingWithoverlap OR overlapped-bySubintervalOfduring OR starts OR finishesUnionOf*contains(I1, I2) AND … contains(I1, Ik)* UnionOf is, pragmatically, a relation with the arity higher than 2. 
Fuzzy Interval to Interval Relations 
Among the theories under this review, the only theory of time offering a fuzzy extension of interval to interval relationships is [Ermolayev et al. (2008a)]. An earlier approach too representing vagueness in temporal knowledge has been proposed by [Nagyp?l and Motik (2003)]. The extension by Ermolayev et al. (2008a) first denotes a fuzzy time interval as (see also the discussion of temporal intervals in section 3.2). Further they introduce fuzzy binary relations between fuzzy intervals by adding a “likely” modifier to Allen style relations. Fig. 10 pictures the example of specifying the LikelyMeets relation:, compared to the LikelyBefore relation: .


Fig. 10. Fuzzy interval to interval relations LikelyMeets and LikelyBefore [Ermolayev et al. (2008a)]
3.5. Time Measures and Clocks
As pointed out by many authors, e.g. Lamport (1978), the metric aspect of time has always been a major concern in Computer Science, due to the need to synchronize between different functional units or nodes in a computer system.  A clock is therefore an important part of any digital system. Sandewall (1995) even questions the appropriateness of non-metric time (being one of the core assumptions in his work), “given the importance of clocks in our civilization, as well as the familiar and central role of time in physics”. 
This section discusses how measurement of time is dealt with in different time frameworks. The key features for this discussion, suggested by the TIME community, are pictured in Fig. 11.  


Fig. 11. Temporal measures
A need for a deeper understanding of the metric aspects of time has been called forward primarily by the advances in electronics and distributed digital systems – bringing these systems to the necessity to cope with signal propagation delays (c.f. [Lamport (1978)]). These developments stimulated the elaboration of an appropriate definition of a global time, global and local clocks, logical and physical clocks.
Lamport (1978) denotes an abstract (logical) clock as a function assigning a number to an event, considering this number as a measured time of the occurrence of this event. Further, assuming the Newtonian space-time, he introduces a physical time coordinate and lets Ci(t) denote the reading of the clock Ci at physical time t. He postulates also that these several (local) clocks run continuously, so Ci(t) is a continuous, differentiable function of t except for isolated jump discontinuities where the clock is reset. Hence, dCi(t)/dt represents the rate at which the clock is running at time t. A clock Ci could be regarded as a physical clock if it reflects the physical reality correctly – i.e. runs at approximately the correct rate. So, dCi(t)/dt ? 1 should hold true for all t. Finally, Lambert denotes syncronization between the arbitrary clocks Ci and Cj: Ci(t) ? Cj(t) for all t. Due to the properties of the rates of physical clocks, it is straightforward to consider that the domain for physical time has to be continuous.
Alur et al. (1996) support the choice of a continuous domain for metric time. A timed automaton in their theory operates with a finite set of real-valued clocks. All clocks proceed at the same rate and measure the amount of time that has elapsed since they were started (or reset). Each transition of the automaton may start (or reset) some of the clocks. Each control location of the automaton puts constraints on the values of the propositions and on the values of the clocks: the control of the automaton can reside in a particular location iff the values of the propositions and clocks satisfy the corresponding constraints.
Sandewall (1995) emphasizes one more important facet of time representation in computer systems – the interpretation in a particular use of logic.  He introduces the term of a standard time if temporal elements (and values) are interpreted equally in different uses. The alternative to standard time is to use axiomatically specified time or axiomatic time, where each interpretation has its own time domain, and axioms are used to constrain functions and relations on that domain. He states further that “… any reasonable software program which operates on the temporal information is going to use special purpose mechanisms that are tailored to the characteristic properties of the time domain. Normally, such algorithms and software are based on a standardized time domain, and it is quite implausible that they would use an axiomatic characterization of time directly.”
3.6. Summary
There is no one single basic theory of time, among the reviewed, which covers all the temporal features advised by the TIME community sentiment. However, in their combination the coverage is extensive, though not complete. The major gaps revealed by the comparative analysis are:
* High-Level Features: periodicity in time structures; uncertainty or fuzziness in time instants and intervals
* Temporal Elements: convexity and non-convexity of time intervals; fuzziness in time points and intervals
* Temporal Structures: account for temporal periods, and calendar structures
* Temporal Properties: account for date/time formats
* Temporal Relations:  periodic sub-intervals; fuzzy relations between points, intervals, points and intervals
One possible reason of the lack of the account for these features is that the theories, per se, have to be deliberately minimalistic and concentrate on the core of the matter. Another reason might be that the theories under review are the theories of temporal incidence inspired by particular applications. So they cover the features required in the domains they address. The application domains dealt with by the reviewed theories are mapped in Table 7. 




Table 7.  Application areas dealt with by the reviewed temporal theories.
  
                                      Temporal Theory



  


Application AreaLamport (1978)Allen (1983)Pinto (1994)
- Kowalski & Sergot (1986)Prior (1967)McDermott (1982)Sandewall (1995)Halpern & Shoham (1991)Bacchus & Kabanza (1998)
 - Alur et al. (1996)Williams (1986)Koubarakis (1992)Iwasaki et al. (1995)Ermolayev et al. (2008a)- Planning++++   - Robot planning+- Histories and historical data ++- Process modeling and  process interaction++++- Change++++++- Computer-aided engineering++- Action++++- Real-time systems+++- Behavioral prediction++- Explanation +- Diagnosis+- Simulation++- Hybrid systems+- Natural language processing++

4. Temporal Representation and Reasoning Frameworks
Representing temporal aspects of dynamic entities is a very important issue for knowledge representation. Typically, knowledge bases deal with static properties of classes and objects and dynamic information introduces an additional level of complexity. Extending logics with temporal properties is the topic of the overview in Section 4.1. When temporal information is expressed using qualitative terms (e.g. Allen’s relations) representation must be combined with a reasoning mechanism based on the semantics of qualitative temporal relations. Qualitative temporal reasoning is reviewed in Section 4.2. Semantic Web standards, such as OWL, are the main knowledge representation formalisms in use. Therefore the temporal representations for the Semantic Web are analyzed in Section 4.3, while the related work on querying over such representations is presented in Section 4.4. Finally these representations in the form of implemented ontologies are evaluated in Section 4.5 with respect to the coverage of the temporal features selected in Section 3.
4.1. Logics of Time
Various attempts to present time structure and time properties in a formal way have been undertaken from the logical perspective. The reflection, according to the sentiment analysis of TIME community, of the most elaborated directions of logical representation of time which has been done so far, is shown in Fig. 12.


Abbreviations: 
FOTL – First Order Temporal Logic
LTL – Linear-time Temporal Logic 
MFOTL – Metrical First Order Temporal Logic
NL – Neighborhood Logic
PTL – Propositional Temporal Logic
TL – Temporal Logic
Fig. 12. The hierarchy of temporal logics
A temporal logic is a subclass of modal logics that make use of temporal modalities as the means to impose restrictions on temporal incidence over either time points or time intervals. Depending on the ability to address time points explicitly in logical formulae, temporal logic language can adopt Hybrid Logic operators of satisfaction and binder which explicitly state at what time point a formula becomes true (satisfaction operator), or claims that (binder operator) a formula is true in a current time point. 
According to Fig. 12 the analysis reveals that there can be considered three more or less elaborated models of time, namely: linear and branching discrete time over time points, linear time over intervals. 
Prior (1967) was one of the first to introduce and offer initial axiomatization for the family of Tense Logics. These logics, later renamed to Temporal Logic, gave the start to the research in logical formalization of temporal aspects. Pnueli (1977) obtained expressivity and some decidability results for the Propositional Linear Temporal Logic., Later, Alur and Henzinger (1993, 1994) did a similar work for the Real-Time Logics and Timed PTL. Metric Temporal Logic, which extends a propositional logic with a parameterized operator of relative temporal realization was developed by Koymans (1990).  Montanari and Policriti (1996) proposed the Layered Metric Temporal Logic, which combines several layers of the granularity of time. Sistla (1983) and French (2003) added quantification to PTL by elaborating the Quantified Propositional Temporal Logic. Reynolds (1996) pubished the axiomatization and some undecidability results for First Order Temporal Logic, while Hodkinson et al. (2000) extracted its decidable fragments and called these the Monodic FOTL. Demri and D’Souza (2006) and further Demri (2007) introduced Constraint Linear Temporal Logics. In response to the needs in Distributed Systems and Formal Verification studies, Emerson and Clarke (1980) developed their Computational Tree Logic which has been further refined [Emerson and Clarke (1985)] to deal with for branching time. Alur and Henzinger (1993, 1994) showed that opting for linear but dense time leads to undecidability of the Timed PTL and Metric Temporal Logic.
Representation of the temporal behaviour of a system in temporal logic is often abstract with regard to the real time which we refer to in everyday life, i.e. whenever a starting point is set, the behaviour of the system will be the same. Calendar Logic [Ohlbach and Gabbay (1998)], which is decidable due to the reference to finite time regions, presents a next step towards linking Temporal Logic with real-time calendar systems. Explicit Clock Logic [Harel et al. (1990)] language allows referencing a running global clock in order to specify the behaviour of a real-time system.
With an account to the fact that actions and events take time, Interval Temporal Logics [Moszkowski (1983)]; [Halpern and Shoham (1991)]; [Della Monica et al. (2011)] propose a natural means to express the duration, either in the form of an interval with explicit ends, or of segments for the cases when one or two ends of the interval are open. As shown in [Bresolin et al. (2009)], the maximal decidable fragment of the Halpern-Shoham’s interval logic is a Propositional Interval Neighborhood logic.
Finally, it is worth noting that a temporal logic as a means is considered as an alternative to a specific class of modal logics, namely Dynamic Logics [Pratt (1976)] and Propositional Dynamic Logic [Fischer and Ladner (1977)], which consider each program as a modality and relate a result of some computer program with some modal logic formula, thus forming a description of a dynamic behaviour of a program.
The introduction of Description Logics [Brachman and Schmolze (1985)] for the effective and efficient representation and classification of the hierarchically organized sets of concepts resulted in a boost in research on finding the expressivity/decidability/complexity balance of description logic language constructs [Baader et al. (2003)]. Encouraging results of practical reasoning complexity over large expressive knowledge sets [Baader et al. (2003)] stimulated the research in extending description logic languages with, among other things, temporal constructors. 
Temporal Description Logics (see Fig. 13 for the most frequently mentioned logics by the TIME community) offer some degree of interaction between Description Logics and Temporal Logics constructors. 


Fig. 13. Temporalized description logics
As remarked in [Lutz et al. (2008)], Temporal Description Logics are mainly focused on the representation of the evolution of objects along linear discrete time which is bounded in the past and unbounded towards the future, but there are complexity results for the natural branching model of time, which consists of infinite trees where the root represents the current moment of time and branches represent possible histories (or possible futures). Further, interval-based temporal structures are dealt with in Interval Description Logics, as proposed in [Schmiedel (1990)]; [Artale and Franconi (1998)]. Apart from referencing an abstract time structure, there is a possibility to use time points and intervals explicitly in concept description with the help of concrete domains [Lutz (2001)]; [Lutz (2003)]. 
4.2. Qualitative Temporal Reasoning 
Besides the reasoning support offered by Temporal Description Logics, another form of reasoning can be applied on qualitatively defined temporal intervals. Specifically, if ontology supports the definitions of Allen’s relations between intervals with unknown end-points the semantics of these relations must be represented and supported as well. Asserted relations may imply additional relations or they can be inconsistent.   
The inference of implied relations and inconsistency detection are handled by a reasoning mechanism. In the case of a quantitative representation such a mechanism is not required because temporal relations are extracted from the numerical representations in polynomial time (e.g., using data type comparisons in the case of temporal relations). In the cases where relations are qualitative, the assertions of relations holding between temporal entities (e.g., intervals) restrict the possible assertions holding between other temporal entities in the knowledge base.
For example, the assertion “time point tA is before point tB” imposes a restriction on the arrangement of time points. Also, it imposes a restriction on future assertions (e.g., a new assertion such as: “tA is after tB” contradicts the existing one). Then, reasoning on qualitative spatial or temporal relations can be transformed into a constraint satisfaction problem, which is known to be NP-hard in the general case [Renz and Nebel (2007)]. The worst case complexity appears in certain instances that are neither over-constrained nor under-constrained [Renz and Nebel (2007)].
Reasoning over qualitative temporal relations is achieved using [Renz and Nebel (2007)]:
1. An exponential worst case algorithm that has better performance on the average case
2. Approximation algorithms that are neither complete nor sound but they have polynomial worst case complexity
3. Polynomial time algorithms that are sound and complete by restricting the allowable relations to specific tractable sets.
Inferring implied relations depends on existing relations in the knowledge base and on their semantics. It is achieved by specifying the result of the compositions of existing relations. Specifically, when a relation (or a set of relations) r1 holds between entities A and B, and a relation (or a set of relations) r2 holds between entities B and C then the composition of relations r1 and r2 (denoted as ) is the set of relations (which may contain only one relation) r3 holding between A and C. Typically, compositions of the pairs of relations are stored in composition tables [Renz and Nebel (2007)].
Qualitative relations under the intended semantics may not apply simultaneously for a pair of individuals. For example, given time points tA and tB, tA cannot be simultaneously before and after tB. Typically, in temporal representations (e.g., using Allen’s relations) all basic relations (i.e., simple relations and not disjunctions of relations) are pair-wise disjoint. When the disjunctions of basic relations hold simultaneously, then their set intersection holds. For example, if tA is before or equals tB and simultaneously tA is after or equals tB, then tA equals tB. If the intersection of two relations is empty these relations are disjoint. A consistency check for a set of qualitative relations means verifying if the asserted and implied relations are disjoint.
Reasoning over temporal relations is known to be an NP-hard problem and identification of tractable cases of this problem has been in the focus of many research efforts in the last few years [Renz and Nebel (2007)]. The notion of k-consistency is very important in this research. Given a set of n entities with relations asserted between them imposing certain restrictions, k-consistency means that every subset of these n entities containing at most k of them does not contain an inconsistency. Obviously, when n-consistency holds, there is no inconsistency, but checking for all subsets of n entities for consistency requires exponential time depending on the value of n. Simpler forms of consistency are 2-consistency or arc consistency, (i.e., checking for asserted relations between all pairs of individuals for disjoint relations) and 3-way consistency or path consistency (i.e., checking all triples of the individuals for inconsistencies caused by asserted relations and the compositions of the pairs of relations holding between 3 entities). There are cases where k-consistency for a specific value of k implies strong n-consistency so that a polynomial algorithm that enforces k-consistency also solves the n-consistency problem [Renz and Nebel (2007)]. There also cases where, although k-consistency does not imply n-consistency, there are specific sets of relations Rt (which are the subsets of the set of all possible disjunctions of basic relations R), with the following property: if asserted relations are restricting to this set then k-consistency implies n-consistency and Rt is a tractable set of relations or a tractable subset of R [Renz and Nebel (2007)].
Tractable subsets for point algebra have been identified in [van Beek (1989)]; [van Beek and Cohen (1990)]; [Vilain and Kautz (1986)]. Tractable sets of the Allen’s interval algebra have been identified in [Nebel and Burckert (1995)] and [Krokhin et al. (2003)]. The surveys are presented in [Koubarakis (2006)]; [Renz and Nebel (2007)]. Combining points and intervals for temporal reasoning is analysed in [Jonsson and Krokhin (2004)], while combined reasoning over intervals and their durations is discussed in [Pujari and Sattar (1999)]. Recent results for temporal relations are presented in [Bodirsky and Chen (2009)]. 
4.3 Temporal Representation for the Semantic Web
The OWL-Time temporal ontology§§§§ describes the temporal content, and related concepts, of Web pages and the temporal properties of Web services. Intervals and time points are represented and these representations involve xsd:dateTime datatype supported by OWL. This data type supports the comparison of dates, thus yielding the required ordering relation when specific dates of points are known. 
OWL-Time does not specify how these concepts can be used to represent evolving properties of objects (i.e., properties that change in time) and it does not specify how to reason over qualitative relations of temporal intervals and instants. Thus, apart from language constructs for the representation of time in ontologies, there is still a need for the mechanisms for the representation of the evolution of concepts (e.g., events) in time. This is related to the problem of the representation of time in temporal (both relational and object-oriented) databases. Existing methods in databases rely mostly on temporal Entity Relationship (ER) models [Gregersen and Jensen (1999)] taking into account valid time (the time interval during which a relation holds), transaction time (the time at which a database entry is updated) or both. Also time in databases is represented by time instants, intervals or finite sets of intervals. Related work for infinite and indefinite temporal data is presented at [Cowley and Plexousakis (2000)]; [Koubarakis (1994)].  
The representation of time in OWL differs to that in databases because: (a) OWL semantics is not equivalent to ER model semantics (e.g., OWL adopts the Open World Assumption while database models typically adopt the Closed World Assumption); and (b) relations in OWL syntax are restricted to binary ones in contrast to databases.  
TimeML [Hobbs and Pustejovsky (2003)] also offers a representation of time and a mapping of this representation to DAML-OIL, the predecessor of OWL. 
Representation of time for the Semantic Web can be achieved using Temporal Description Logics (TDLs) [Artale and Franconi (2000)]; [Lutz et al. (2008)], concrete domains [Lutz (2003)], reification [Buneman and Kostylev (2010)] (including reification of properties’ labels [Gutierrez et al. (2005)]), annotation [Udrea et al. (2010)], versioning [Klein and Fensel (2001)], Named Graphs [Tappolet and Bernstein (2009)] and 4D fluents [Welty and Fikes (2006)].
Temporal description logics [Artale and Franconi (2000)]; [Lutz et al. (2008)] extend standard description logics, that form the basis for the Semantic Web standards, with additional constructs such as always in the past, sometime in the future. TDLs offer additional expressive capabilities over non-temporal DLs and retain decidability (with an appropriate selection of allowable constructs). However, they require extending OWL syntax and semantics with the additional temporal constructs (similar to property labelling introduced in [Gutierrez et al. (2005)]). GFO-Time [Baumann et al. (2012)] offers a representation of time using First Order Logic axioms that are covering time and point algebras. Representing information concerning specific time points requires the support for concrete domains, resulting in the proliferation of objects [Artale and Franconi (2000)]. 
Concrete domains [Lutz (2003)] introduce data types and operators based on an underlying domain (such as decimal numbers). The concrete domains approach requires introducing additional data types and operators to OWL. TOWL [Frasinkar et al. (2010)] is an approach combining 4D fluents with concrete domains but not supporting qualitative relations and path consistency checking. It is also not compatible with existing OWL editing, querying and reasoning tools (e.g., Protege, Pellet, SPARQL). 
Apart from TOWL, there are other solutions to extend the syntax and semantics of OWL with temporal classes, roles, and axioms constructors in order to deal with temporalized knowledge. TL-OWL [Kim et al. (2008)] combines OWL constructs with Allen’s interval relations to implement temporalized classes on the top of an interval-based time structure. An extension of OWL called OWL-MeT and the reasoning support for this extension, proposed in [Keberle et al. (2007)], [Keberle (2009)], adds metric temporal modalities on the top of OWL classes. Another prototype temporal description logic reasoner is presented in [G?nsel (2005)] for a different (regarding OWL-MeT) set of temporal modalities.
Temporal RDF [Gutierrez et al. (2005)] proposes extending RDF by the annotation of properties with the information about the time interval they hold on (see Fig.14c). This approach also requires extending the syntax and semantics of the standard RDF, although an implementation based on reification is proposed in [Gutierrez et al. (2005)]. In [Udrea et al. (2010)] annotations are directly supported; reasoning and querying support is implemented as well.  It needs to be noted that Temporal RDF cannot express incomplete information by the means of qualitative relations. In [Hurtado and Vaisman (2006)], Temporal RDF is enhanced with the support for undefined intervals. Temporal RDF is combined with fuzzy logic in [Straccia et al. (2010)]. Temporal annotation of properties [Gutierrez et al. (2005)] is proposed for OWL representation in [Motik (2010)], enhanced with the support for undefined intervals. Querying support for annotated properties is provided as well [Lopes et al. (2010)]. 
Another approach is to extend RDF/OWL repositories with the support for ternary relations. This approach is not directly compatible with the existing OWL standards and cannot be used in conjunction with the available reasoners. However, it it does not add new objects as do the OWL-compatible approaches presented below. Furthermore, its direct support for ternary relations grants faster querying performance [Krieger (2014)].
The versioning approach [Klein and Fensel (2001)] suggests that an ontology may have different versions (one per an instance of time). When a change takes place, a new version is created. Versioning suffers from several disadvantages: (a) changes, even on single attributes, require that a new version of the ontology has to be created – leading to information redundancy; (b) a look-up for events occurred at time instances or during time intervals requires exhaustive searches in multiple versions of the ontology; (c) it is not clear how the relation between evolving classes is represented. Furthermore, ontology languages, such as OWL, are based on binary relations (relations connecting two instances) with no time dimension regarding ontology versions.
Named Graphs [Tappolet and Bernstein (2009)] represent the temporal context of a property by the inclusion of a triple representing the property in a named graph (i.e., a sub-graph into the RDF graph of the ontology specified by a distinct name, see Fig. 14e). The default (i.e. main) RDF graph contains the definitions of interval start and end points for each named graph, so that a temporal property is represented by the start and end points corresponding to the temporal interval that the property holds on. Named graphs are not the part of the OWL specification***** (i.e., OWL constructs are not translated into named graphs) and they are not supported by OWL reasoners. In [Tappolet and Bernstein (2009)] a SPARQL-based temporal query language, combined with an indexing mechanism is introduced applying only to the quantitatively defined temporal intervals.



(a) Reification
(b) N-ary relation as class


(c) Temporal RDF
(d) 4D fluents

(e) Named Graphs
Fig. 14. Various ways to incorporate time in ontologies. Initial N-ary relation worksFor(person1, company1, start1, end1) and its representations (a), (b), (c), (d), (e). 
Reification is a general purpose technique for representing n-ary relations using a language, such as OWL, that permits only binary relations. Specifically, an n-ary relation is represented as a new object that has all the arguments of the n-ary relation as the objects of the properties. For example, if the relation worksFor holds between the objects p (of class Person) and c (of class Company) at time t, this is expressed as worksFor(p, c, t). Using reification in OWL this is expressed as a new object with worksFor, person, company, and t being the objects of properties. Reification causes the creation of the extra class EmploymentDetailsN-aryRelation having all the attributes of the relation as the objects of properties (see Fig. 14a). 
Reification suffers mainly from two disadvantages: (a) a new object is created whenever a temporal relation has to be represented (this problem is common to all approaches based on OWL); and (b) it limits OWL reasoning capabilities [Welty and Fikes (2006)]. Since a relation r is represented as the object of a property, OWL semantics over properties (e.g., inverse properties) is no longer applicable (i.e., the properties of the relation are no longer associated directly with the relation itself). The examples of temporal representation based on reification (the reified temporal relations are named Events or Actions) are presented in [Champin and Passant (2010)]; [Shaw et al. (2009)]. In [Cui et al. (2010)] temporal representation is combined with the application specific SWRL rules for representing clinical narratives. In [Wang et al. (2010)] reification is also used to represent temporal properties and a query language is introduced as well. 
Using an improved form of reification, the n-ary relations approach suggests representing an n-ary relation as two properties each related with a new object (rather than as the object of a property, as reification does). Specifically if person p works for company c for an interval i starting at time s and finishing at e, then the ternary relation worksFor(p, c, i) is represented by introducing an additional object o as follows (see Fig.14b):

worksFor(p, c, i) -->  worksFor(p, o) ? type(o, WorksFor) ? company(o, c) ? interval(o, i) ? starts(i, s) ? ends(i, e)

This approach requires only one additional object for every temporal relation, maintains property semantics, but in comparison with 4D fluents approach below suffers from data redundancy in the case of inverse and symmetric properties (e.g., the inverse of a relation is added explicitly twice instead of once as in 4D fluents). In the case of transitive properties additional triples are introduced as well. Furthermore, domains and ranges of properties have to be adjusted taking into account the class of intermediate objects representing the relation (for example, the worksFor relation in no longer a relation having as object an individual of class Company and subject of class Employee as they are now related to the new class WorksFor).
Similarly property restrictions (e.g., cardinality constraints) cannot be expressed directly on properties and, subsequently, cannot be identified by a reasoner as it is common in OWL ontologies. Instead, restriction checking on properties has to be implemented separately with extra rules as in [Preventis et al. (2014)]. A plug-in for the Protege editor supporting editing of n-ary based temporal ontologies is presented at [Santos et al. (2011)]. A similar tool for both for 4D fluents and n-ary relations has been proposed in [Preventis et al. (2012)]. In [Motik (2012)] RDF and OWL supporting n-ary relations are extended with temporal representation. Querying support is also proposed and implemented. The n-ary relations approach combined with SWRL reasoning rules are used in the SWRL-Temporal ontology††††† for representing quantitatively defined temporal information [O’Connor and Das (2011)]. CNTRO [Cui et al. (2010)] adopts a similar approach, combined with the concepts of time defined in OWL-Time.
Batres et al, (2005) were among the first to encode the 4D (perdurants) using OWL for translating ISO 15926‡‡‡‡‡ part 2 concepts into OWL by applying reification, although OWL semantics differs from that of ISO 15926. To cope with the representation constraints of OWL, Welty and Fikes (2006) introduced a simplified version of the 4D fluents approach, compared to ISO 15926 [West (2011)]. Their approach allows temporal information and the evolution of temporal concepts be represented in OWL. Concepts in time are represented as 4-dimensional objects with the fourth dimension being time (slices). Time instants and time intervals are represented as instances of a TimeInterval class, which in turn is related with the concepts varying in time. Changes occur to the properties of the temporal wholes (or some temporal parts of the wholes [West (2011)]) of the entities. The 4D fluent approach admits the proliferation of objects since it introduces two additional objects for each temporal relation (instead of one in the case of reification and n-ary relations). For example, the temporal employment relation between person p, company c and interval i is represented in OWL using two additional time slice objects as follows (see also Fig. 14d): 

worksFor(p, c, i) --> worksFor(p@i, c@i) ?
? type(p@i, TemporalPart) ? type(c@i, TemporalPart) ?
? temporalPartOf(p@i, p) ? temporalPartOf(c@i, c) ?
type(p, Person) ? type(c, Company) ?
? temporalExtent(p@i, p) ? temporalExtent(c@i, c)

The examples of representations based on 4D fluents are presented in [Batres et al., (2007)]; [Batsakis and Petrakis (2011)]; [Zamborlini and Guizzardi (2010)]. SOWL [Batsakis and Petrakis (2011)] offers the support for qualitative temporal relations using SWRL rules. Anagnostopoulos et al. (2013) present a specialized temporal reasoner in conjunction with the underlying SOWL model.  The MUSING system uses both a 4D fluents based approach and an alternative approach based on extending RDF with temporal annotation [Krieger (2010)] in conjunction with OWL-Time. However, MUSING does not provide any qualitative reasoning support. PROTON [Papadakis et al. (2011)] is based on 4D fluents. This ontology is combined with a situation calculus based reasoner implemented in Prolog. 
4.4. Querying Temporal Information over the Semantic Web
Query languages for RDF and OWL ontological representations, such as SPARQL [Harris and Seaborne (2013)] and SeRQL [Broekstra and Kampman (2003)], form the basis for developing languages for querying temporal information in ontologies and the Semantic Web. Querying temporal information over the Semantic Web using languages such as SPARQL is a tedious task, because of the intermediate objects introduced by the models such as 4D fluents, requiring familiarity with the underlying representation from an end-user. This problem can be addressed by introducing temporal query languages that support operators defining conditions such as the validity time of temporal properties, or Allen’s relations for validity intervals holding for retrieved data.  Related work on the query languages for temporal ontologies includes TOQL [Baratis et al. (2009)], ?-SPARQL [Tappolet and Bernstein (2009)], and T-SPARQL [Grandi (2010)] using 4D fluents, named graphs, and versioning respectively for the representation of temporal information. A temporal query language supporting temporal annotation of ontologies is presented in [Motik (2010)]. In [Batsakis et al. (2011)] a SPARQL-like query language is introduced supporting the SOWL [Batsakis and Petrakis (2011)] spatio-temporal representation model. In [Koubarakis and Kyzirakos (2010)] a spatio-temporal query language for RDF data is proposed representing spatial and temporal information using linear constrains. C-SPARQL [Barbieri et al. (2010)] is a query language for streaming time-stamped (using labelling) RDF data. 
Table 8 presents a comparison of the temporal representation/querying approaches for the Semantic Web surveyed in Sections 4.3-4.4. These approaches are compared with respect to their compliance with the existing Semantic Web standards, the supported language (RDF/S, OWL), compatibility with existing triple stores, and reasoning/querying support. 
Table 8. Comparison of the representations of time for the Semantic Web.
    Approach





CategoryQuintuples [Krieger (2012)]Reification 
of N-ary relations [Noy et al. (2006)]N-ary relations
[Noy et al. (2006)]Annotated RDF 
[Udrea et al. (2010)]
[Straccia et al. (2010)], [Lopes et al. (2010)];
in particular, Temporal RDF [Gutierrez et al. (2005)]Named graphs§§§§§
[Carroll et al. (2005)],
[Tappolet and Bernstein (2009)]4D fluents [Welty and Fikes (2006)]Primitive temporal structureQuintuple

(subject, predicate, object,
start,
end)
Triple

(subject,
predicate,
object)Triple

(subject,
predicate,
object)Triple plus label

(subject, predicate, object) : [t] 
or
(subject, predicate, object) : [s,e]
or, in general, 
(subject, predicate: annotation, object)
(t – valid time, s – starting point of validity, e – ending point of validityQuadruple

(subject,
predicate,
object, 
graph)Triple

(subject,
predicate,
object)W3C compliance NoYesYesYes (labels are allowed)No, although
a de facto standardYesExisting triple stores / Implemented custom solutionCustom store HFC [(Krieger (2013)]All triple storesAll triple storesAll triple stores for [Gutierrez et al. (2005)],
In general - column storesAll quadstoresAll triple storesLevel of operationRDFRDF, RDFS, OWLRDF, RDFS, OWLRDFS (rdfs:label)RDF, RDFSRDF, RDFS, OWLInteraction with a known query languageCustom SPARQL-likeSPARQLSPARQLCustom, SPARQL-likeSPARQL and its syntactical variants 
(?-SPARQL)SPARQL
and its syntactical variants 
(TOQL [Baratis et al. (2009)], [Batsakis et al., (2011b)]] Reasoning support or can OWL reasoner be usedNoYesYesNoNoYes 
(OWL reasoning, SWRL-support as in CHRONOS ([Preventis et al. (2012)], [Anagnostopoulos et al. (2013)], [Preventis et al. (2014)]Highlights 1) No extra objects

2) Query answering speed1) Within OWL

2) N-ary relation becomes a class, hence OWL class axioms are applicable1) Within OWL

2) N-ary relation becomes a (binary) object property, hence OWL object property axioms are applicable1) No extra classes/object properies
2) Use of rdfs:label to store valid time
3) Solid theoretical background (syntax, semantics, inference system, complexity bounds, sketch of query language)1) No extra classes/object properies
2) Use of rdfs:label to store valid time
4D paradigm has solid background in PhilosophyLowlightsBinding to a non-standard store and query languageOne new OWL class per N-ary relationOne new RDF blank node per 
N-ary relationLabels are beyond the scope of OWL reasonersLabels are beyond the scope of OWL reasonersProliferation of objects: two extra objects per one 4D fluent
4.5 Temporal Feature Coverage by the Implemented Ontologies
A question of interest for our analytical review is about the coverage of the temporal features elaborated in Section 2 by the existing implementations of ontologies dealing with time and change. These ontologies could broadly be classified in two groups: general-purpose foundational or upper level ontologies; and focused temporal ontologies. This section analyses only those ontologies for which their encodings in an ontology specification language are available on-line at the time of writing. These ontologies are listed in Table 9. Some other time-related ontologies, e.g. PROTON [Terziev et al. (2006)], TOWL ontology [Frasincar et al. (2010)], MUSING Time ontology [Krieger et al. (2008)], the ontology of socio-cultural time expressions [Wennerberg and Schulz (2010)], CNTRO [Tao et al. (2011)], though published in the past, are no longer available online – so not included in the feature coverage analysis. A concise review of the temporal features for each of the ontologies listed in Table 9 is given further in this section. This review is finally summarized in Table 10 which contains a detailed comparative account of the coverage of the temporal features in the reviewed ontologies, also in the comparison to the features selected for the Synthetic Theory in Section 3.      
Table 9. Implemented ontologies of time.
NameOntology Description, URLLan-guageCode, URLAvailabilityCyc Timehttp://www.cyc.com/platform/researchcycCycLOpenCyc is available at: http://www.cyc.com/platform/opencyc/downloads,
The complete (non-proprietary) content of the Cyc knowledge base is available by registration at http://www.cyc.com/platform/researchcyc Open Cyc – public
Research Cyc – by registration
Enterprise Cyc –proprietarySUMO Temporalhttp://www.ontologyportal.org/SUO-KIFhttp://sigmakee.cvs.sourceforge.net/viewvc/sigmakee/KBs/Merge.kifsource and copyright owned by IEEEDOLCEhttp://www.loa.istc.cnr.it/old/DOLCE.htmlOWLVersion 3.9 of DOLCE2.1-Lite-Plus: http://www.loa.istc.cnr.it/old/ontologies/DLP_397.owlpublicBFOhttp://jowl.ontologyonline.org/bfo.htmlOWL-DLhttp://ifomis.uni-saarland.de/bfo/owlpublicGFO-BThttp://www.onto-med.de/ontologies/gfo/OWLhttp://www.onto-med.de/ontologies/gfo.owlpublicPSI-ULOhttp://isrg.kit.znu.edu.ua/ontodocwiki/index.php/PSI_Upper-Level_ontologyOWL-DLhttp://isrg.kit.znu.edu.ua/ontodocwiki/images/d/dd/PSI-ULO-v.2.3.pdfpublicTimeLinehttp://motools.sourceforge.net/timeline/timeline.htmlRDFhttp://motools.sf.net/timeline/timeline.n3publicOWL-Timehttp://www.isi.edu/~hobbs/owl-time.htmlOWLOWL-Time: http://www.w3.org/2006/timepublicOWL-Time-EntryOWLOWL code of the entry sub-ontology of time. http://www.w3.org/2006/time-entrypublicTimeZonehttp://www.isi.edu/~hobbs/timezonehomepage.htmlOWLThe time zone ontology file. http://www.w3.org/2006/timezonepublicTemporal
AggregatesOWLOWL encodings of the temporal aggregates ontology:  http://www.isi.edu/~pan/damltime/TemporalAggregates.owlpublicReusable TimeKIF, OKBChttp://www.ksl.stanford.edu/ontologies/time/publicPSI-Timehttp://isrg.kit.znu.edu.ua/ontodocwiki/index.php/PSI_Core_Time_ontologyOWL-DLNot publicly availableproprietary, CDNSAKT Time http://projects.kmi.open.ac.uk/akt/ref-onto/OCMLhttp://projects.kmi.open.ac.uk/akt/ref-onto/support-ocml-v1.0-paper.htmlpublicSOWLhttp://www.intelligence.tuc.gr/lib/downloadfile.php?id=403OWLhttp://www.intelligence.tuc.gr/prototypes.php******publicSWRL Temporal Ontologyhttp://protege.cim3.net/cgi-bin/wiki.pl?SWRLTemporalOntologyOWLhttp://swrl.stanford.edu/ontologies/built-ins/3.3/temporal.owlpublicCyc Time 
Cyc time model is an integral part of the Cyc knowledge base [Lenat (1995)]. It provides rich descriptive means for representing the TimeInterval collection, various relations based on Allen’s interval relations, and temporally-related collections suc as TemporallyExistingThings, TemporalThings, TemporalStuffTypes, TemporalObjectTypes, Situations, Events etc. A TimePoint is considered as subcollection of TimeInterval having infinitely small duration. 
TimeIntervals are crisply related. StartingPointFn and EndingPointFn functions help reason about the beginning ending instants of a TimeInterval. The ontology also allows specifying uncertain beginnings and endings of TimeIntervals using StartingIntervalFn and EndingIntervalFn functions. Uncertain interval to interval relations in Cyc are partially supported, for example using the nearlySimultaneously relation which can be applied to Events. More details on the coverage of the temporal features by Cyc are given in Table 10.
Time in the Suggested Upper Merged Ontology
The Suggested Upper Merged Ontology (SUMO) has been developed in an effort to provide richly axiomatized definitions for general-purpose terms and act as a foundation for more specific domain ontologies. As reported by Niles and Pease (2001a), the SUMO was created by merging publicly available ontological content [Niles and Pease (2001b)] into a single, comprehensive, and cohesive structure. SUMO has been used as one of the starter alternatives in the IEEE effort to develop the Standard Upper Ontology. 
SUMO is organized in a hierarchy of modules. The top level is formed by its Structural Ontology. The next lower level contains the Base Ontology which specifies the temporal aspects of SUMO. It is stated [Niles and Pease (2001a)] that regarding the temporal features Allen’s (1984) axioms are implemented. However, an analysis of the ontology itself and also its mapping†††††† to the DAML-Time ontology reveals that the Temporal module of SUMO addresses the majority of our temporal features.    
The root time-related concept of this ontology is a time position which is any time point or time interval along the universal timeline from negative infinity to positive infinity.  Hence, a timepoint and a time interval are subsumed by a time position. A temporal parthood relation holds on time positions. A timepoint is linked to itself through the relations before and earlier. A time interval has duration, starting (beginFn) and ending (EndFn) points. This ontology specifies years, months, days, years and minutes. Proper intervals, open intervals and convex intervals are not explicitly specified. Though not explicitly stated in the publications, continuous and linear time is assumed by the ontology. 
Time in the Descriptive Ontology for Linguistic and Cognitive Engineering
The Descriptive Ontology for Linguistic and Cognitive Engineering (DOLCE) is the part of the Library of Foundational Ontologies developed in the WonderWeb project. It claims to capture the ontological categories underlying natural language and human common sense. 
In DOLCE [Masolo et al. (2003)], Temporal Locations subsume to Temporal Qualities which are considered as individual Qualities – the basic entities that can be perceived or measured like colors, weights, etc.  Their corresponding Qualia describe the positions, e.g. values, of an individual Quality within a certain conceptual space (a quality space). For Temporal Locations the corresponding Qualia are Temporal Regions. For example, a Temporal Quality of an event occurrence is its Temporal Location. The corresponding Quale is a region in the temporal space – e.g. a Time Interval subsumed by a Temporal Region. Such an abstract specification in fact allows having a homogeneous approach that remains neutral about the other properties of the temporal space which could be adopted in more detailed ontologies using DOLCE as their foundation. In particular, DOLCE does not enforce the adoption of either linear, or branching, or even circular time. From the other hand, DOLCE, as a very abstract and high-level ontology, remains deliberately minimalistic in specifying any other features of time except mentioned above (see also Table 10).
Time in the Basic Formal Ontology
The Basic Formal Ontology (BFO) is also the part of the WonderWeb Library of Foundational Ontologies. It is an ontology that aims at reconciling the so-called 3D and 4D views. It therefore consists of the two components: Snap and Span ontologies. Snap is the ontology of endurants which is used to characterize static views of the world. Span is the ontology of perdurants – e.g. happenings and occurrents.  
In BFO [Masolo et al. (2003)] time aspects are represented in the Span part of the ontology. BFO considers the whole of time as an entity in its own right and any of its parts, similarly to DOLCE, as a temporal region (either extended or instantaneous). Without offering any formalism, BFO regards time as a continuum following the approach of [Brentano (1976)], being one of the dimensions of a four-dimensional manifold of space-time. Temporal regions are substrata of locations for every Span entity (and for Span entities only). A region is located in itself in the corresponding dimension and every Span entity has a unique location in time (and also in space-time). In BFO, a temporal slice is a temporal part located at an instant of time. More generally, temporal parts, also called phases, are spatio-temporal parts which are distinguished only in the temporal dimension. Processual entities are said to occur at a time when they have a temporal slice which is located at this time. A little bit more formally, time-related elements of BFO are as follows:
* Time: designates an individual: the whole of time
* Temporal Location: LT(x, t) means that t is the temporal region at which x is (uniquely) located. It is an exact temporal location.
* Temporal Region: TR(x) means that x is a region of time, i.e. a part of time which may be extended or instantaneous (a time instant), connected to various degrees or scattered
* Temporal Instant: TI(x) means that x is an instant of time, i.e. a maximally strongly connected boundary of a temporal region
* Temporal Location at an Instant: ILT(x, t) means that x is temporally located at t and that t is an instant of time
* Temporal Co-location: CoLT(x, y) means that x and y are located at the same temporal region
* Temporal Subsumption: SbLT(x, y) means that x temporally subsumes y, i.e., the temporal location of y is a part of the temporal location of x
* Temporal Part: TP(x, y) means that x is a temporal part of y, i.e., x is a part of y such that all parts of y temporally co-located with x are parts of x
* Temporal Slice: TS(x, y) means that x is a temporal slice of y, i.e., x is an instantaneous temporal part of y
Basic Time in the General Formal Ontology 
As presented in [Baumann et al. (2012)], the basic theory of phenomenal time (BT) in the General Formal Ontology (GFO) is abstracted from real-world entities and is inspired by the ideas of Franz Brentano [Brentano (1976)]. Abstract phenomenal time consists of intervals, named chronoids, and of time boundaries, i.e., time points. Both are primitive concepts, where time boundaries depend existentially on chronoids. Only chronoids are subject to temporal parthood, and Allen’s interval relations apply to them. Every chronoid has exactly two boundaries, which can be understood as the first and last time point of it. Further, chronoids are truly extended and have infinitely many inner time boundaries that arise from proper sub-chronoids.
Time in the PSI Upper-Level Ontology
PSI Upper-Level ontology (PSI-ULO) has been developed [Ermolayev et al. (2008c)] in the Performance Simulation Initiative (PSI) project by Cadence Design Systems as the foundational part of the PSI Suite of Ontologies [Ermolayev et al. (2009)]. PSI-ULO assumes that time is open, anisotropic, linear, and discrete as it is based on the PSI theory of time [Ermolayev et al. (2008a)] in its temporal part. In this ontology a TimeInterval concept is denoted as a segment of time. At the level of abstraction of the PSI-ULO no more specific properties of a TimeInterval and no specializations of a TimeInterval (like bounded or unbounded, closed or open time intervals) are specified. A TimeInterval subsumes to a Holon in the sense that any TimeInterval could be a (structural) part of another TimeInterval and contain other TimeIntervals as its proper (structural) parts. No temporal properties of a TimeInterval exist as far as a TimeInterval is itself a basic entity (together with a TimeInstant being a point in time having no extent) for specifying temporal properties of other types of entities.
OWL-Time Ontology and Time Markup Language
OWL-Time [Hobbs and Pan (2004)], formerly DAML-Time, the current W3C recommendation [Hobbs and Pan (2006)], has been developed for describing the temporal content of Web pages and the temporal properties of Web services. OWL-Time is also available in its simplified form OWL-Time-Entry. It also has separate extensions:
* TimeZone – specifies time shifts for different geographical zones 
* TemporalAggregates – provides the means to model regular periodic temporal structures [Pan (2005)] 
OWL-Time is the underlying namespace for the Time Markup Language (TimeML, [Hobbs and Pustejovsky (2003)]). Besides that, OWL-Time is extensively reused in other ontologies as their temporal module.  
OWL-Time ontology is based on the introduction of the two subclasses of the TemporalEntity concept: Instant and Interval. Intervals are understood as the things with extent having interior points. An Instant – denoted as a point in time having no interior points – can be also thought of as an Interval with zero extent – i.e. where the beginning and end are the same. 
In OWL-Time, hasBeginning and hasEnd are the relations between Instants and TemporalEntities. The beginnings and ends of TemporalEntities, if they exist, are unique. A positively infinite interval is specified to have no end, and a negatively infinite interval has no beginning. 
To represent duration, a predicate durationOf is specified. This predicate takes eight arguments: one argument for a temporal thing with extent plus and one argument each for years, months, weeks, days, hours, minutes, and seconds. A specific concept called a DurationDescription is further defined together with a number of functions relating this description to the values of each of the eight arguments of the durationOf. Thereby the 8-ary predicate durationOf is converted into eight binary relations fitting for been coded in a language such as OWL. Two different sets of properties for DateTimeDescription and DurationDescription are used because their ranges are different.
The means for specifying date and time formats in OWL-Time include the following properties of a DateTimeDescription: unitType, year, month, week, day, dayOfWeek, dayOfYear, hour, minute, second, and timeZone. The property unitType specifies the temporal unit type of the datetime description, and its domain is TemporalUnit.
TimeLine Ontology
The TimeLine ontology [Raimond and Abdallah (2007)] specifies temporal primitives for the domain of digital music. It is centered around the TimeLine concept. Each object of digital music having a temporal extent (signal, video, performance, work, etc.) can be associated to a TimeLine. Then, a number of partitions in the terms of the Interval and Instant concepts can be defined on this TimeLine using the onTimeLine property. Intervals and Instants are defined identically to the OWL-Time ontology. 
The TimeLine ontology defines the AbstractTimeLine concept and further specializes it by a reference to corresponding domains represented as XML-Schema datatypes: 
* ContinuousTimeLine – the universal time line backing an analog signal
* DiscreteTimeLine – the time line backing a digital signal 
* RelativeTimeLine – semi-infinite time line representing a canonical coordinate system – adressed using xsd:duration since the instant 0
Intervals and Instants on these specific types of the AbstractTimeLine receive similar prefixes to their names. An Instant defined on a TimeLine may be linked to a literal in the corresponding XSD datatype. Such restrictions are captured within the ontology using the sub-properties of the at property constrained to one particular datatype – for example atInt, atReal, atDigital. The property for mapping a timestamp on a universal TimeLine to the XSD date/time value is atDateTime. The values of time may be specified with different granularity using atYear, atMonth, atDateTime properties.
The ontology allows the co-existence of different TimeLines of arbitrarily different types. Two TimeLines may be linked together using the TimeLineMap concept. For example, the UniformSamplingMap concept subsumes to the TimeLineMap and captures the fact that a digital TimeLine is a sampled version of an analogue TimeLine, holding also the information about the sampling frequency. 
The TimeLine ontology specifies the relationships between Intervals and their beginning and ending Instants using the ranges of properties beginsAt… and endsAt… with suffixes pointing to the particular type of the TimeLine. Finally, it offers some means to model durations and delays with respect to different types of TimeLines. 
Reusable Time Ontology
The Reusable Time ontology [Zhou and Fikes (2002)] has been developed at Stanford’s Knowledge Systems Laboratory in an effort to provide a descriptive formal theory of time for knowledge engineers to reuse in the other ontologies. It has been made compatible with the DARPAs High Performance Knowledge Base (HPKB) Upper-Level-Kernel ontology [Cohen et al. (1998)].  The ontology assumes that time is continuous and linear. A special axiom on time instants is introduced to specify density. The domain for time is the set of real numbers – i.e. Reusable Time postulates having a continuous time line which is open both in the past and future. Time instants (Time-Point) and intervals (Time-Interval) are the core temporal entities specified in the ontology.  
Time-Point is specified as the class of time points on the time line corresponding to real numbers on the number line. In order to address time infinity, two specific instances of the Time-Point concept: Infinite-Past and Infinite-Future are defined. Time line partitioning is specified by introducing also a “point zero”. The Location-Of function maps a Time-Point to a time quantity that is the amount of time from “point zero” on the time line to the Time-Point. Time quantity is also used to determine binary relations between Time-Points: Before, After, and Equal-Point.
Time-Interval is the class of sets of two or more time points representing temporal extents. The ontology allows that the intervals of time may be: open, half-open, and closed; convex and non-convex. To model periodicity, a Regular-Non-Convex-Time-Interval is introduced as a subclass of a Non-Convex-Time-Interval. Time-Point and Time-Interval are disjoint classes.
A primitive relation Point-In-Interval is specified with domain Time-Point and range Time-Interval. Each time interval has two distinguished points called the Starting-Point and the Ending-Point. The ontology also denotes three basic functions on the Time-Interval domain: Starting-Point (range Time-Point), Ending-Point (range Time-Point), and Duration (range Time-Quantity). 
The entire set of 13 Allen relations are specified on Time-Interval as well as the relations defined in the HPKB-Upper-Level-Kernel ontology for compatibility. In difference to [Allen (1984)], these definitions are based on the comparisons of their starting points and ending points.
Calendar model uses the subclasses of a Convex-Time-Interval: Calendar-Month and Calendar-Day. Further, a Calendar-Month has 12 subclasses, a Calendar-Month-January through a Calendar-Month-December; a Calendar-Day subsumes a Calendar-Day-1 through a Calendar-Day-31, and a Calendar-Sunday through a Calendar-Saturday.
In Reusable Time, granularity is specified only for time points. It is assumed that a time point with a particular level of granularity is a single time point with the uncertainty that it may be anywhere in a particular time interval. Hence, the Granularity-Of function is defined on domain Time-Point with range Time-Granularity representing different granularities as the instances. Time granularity model in Reusable Time ontology reuses the model from the Physical-Quantities ontology belonging to the Ontolingua library‡‡‡‡‡‡. A Time-Quantity class is specified as a subclass of the Physical-Quantity from this library ontology. A time quantity is an “amount” of time that is represented by a real number and a time unit. Several functions: Year-Of, Month-Of, Day-Of, Week-Day-Of, Hour-Of, Minute-Of, and Second-Of – are defined for the corresponding units of time applied to the value of the Location-Of function yielding different granularities. 
PSI-Time Ontology
PSI-Time ontology [Ermolayev et al. (2008a)] has been developed in the Performance Simulation Initiative (PSI) project by Cadence Design Systems as a part of the PSI Suite of Ontologies [Ermolayev et al. (2009)]. PSI-Time is one of the core ontologies in the PSI Suite providing temporal elements for the models of dynamic engineering design processes [Ermolayev et al. (2006)]. These models have been used in process simulations aimed to assess performance in microelectronic design.
PSI-Time ontology implements the medium expressivity model of time [Ermolayev et al. (2008a)] which means that fuzziness of time is not included in the ontology. In this model time is considered open at both ends, linear, discrete, and anisotropic. The time point of the present is introduced, which slides on the time line towards the future. The ontology implements both relativist and absolutist views on the relationships among time elements. The ontology comprises the specification of the point-to-point, point-to-interval and interval-to-interval relationships. The relationships between intervals are denoted in the spirit of the Allen’s time interval calculus, but account for the different basic temporal element (time instant in PSI-Time versus Allen’s time interval). PSI-Time also includes the means to cope with durations, periodic intervals of time, and interval phases. The latter two in fact allow representing both convex and non-convex intervals.   
The central concept of the PSI-Time ontology is TimeInstant which models the point in time. The values of TimeInstants are of DateTime type which corresponds to the standard datatype property provided by OWL. The TimeLine is the aggregation of these TimeInstants structured in three time segments: the Past, the Present, and the Future. TimeIntervals are modeled as the sets of TimeInstants and could be open, half-closed, or closed. A BeginningInstant, a (possibly empty) set of InnerInstants and an EndingInstant are distinguished in the structure of a TimeInterval.  Both bounded and unbounded time intervals are supported. 
Time in PSI is metric. The ontology specifies the concepts of a Duration and a UnitTimeInterval as a means to cope with the required measurements in process modelling and simulation.
AKT Time Ontology
The definitions of the AKT Time Ontology are the part of the AKT Support Ontology. AKT support Ontology has been developed to support the AKTive Portal demonstrator and other scientific knowledge management activities in the EPSRC Advanced Knowledge Technologies (AKT) project. The time-related part of this ontology is stated to be minimalistic, but providing all the features necessary for the project. The root concept in this ontology is time-entity which is an intangible thing. This topmost and generic concept subsumes both time-intervals and time-points. The specification of a time-entity contains the set of properties denoting a time stamp and allowing different granularities: year-of, month-of, day-of, hour-of, minute-of, and second-of with their domains in the corresponding classes: year-in-time to second-in-time. A specific concept of a calendar-date is introduced as a specialization of a time-point for which only year-of, month-of, and day-of are specified. The ontology also specifies the duration of a temporal-thing in relation with its has-start-time and has-end-time properties. A time-difference function is also denoted to return a time-interval between the two time-entities.
The concept of a temporal-thing denotes something which has a temporal extent. Its properties are: has-duration in time-intervals, has-start-time and has-end-time in time-points. 
SWRL Temporal Ontology
SWRL-Temporal [O’Connor and Das (2011)] defines a temporal model for representing interval based information in OWL. SWRL-Temporal offer definitions for granularity by defining class Granularity, which has instances Years, Months, Days, Hours, Minutes, Seconds, and Milliseconds and durations using class Duration, with  two functional properties: hasCount with integer range and granularity property with a range of Granularity. Valid time of facts is represented using class ValidTime, which in turn has a hasGranularity property with a range of Granularity. Subclasses of ValidTime are ValidInstant and ValidPeriod, representing instants and intervals respectively.  ValidTime has a hasTime datatype property with dateTime range, while ValidPeriod has datatype properties hasStart and hasFinish with dateTime range representing the beginning and the end of the corresponding interval. SWRL Temporal Ontology has the class ExtendedProposition for representing entities that extend over time. This class associates the valid time of the temporal entity using the hasValidTimes property with a range of ValidTime. In addition, SWRL-Temporal contains SWRL build-ins for temporal reasoning. These build-ins can be used for checking if predicates comparing a specific duration with that of a validity interval (e.g., durationLessThan, durationEqualTo) hold true. Similar predicates are used for checking whether or not an Allen’s relation holds between two intervals. Those SWRL build-ins are allied on specific dateTime values, thus SWRL-temporal does not support qualitative defined intervals.
SOWL Ontology
SOWL ontology [Batsakis and Petrakis (2011)] attempts to overcome the problems of some previous approaches, such as TOWL [Frasincar et al. (2010)] (i.e., TOWL was not OWL compatible, and it didn’t support the representation of qualitatively defined intervals), by offering a W3C complaint solution for temporal representation.. In SOWL dates are represented using dateTime datatype and SWRL rules are used for temporal reasoning. Temporal concepts are defined using OWL-time ontology. 4D fluents is the model used for representing dynamic objects through the use of the TimeSlice class and tsTimeSlice property. An alternative version based on n-ary relations is proposed as well in [Anagnostopoulos et al. (2013)]. Allen relations are asserted as object properties between intervals, even if exact dates are not available. In addition to that a reasoning mechanism based on path-consistency has been implemented using SWRL for inferring implied relations and checking the consistency of temporal assertions. Reasoning is sound, complete and tractable for the supported set of interval relations [Batsakis and Petrakis (2011)]. In addition to the abovementioned reasoning support, the querying support to SOWL by adding temporal operators on top of SPARQL is proposed in [Batsakis et al. (2011)]. Specifically, Batsakis et al. (2011) elaborate a query language based on SPARQL which offers temporal operators such as AT(time-instance) with the corresponding temporal representation.
Table 10. The coverage by the implemented ontologies (Table 9) of the features of time (Section 2) chosen for the Synthetic Theory (Section 3).
Foundational 
or Upper-Level OntologiesOntologies of TimeSynthetic theory                        Ontology of Time




Feature of TimeCyc TimeSUMO TimeDOLCEBFOGFO-BTPSI-ULOOWL-TimeTimeLineReusable TimePSI-TimeAKT TimeSWRL Temporal SOWLTemporal FeaturesOZ   - Open (O), Closed (C), Closed 
      at the Beginning  (Z) OOOOZOOO+   - Anisotropy++++IDR   - Density: Discrete(I), 
     Dense(D), Continuous (R)DRDIDRRI+   - Partitioning+*1*2+++   - Periodicity+L*3   - Linear (L), Branching (B)LLLLLLLAR   - Absolutist (A), Relativist (R)ARARARARARAARF   - Uncertainty(U), Fuzziness (F)UF*4F*4U*5FUNotes:*1 Time - the whole time; Temporal Region - the part of time*2 TimeLine only*3 A relaxed linearity allowing a number of parallel independent time lines*4 Fuzzy duration. E.g. TimeML introduces the tags for the lower bound and upper bound duration annotations (lowerBoundDuration and upperBoundDuration attributes). *5 For Time-Points onlyTemporal Elements+   - Points (Instants)+++++++++++++   - Intervals++*6*6+++++++++CN      - Convex(C), Non-convex(N)CCNCCOC      - Open (O), Closed (C)CCOCCOCOCOCCCBI      - Bounded (B), Unbounded (I)BIBBIBIBI*7BIBIFC      - Fuzzy(F), Crisp (C) CCCCCCFC+   - Periodic Temporal Elements*8+Notes:*6 Temporal Region, Time Interval subsuming to Temporal Region*7 Two instances of Time-Point: Infinite-Past and Infinite-Future*8 (Regular-)Non-Convex-Time-Interval Temporal Structures PI   - Point(P)-, Interval(I)-Based PIIPIIPIPPIPI+   - Temporal Segments+++   - Temporal Periods*9*10++   - CalendarsiCal+iCalNotes:*9 In the TemporalAggregates extension*10 (Regular-)Non-Convex-Time-Interval Temporal PropertiesM   - Metric(M), Non-metric(N) TimeMMMMMM+   - Scale Factors§§§§§§+   - Dates+++++++++   - Date Formats+++   - Granularity++++++++   - Temporal Distance*11*12++   - Duration++++++++++   - Timestamps+*13+*14+++Notes:*11 Delay*12 Location-Of - distance from point zero*13 Temporal Location*14 XSD date/timeTemporal RelationsA*15+RE+fuzzy extension   - Interval-Interval RelationsA*15A*15A*15A*15A*15A*15A*15      - Disjoint*16*16*16*16*16*16*16*16      - Overlapping*16*16+*16*16*16*16*16      - Consecutive*16*16*16*16*16*16*16*16      - Adjaicent*16*16*16*16*16*16*16*16      - Meets*16*16+*16*16*16*16*16      - Union*16*16*16*16*16*16*16*16      - Subinterval*16*16*17+*16*16*16*16*16         - Proper (R), Periodic(E)  
           SubintervalRRE*18      - Fuzzy(F), Crisp(C) RelationsCCCCCFC+   - Interval-Point Relations++++++SIE      - Start (S), Middle (I), End (E) 
        PointsSESIEI*19SIESIESESIESIESESECF      - Fuzzy(F), Crisp(C) RelationsFCCCCCCCCFC+   - Point-Point Relations+++++++CF      - Fuzzy (F) and Crisp (C) 
        RelationsCCCCCCFCNotes:*15 “A” stands for Allen’s Interval Calculus relations implementation*16 There is a mapping to this relation from the Allen's as defined in Table 6*17 Temporally subsumes*18 All intervals in PSI-Time are proper intervals*19 Temporal SliceTemporal MeasuresS   - Standard (S), Axiomatic (A) TimeSSSSGL   - Global (G), Local (L) ClocksDLE   - Duration (D), Location (L), 
     Delay (E)DDLLDDEL*20L*21DE
*22DNotes:*20 Relative to point zero*21 Relative to Present*22 Time difference
The first column of Table 10 contains the choices of Temporal Features made for the Synthetic Theory in Section 3. The gray-shaded cells in the other columns indicate the coverage of these features by the overviewed implemented ontologies. The coverage has been indicated for the Ontologies of Time only as the Foundational Ontologies do not possess anything extra in feature coverage, compared to the Ontologies of Time. The analysis of the topology of the gray-shaded cells under the Ontologies of Time reveals: 
* There is no a single ontology that covers all the features
* All the ontologies taken together do not satisfactorily cover some features: (i) density of time; (ii) relaxed linearity of time; (iii) scale factors; (iv) proper and periodic subintervals; (v) temporal measures and clocks
* Some of the ontologies offer a unique contribution to the coverage: (i) TimeLine – provides the time line which is closed at its beginning; (ii) ReusableTime – specifies convex and non-convex time intervals; (iii) SOWL – most fully represents uncertainty and fuzziness in time, also in all sorts of relations; (iv) PSI-Time – provides temporal periodic structures and segments; (v) SWRL Temporal ontology – contributes with date formats
* All the reviewed Ontologies of Time, except the TimeLine and AKT, are based on both time points and time intervals. TimeLine is interval-based. AKT ontology is point-based. 
* None of the reviewed ontologies explicitly mention the coverage of a non-metric (e.g. Hebrand) time
* Those ontologies that specify the relationships among time intervals do that based on the Allen’s Interval Calculus
5. Concluding Remarks
The objective of this analytical review was to find out if the theories, models, and ontologies of time, that are available to date, offer a sufficient expressive power and coverage to deal with all aspects and features of time in Computer Science, in particular in Semantic Technology and Artificial Intelligence. 
To figure out what is the representative set of the Features of Time, a concise representation of the opinion of these communities was extracted and represented in a structured form.  For the reconstruction of the community sentiment, the materialized product (the collection of scientific papers) of the community members was processed. TIME community has been selected as the most fitting provider of the document collection for our analysis.  
This TIME document collection has been assessed for its representativeness, and further used to extract the characteristic set of time features which constitute the opinion of TIME authors developed in the last two decades. The flat list of terms has been extracted from the document collection as described in Section 2. This term list has been further manually cleaned with 686 terms retained. The terms were also classified as indicated in Table 2. One of the classification groups was the “Features” of time containing 175 members. The terms belonging to this group were further analyzed and the taxonomy of the Temporal Features suggested by the TIME community sentiment has been built as pictured in Fig. 3. This taxonomy has been further used to structure the discussion as well as to assess the reviewed temporal theories, models, and ontologies in the subsequent sections of the paper.
Further, the most prominent theories of time have been reviewed regarding the set of extracted temporal features in Section 3. The theories have been chosen based on the number of their citations and also by the potential coverage of the extracted features. It has been noted that all the reviewed theories were in fact the theories of temporal incidence. So, attention has been paid only to their parts representing the basic models of time. 
The analysis revealed that there was no one single basic theory of time, among the reviewed, which covers all the temporal features advised by the TIME community sentiment. However, in their combination the coverage was extensive, though not complete. The major gaps revealed by the comparative analysis were:
* In the High-Level Features: periodicity in time structures; uncertainty or fuzziness in time instants and intervals
* In Temporal Elements: convexity and non-convexity of time intervals; fuzziness in time points and intervals
* In Temporal Structures: account for temporal periods, and calendar structures
* In Temporal Properties: account for date/time formats
* In Temporal Relations: periodic sub-intervals; fuzzy relations between points, intervals, points and intervals
One possible reason for the lack of the account for the temporal features is that a theory, per se, has to be deliberately minimalistic. Another outlined reason was that the theories under review were the theories of temporal incidence inspired by particular applications. So they covered the features required in the domains they address. It should however be noted that the application coverage by the reviewed theories, as pictured in Table 7, was sufficiently complete with respect to the focus of this review in Semantic Technologies and Artificial Intelligence.
As a result of the analysis of the temporal theories, a set of requirements for a Synthetic Theory of time has been outlined. This combination of feature choices was further used to check the expressive power, in the terms of coverage, of the existing logical frameworks, implemented declarative languages, and ontologies in Section 4. The languages and ontologies were also analyzed regarding their usability in the terms of compliance to existing standards or recommendations. 
In addition, reasoning and querying support were also the factors taken into account in the analysis. Since OWL offers its direct support only to binary relations, all W3C compliant solutions, such as reification and 4D fluents, suffer from the proliferation of objects, which is not the case for approaches such as quintuples and annotated RDF.  On the other hand, the W3C compliant approaches offer reasoning and querying support and they can be combined with the existing tools (e.g., triple stores, editors, SPARQL query engines and reasoners) thus being more useful in practice than the solutions that are not W3C compliant.
Finally, the ontologies covering temporal aspects, implemented in an ontology specification language, have been selected for the analysis based on their current availability for re-use. These ontologies, listed in Table 9, were grouped as Foundational or Upper-Level and Ontologies of Time. As summarized in Table 10, the analysis of the coverage of the temporal features by these ontologies revealed that: 
* There is no a single ontology that covers all the features
* All the ontologes taken together do not satisfactorily cover some features: (i) density of time; (ii) relaxed linearity of time; (iii) scale factors; (iv) proper and periodic subintervals; (v) temporal measures and clocks
* Some of the ontologies offer a unique contribution to the coverage of certain features
The results of the presented analytical review hint that:
* The available temporal logics and languages possess sufficient expressive power for potentially covering the temporal features demanded by the community sentiment 
* A cross-disciplinary effort is required to address the features not covered by the existing ontologies of time. For example, the results in formal verification and distributed run-time systems could be useful to cover the representations of clocks and measures of time.
* A harmonization effort is required to put together all the contributions of the individual ontologies to cover the set of temporal features in a harmonized and more complete way  
Acknowledgements
The research leading to this paper has been done in frame of the EU FP7 Marie Curie IRSES SemData project (http://www.semdata-project.eu/), grant agreement No PIRSES-GA-2013-612551.
References
Allen, J. (2013): Maintaining knowledge about temporal intervals. CACM, 26(11), pp. 832–843.
Allen, J. (1984): Towards a General Theory of Action and Time. Artificial Intelligence, 23(2), pp. 123–154.
Alur, R.; Henzinger T. A. (1993): Real-time logics: Complexity and Expressiveness. Information and Computation, 104(1), pp. 35–77.
Alur, R.; Henzinger, T. A. (1994): A Really Temporal Logic. J. ACM, 41(1), pp. 181–204.
Alur, R.; Feder, T.; Henzinger, T. A. (1996): The benefits of relaxing punctuality. J.ACM, 43(1), pp. 116–146.  
Anagnostopoulos, E.; Batsakis, S.; Petrakis, E. G. M. (2013) CHRONOS: A Reasoning Engine for Qualitative Temporal Information in OWL. Procedia Computer Science, 22, pp. 70–77.
Aristotle (2007): Physics. Translated by R. P. Hardie and R. K. Gaye, eBooks@Adelaide.
Artale, A.; Franconi, E. (1998): A Temporal description logic for reasoning about actions and plans. J. Artificial Intelligence Research, 9, pp. 463–506.
Artale, A.; Franconi, E. (2000): A Survey of Temporal Extensions of Description Logics. Annals of Mathematics and Artificial Intelligence, 30(1), pp. 171–210.
Baader, F.; Calvanese, D.; McGuinness, D. L.; Nardi, D.; Patel-Schneider, P. F. (2003): The Description Logic Handbook: Theory, Implementation, Applications. Cambridge University Press, Cambridge, UK.
Bacchus, E.; Kabanza, F. (1998): Planning for Temporally Extended Goals. Annals of Mathematics and Artificial Intelligence, 22, pp. 5–27.
Baratis, E.; Petrakis, E. G. M.; Batsakis, S.; Maris, N.; Papadakis, N. (2009): TOQL: Temporal Ontology Querying Language. 11th Int’l Symp. on Spatial and Temporal Databases (SSTD’2009), pp. 338–354.
Barbieri, D. F., et al. (2010): C-SPARQL: a continuous query language for rdf data streams. Int’l J. Semantic Computing, 4(1), pp. 3–25.
Batres, R.; West, M.; Leal, D.; Price, D.; Masaki, K.; Shimada, Y.; Fuchino, T.; Naka, Y. (2007): An Upper Ontology Based on ISO 15926. Computers and Chemical Engineering, 31(5-6), pp. 519–534.
Batsakis, S.; Petrakis, E. G. M. (2011): SOWL: A Framework for Handling Spatio-Temporal Information in OWL 2.0. 5th Int’l Symp. on Rules: Research Based and Industry Focused (RuleML’ 2011), pp. 242–249.
Batsakis, S.; Stravoskoufos, K.; Petrakis, E.G.M. (2011): Temporal Reasoning for Supporting Temporal Queries in OWL 2.0. 15th Int’l Conf. on Knowledge-Based and Intelligent Information and Engineering Systems (KES’2011), 6881, pp. 558–567.
Baumann, R.; Loebe, F., Herre H. (2012): Ontology of Time in GFO. 7th Int’l Conf. on Formal Ontologies and Information Systems (FOIS’2012), pp. 293–306.
Bodirsky, M.; Chen, H. (2009): Qualitative Temporal and Spatial Reasoning Revisited. J. Logic and Computation, 19, pp. 1359–1383.
Brachman, R. J.; Schmolze, J. G. (1985): An Overview of the KL-ONE Knowledge Representation System. Cognitive Science, 9(2), pp. 171–216.
Brentano, F. (1976): Philosophische Untersuchungen zu Raum, Zeit und Kontinuum, hrsg. von S. Krner und R. M. Chisholm. Meiner, Hamburg.
Bresolin, D.; Goranko, V.; Montanari, A.; Sciavicco, G. (2009): Propositional interval neighborhood logics: Expressiveness, decidability, and undecidable extensions. Annals of Pure and Applied Logic, 161(3), pp. 289–304.
Broekstra, J.; Kampman, A. (2003): SeRQL: A Second Generation RDF Query Language. European Workshop on Semantic Web Storage and Retrieval (SWAD’03), pp. 13–14.
Buneman, P.; Kostylev, E. (2010): Annotation Algebras for RDFS. 2nd Int’l Workshop on the Role of Semantic Web in Provenance Management (SWPM’10).
Carroll, J.J.; Bizer, C.; Hayes, P.; Stickler, P. (2005): Named Graphs, Provenance and Trust. WWW’05, pp. 613–622.
Champin, P.A.; Passant, A. (2010): SIOC in Action Representing the Dynamics of Online Communities. 6th Int’l Conf. on Semantic Systems, pp. 1–7.
Cohen, P.; Schrag, R.; Jones, E.; Pease, A.; Lin, A.; Starr, B.; Gunning, D.; Burke, M. (1998): The DARPA High-Performance Knowledge Bases Project; AI Magazine, 19(4), pp. 25–50.
Cowley, W.; Plexousakis, D. (2000): Temporal Integrity Constraints with Indeterminacy. 26th Int’l Conf. on Very Large Data Bases (VLDB'00), pp. 441–450.
Cui, T.; Wei, W.-Q.; Solbrig, H.R.; Savova, G.; Chute, C.G. (2010): CNTRO: a Semantic Web Ontology for Temporal Relation Inferencing in Clinical Narratives. AMIA Annual Symp. (2010), p. 787.
Della Monica, D.; Goranko, V.; Montanari, A.; Sciavicco, G. (2011): Interval Temporal Logics: a Journey. Bulletin of the EATCS, 105, pp. 73–99.
Demri, S. (2006): Linear-time temporal logics with Presburger constraints: an overview. J. Applied Non-Classical Logics, 16(3-4), pp. 311–348.
Demri, S.; D’Souza, D. (2007): An Automata-Theoretic Approach to Constraint LTL. J. Information and Computation, 205(3), pp. 380–415.
Emerson, E. A.; Clarke, E. M. (1980): Characterizing correctness properties of parallel programs as fixpoints. Int’l. Colloq. Automata Lang. and Programming, 1980, pp. 169–181.
Emerson, E.A.; Clarke, J.Y. (1985): Decision procedures and expressiveness in the temporal logic of branching time. J. of Computer and System Sciences, 30(1), pp. 1–24.
Ermolayev, V.; Jentzsch, E.; Karsayev, O.; Keberle, N.; Matzke, W.-E.; Samoylov, V.; Sohnius, R. (2006): An Agent-Oriented Model of a Dynamic Engineering Design Process. Agent-Oriented Information Systems III. Revised Selected Papers, LNCS 3529, pp. 168–183.
Ermolayev, V.; Keberle, N.; Matzke, W.-E.; Sohnius, R. (2008): Fuzzy Time Intervals for Simulating Actions. 2nd Int’l. Conf. Information Systems and Business Technologies (UNISCON’08), LNBIP 5, pp. 429–444.
Ermolayev, V.; Keberle, N.; Matzke, W.-E. (2008): An Ontology of Environments, Events, and Happenings. 31st IEEE Annual Int’l Computer Software and Applications Conf’ (COMPSAC’08), pp. 539–546.
Ermolayev, V.; Keberle, N.; Matzke, W.-E. (2008): An Upper-Level Ontological Model for Engineering Design Performance Domain. 27th Int’l Conf. on Conceptual Modeling (ER 2008), LNCS 5231, pp. 98–113.
Ermolayev, V.; Jentzsch, E.; Keberle, N.; Sohnius, R. (2009): Performance Simulation Initiative. The Suite of Ontologies v.2.2. Reference Specification. Technical Report PSI-ONTO-TR-2007-5, 04.03.2009, VCAD EMEA Cadence Design Systems, GmbH, 133 p.
Fischer, M.; Ladner, R.(1979): Propositional dynamic logic of regular programs, J. Computer and System Sciences, 18, pp. 194–211.
Frantzi, K.; Ananiadou, S.; Mima, H. (2000): Automatic recognition of multi-word terms. Int’l J. Digital Libraries 3(2), 117–132.
Frasincar, F.; Milea, V.; Kaymak, U. (2010): tOWL: Integrating Time in OWL. Semantic Web Information Management: A Model-Based Perspective, pp. 225–246.
French, T. (2003): Quantified Propositional Temporal Logic with Repeating States. 10th Int’l Symp. on Temporal Representation and Reasoning, 4th Int’l Conf. on Temporal Logic (TIME-ICTL’03), pp. 155–165.
Gascon, R.; Mallet, F.; Deantoni, J. (2011): Logical Time and Temporal Logics: Comparing UML MARTE/CCSL and PSL. 11th Int’l Symp. on Temporal Representation and Reasoning (TIME’11), pp.141-148.
Grandi, F. (2010): T-SPARQL: a TSQL2-like Temporal Query Language for RDF. Int’l Workshop on Querying Graph Structured Data, pp. 21–30.
Gregersen, H.; Jensen, C.S. (1999): Temporal Entity-Relationship Models - a Survey. IEEE Trans. On Knowledge and Data Engineering, 11(3), pp. 464–497.
Gutierrez, C.; Hurtado, C.; Vaisman, A. (2005): Temporal RDF. 2nd European Semantic Web Conference (ESWC’05), pp. 93–107.
Halpern, J. Y., Shoham, Y. (1991): A Propositional Modal Logic of Time Intervals. J. ACM 38(4), pp. 935–962.
Harel, E.; Lichtenstein, O.; Pnueli, A. (1990): Explicit clock temporal logic. 5th Annual Symp. on Logic in Computer Science, pp. 402–413.
Harris, S.; Seaborne, A. (2013): SPARQL 1.1 Query Language for RDF. W3C Recommendation 21 March 2013.
Hobbs, J. R.; Pan, F. (2004): An Ontology of Time for the Semantic Web. ACM Transactions on Asian Language Processing (TALIP): Special issue on Temporal Information Processing, 3(1), pp. 66–85.
Hobbs, J.R.; Pan, F. (2006) Time Ontology in OWL. Ontology Engineering Patterns Task Force of the Semantic Web Best Practices and Deployment Working Group, World Wide Web Consortium (W3C) notes. Available at: http://www.w3.org/TR/owl-time/ 
Hobbs, J.; Pustejovsky, J. (2003): Annotating and reasoning about time and events. AAAI Spring Symposium on Logical Formalizations of Commonsense Reasoning, 3. 
Hodkinson, I.; Wolter, F.; Zakharyaschev, M. (2000): Decidable fragments of first-order temporal logics. Annals of Pure and Applied Logic, 106, pp. 85–134.
Hurtado, C.; Vaisman, A. (2006): Reasoning with Temporal Constraints in RDF. Principles and Practice of Semantic Web Reasoning, 4187, pp. 164–178.
Iwasaki, Y.; Farquhar, A.; Saraswat, V.; Bobrow, D.; Gupta, V. (1995): Modelling Time in Hybrid Systems: How Fast Is 'Instantaneous'? 14th Int‘l Joint Conf. on Artificial Intelligence (IJCAI‘95), pp. 1773–1781.
Jonsson, P.; Krokhin, A. (2004): Complexity Classification in Qualitative Temporal Constraint Reasoning. Artificial Intelligence, 160(1-2), pp. 35–51.
Keberle, N.; Litvinenko, Y.; Gordeyev, Y.; Ermolayev, V. (2007): Ontology evolution analysis with OWL-MeT. Int‘l Workshop on Ontology Dynamics (IWOD‘07), pp. 1–12.
Keberle, N. (2009): Temporal Classes and OWL. OWLED’09.  
Kim, S.-K.; Song, M.-Y.; Kim, C.; Yea, S.-J.; Jang, H.C.; Lee, K.-C. (2008): Temporal Ontology Language for Representing and Reasoning Interval-Based Temporal Knowledge. 3rd Asian Semantic Web Conference on the Semantic Web. 5367, pp. 31–45. 
Klein, M.; Fensel, D. (2001): Ontology Versioning on the Semantic Web. Int’l Semantic Web Working Symp. (SWWS), pp. 75–91.
Koubarakis, M. (1992): Dense Time and Temporal Constraints with ?. 3rd Int’l Conf. on Principles of Knowledge Representation and Reasoning (KR), pp. 24–35.
Koubarakis, M. (1994): Database Models for Infinite and Indefinite Temporal Information. Information Systems, 19(2), pp. 141–173.
Koubarakis, M. (2006): Temporal CSPs. Handbook of Constraint Programming, pp. 666–697.
Koubarakis, M.; Kyzirakos, K. (2010): Modeling and querying metadata in the semantic sensor web: The model stRDF and the query language stSPARQL. The semantic web: research and applications, pp. 425–439.
Kowalski, R. A.; Sergot, M. J. (1986): A Logic-based Calculus of Events. New Generation Computing, 1(4), pp. 67–95.
Koymans, R. (1990): Specifying real-time properties with metric temporal logic. Real-time Systems, 2(4), pp. 255–299.
Krieger, H.-U.; Kiefer, B.; Declerck, T. (2008): A Framework for Temporal Representation and Reasoning in Business Intelligence Applications. AI Meets Business Rules and Process Management. Papers from AAAI 2008 Spring Symposium, SS-08-01, pp. 59–70.
Krieger, H.-U. (2010): A General Methodology for Equipping Ontologies With Time. 7th Int’l Conf. on Language Resources and Evaluation (LREC'10), pp. 3165–3172.
Krieger, H.-U. (2012): A Temporal Extension of the Hayes/ten Horst Entailment Rules and an Alternative to W3C’s N-ary Relations. FOIS-2012, pp. 323–366 .
Krieger, H.-U. (2014): A Detailed Comparison of Seven Approaches for the Annotation of Time-Dependent Factual Knowledge in RDF and OWL. 10th Joint ACL-ISO Workshop on Interoperable Semantic Annotation.
Krokhin, A.; Jeavons, P.; Jonsson, P. (2003): Reasoning About Temporal Relations: The Tractable Subalgebras of Allen's Interval Algebra. J. ACM, 50(5), pp. 591–640.
Ladyman, J. (2007): Ontological, Epistemological, and Methodological Positions. General Philosophy of Science: Focal Issues, pp. 303–376.
Lenat, D.B. (1995): CYC: A Large-Scale Investment in Knowledge Infrastructure. Comm. ACM, 38(11), pp. 33–38
Lamport, L. (1978): Time, Clocks and the Ordering of Events in a Distributed System. Comm. ACM, 21(7), pp. 558–565.
Lopes, N.; Polleres, A.; Straccia, U.; Zimmermann, A. (2010): AnQL: SPARQLing up Annotated RDFS. The Semantic Web – ISWC 2010, 6496, pp. 518–533.
Lutz, C. (2001): Interval-based Temporal Reasoning with General TBoxes. 17th Int’l Joint Conf. on Artificial Intelligence (IJCAI’01), 2083, pp. 121–136.
Lutz, C. (2003): Description Logics with Concrete Domains - A Survey. Advances in Modal Logics, 4, pp. 265-296.
Lutz, C.; Wolter, F.; Zakharyashev, M. K. (2008): Temporal Description Logics: A Survey. 15th Int’l Symp. on Temporal Representation and Reasoning (TIME’08), pp. 3–14.
Masolo, C.; Borgo, S.; Gangemi, A.; Guarino, N.; Oltramari, A. (2003): WonderWeb Deliverable D18. Ontology Library (final).
McCarthy, J.; Hayes, P. J. (1969): Some Philosophical Problems from the Standpoint of Artificial Intelligence. Machine Intelligence, 4, pp. 463–502.
McDermott, D. (1982): A Temporal Logic for Reasoning about Processes and Plans. Cognitive Science, 6, pp. 101–155.
McTaggart, J.M.E. (1927): The Nature of Existence. Vol. II. Cambridge Univ. Press, Cambridge.
Montanari, A.; Policriti, A. (1996): Decidability Results for Metric and Layered Temporal Logics. Notre Dame Journal of Formal Logic, 37(2), pp. 260–282.
Moszkowski, B. (1983): Reasoning about digital circuits. Tech. rep. stan-cs-83-970.
Motik, B. (2010): Representing and Querying Validity Time in RDF and OWL: a Logic-Based Approach. The Semantic Web – ISWC 2010, 6496, pp. 550–565.
Motik, B. (2012): Representing and querying validity time in RDF and OWL: A logic-based approach. Web Semantics: Science, Services and Agents on the World Wide Web, 12, pp. 3–21.
Nagyp?l, G.; Motik, B. (2003): A Fuzzy Model for Representing Uncertain, Subjective and Vague Temporal Knowledge in Ontologies. On The Move to Meaningful Internet Systems 2003: CoopIS, DOA, and ODBASE, 2888, pp. 906–923.
Nebel, B.; Burckert, H. J. (1995): Reasoning About Temporal Relations: A Maximal Tractable Subclass of Allen's Interval Algebra. J. ACM, 42(1), pp. 43–66.
Niles, I.; Pease, A. (2001): Towards a standard upper ontology. Int’l Conf. on Formal Ontology in Information Systems (FOIS’01), pp. 2–9.
Niles, I.; Pease, A. (2001): Origins of the IEEE Standard Upper Ontology, Working Notes of the IJCAI-2001 Workshop on the IEEE Standard Upper Ontology, pp. 37–42.
Noy, N.; Rector, A., Hayes, P.; Welty, C. (2006):  Defining N-ary Relations on the Semantic Web. W3C Working Group Note 12 April 2006. Available at: http://www.w3.org/TR/swbp-n-aryRelations/
O’Connor, M. J.; Das, A. K. (2011): A method for representing and querying temporal information in OWL. Biomedical engineering systems and technologies, pp. 97–110.
Ohlbach, H. J.; Gabbay, D.M. (1998): Calendar Logic. J. of Applied Non-Classical Logics, 8(4), 291–323.
Pan, F. (2005): A temporal aggregates ontology in OWL for the semantic web. AAAI Fall Symposium on Agents and the Semantic Web, pp. 30–37.
Papadakis, N.; Stravoskoufos, K.; Baratis, E.; Petrakis, E. G. M.; Plexousakis, D. (2011): PROTON: A prolog reasoner for temporal ontologies in OWL. Expert Systems with Applications, 38(12), pp. 14660–14667.
Pinto, J. (1994): Temporal Reasoning in the Situation Calculus. PhD thesis, University of Toronto.
Pnueli, A. (1997): The temporal logic of programs. 18th Annual Symp. on Foundations of Computer Science, pp. 46–57.
Pratt, V. (1976): Semantical Considerations on Floyd-Hoare Logic. 17th Annual IEEE Symposium on Foundations of Computer Science, pp. 109–121.
Preventis, A.; Polyxeni, M.; Petrakis, E. G. M.; Batsakis, S. (2012): CHRONOS: A Tool for Handling Temporal Ontologies in Prot?g?. IEEE 24th Int’l Conf. on Tools with Artificial Intelligence (ICTAI’12), 1, pp. 460–467.
Preventis, A.; Petrakis, E. G. M.; Batsakis, S. (2014): CHRONOS Ed: A Tool for Handling Temporal Ontologies in Prot?g?  Int. J. Artif. Intell. Tools, 23(4), 2014.
Prior, A. (1967): Past, Present and Future. Clarendon Press, Oxford.
Pujari, A. K.; Sattar, A. (1999): A New Framework for Reasoning About Points, Intervals and Durations. Int’l Joint Conf. On Artificial Intelligence, 16, pp. 1259–1267.
Raimond, Y.; Abdallah, S. (2007): The Timeline Ontology. Reichenbach (1971) Reichenbach, H. (1971): The Direction of Time. University of California Press, Berkeley, CA.
Renz, J.; Nebel, B. (2007): Qualitative Spatial Reasoning using Constraint Calculi. Handbook of Spatial Logics, pp. 161–215.
Reynolds, M. (2006): Axiomatising First-Order Temporal Logic: Until and Since over Linear Time. Studia Logica, 57, pp. 279–302.
Sandewall, E. (1995): Features and Fluents (Vol. 1): The Representation of Knowledge about Dynamical Systems. Oxford University Press, Inc., New York, NY. 
Santos, J.; Braga, L.; Cohn, A. G. (2011): FONTE: A Protege Plug-in for Engineering Complex Ontologies. Enterprise Information Systems, pp. 222–236.
Schellhorn, G.; Tofan, B.; Ernst, G.; Reif,W. (2011): Interleaved Programs and Rely-Guarantee Reasoning with ITL. 18th Int’l Symp. on Temporal Representation and Reasoning (TIME’11), pp. 99–106.
Schmiedel, A. (1990): Temporal terminological logic. 8th Nat’l Conf. on Artificial Intelligence (AAAI-90), pp. 640–645.
Schreiber, F. A. (1994): Is Time a Real Time? An Overview of Time Ontology in Informatics. Real Time Computing, F 127, pp. 283–307. 
Shaw, R.; Troncy, R.; Hardman, L. (2009): Lode: Linking Open Descriptions of Events. The Semantic Web, pp. 153–167.
Sistla, A. P. (1983): Theoretical Issues in the Design and Verification of Distributed Systems. PhD thesis. Harvard University.
Stan, S,; Chan,P. (2007): Toward accurate dynamic time warping in linear time and space. Intelligent Data Analysis, 11(5), pp. 561–580.
Straccia, U.; Lopes, N.; Lukacsy, G.; Polleres, A. (2010): A General Framework for Representing and Reasoning with Annotated Semantic Web Data. 24th AAAI Conf. on Artificial Intelligence (AAAI-10).
Tao, C.; Solbrig, H. R.; Chute, C. G. (2011): CNTRO 2.0: A Harmonized Semantic Web Ontology for Temporal Relation Inferencing in Clinical Narratives. AMIA Summits Transl Sci Proc., pp. 64–68.
Tappolet, J.; Bernstein, A. (2009): Applied Temporal RDF: Efficient Temporal Querying of RDF Data with SPARQL. 6th European Semantic Web Conference (ESWC’09), 5554, pp. 308–322.
Tatarintseva, O.; Ermolayev, V.; Keller, B.; Matzke, W.-E. (2013): Quantifying Ontology Fitness in OntoElect Using Saturation- and Vote-Based Metrics. ICT in Education, Research, and Industrial Applications. Revised Selected Papers of ICTERI 2013, 412, pp. 136–162.
Terziev, I.; Kiryakov, A.; Manov, D. (2005): Base upper-level ontology (BULO) Guidance. SEKT deliverable D.1.8.1.
Udrea, O.; Recupero, D. R.; Subrahmanian, V. S. (2010): Annotated RDF. ACM Trans. Comput. Logic, 11(2).
van Beek, P. (1989): Approximation Algorithms for Temporal Reasoning. 11th Int’l Joint Conf’ on Artificial Intelligence, 2, pp. 1291–1296.
van Beek, P.; Cohen, R. (1990): Exact and Approximate Reasoning about Temporal Relations. Computational Intelligence, 6(3), pp. 132–144.
Vila, L. (2005): Formal theories of time and temporal incidence. Handbook of Temporal Reasoning in Artificial Intelligence, pp. 1–24. Elsevier, Amsterdam.
Vilain, M.; Kautz, H. (1986): Constraint Propagation Algorithms for Temporal Reasoning. 5th Nat’l Conf. on Artificial Intelligence, pp. 377–382.
Wang, Y.; Zhu, M.; Qu, L.; Spaniol, M.; Weikum, G. (2010): Timely YAGO: Harvesting, Querying, and Visualizing Temporal Knowledge from Wikipedia." 13th Int’l Conf. on Extending Database Technology (EDBT’10), pp. 697–700.
Welty, C.; Fikes, R. (2006): A Reusable Ontology for Fluents in OWL. 4th Int’l Conf. on Formal Ontology in Information Systems (FOIS 2006), pp. 226–336.
Wennerberg, P.; Schulz, K. (2010): An ontology of socio-cultural time expressions. AAAI Spring Symposium It’s All in the Timing: Representing and Reasoning About Time in Interactive Behavior, pp. 62–66.
West, M. (2011): Developing High Quality Data Models. Morgan Kaufmann, 2011.
Williams, B. C. (1986): Doing Time: Putting Qualitative Reasoning on Firmer Ground. AAAI, pp. 105–112.
Zadeh, L. (1965): Fuzzy Sets. Information and Control, 8, pp. 338–353.
Zamborlini, V.; Guizzardi, G. (2010): On the Representation of Temporally Changing Information in OWL. 14th IEEE International Enterprise Distributed Object Computing Conference Workshops (EDOCW’10), pp. 283–292.
Zhou, Q.; Fikes, R. (2002): A reusable time ontology. Working Notes of AAAI Workshop on Ontologies and the Semantic Web, pp. 1–6.


* TIME community is the community built around the International Symposia series on Time Representation and Reasoning (TIME, http://time.di.unimi.it/)
† For example, Google returns circa 10 000 responses to the query: <time "temporal representation" "temporal reasoning">; Google Scholar offers about 500 papers in the response to the same query.  
‡ The list of papers constituting the TIME proceedings series document collection is provided in a tabular form at http://ermolayev.com/TimeOnto/TimePapers.zip
§ Extraction was performed using the TerMine service which is provided by the UK National Centre for Text Mining (NaCTeM, http://www.nactem.ac.uk/). NaCTeM is operated by the University of Manchester. The scores are computed automatically using the term recognition technique [Frantzi et al. (2000)] which uses the information about the frequencies of term occurrence.
** The number of citations for each paper was retrieved from Google Scholar (http://scholar.google.com/). The list of the TIME papers with the indication of their impact may be retrieved from http://ermolayev.com/TimeOnto/TimePapersImpact.zip
†† The complete table may be accessed at http://ermolayev.com/TimeOnto/ClassifiedTerms.zip
‡‡ References are ordered by the number of citations (given in round brackets) as of Aug. 24, 2014. Source: Google Scholar. 
§§ The contradictions between these models will not however be resolved as it is beyond the scope of this review paper. 
*** Also mentioned as “closed” and “open” for unbounded in some sources. In this paper it has been chosen to denote the absence/presence of a finite limit as unboundedness/boundedness, while the absence/presence of a boundary of an interval – as openness/closeness.  
††† See e.g. http://plato.stanford.edu/entries/heraclitus/
‡‡‡ See e.g. http://plato.stanford.edu/entries/plato/
§§§ See e.g. http://plato.stanford.edu/entries/atomism-ancient/
**** See e.g. http://plato.stanford.edu/entries/aristotle/
†††† In abstract algebraic sense an Abelian group is a group in which the group operation holds commutativity. 
‡‡‡‡ Relevant relations, e.g. these in Fig. 9, may have arity higher than 2. We constrain our discussion to binary because any relation of higher arity may be specified as a combination of several binary relations.
§§§§ http://www.w3.org/TR/owl-time/
***** http://www.w3.org/TR/owl2-syntax/

††††† http://protege.cim3.net/cgi-bin/wiki.pl?SWRLTemporalOntology
‡‡‡‡‡ https://www.posccaesar.org/wiki/ISO15926 
§§§§§ Named graphs. http://www.w3.org/2004/03/trix/
****** SOWL ontology is available upon request as a part of the CHRONOS plug-in.
†††††† Table of correspondences between SUMO and DAML-TIME, the predecessor of the OWL-Time (discussed later in this section), by Ian Niles: http://www.isi.edu/~hobbs/damltime/DAML-Time2SUMO.txt
‡‡‡‡‡‡ http://ontolingua.stanford.edu/
§§§§§§ Not to be confused with Granularity. ”Scale factors” are understood here as a property allowing time to run with different velocities, possibly using different time lines for that. “Granularity” stands for different precision of measurements, e.g. days, hours, minutes, etc. 


??

??

??

6
     Vadim Ermolayev, Sotiris Batsakis, Natalya Keberle, Olga Tatarintseva, and Grigoris Antoniou


5
	Ontologies of Time: Review and Trends 


International Journal of Computer Science and Applications, 
?Technomathematics Research Foundation  
Vol. XX, No. XX, pp. XXX – XXX, 20XX

1

