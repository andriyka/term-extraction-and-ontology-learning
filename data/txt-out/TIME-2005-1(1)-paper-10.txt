Quantitative Temporal Logics: PS PACE and below Carsten Lutz1 , Dirk Walther2 , and Frank Wolter2 Inst.
fuEr Theoretische Informatik, TU Dresden, Germany lutz@tcs.inf.tu-dresden.de 2 Dept.
of Computer Science, University of Liverpool, UK {D.Walther,frank}@liv.csc.ac.uk 1  Abstract Often, the addition of metric operators to qualitative temporal logics leads to an increase of the complexity of satisfiability by at least one exponential.
In this paper, we exhibit a number of metric extensions of qualitative temporal logics of the real line that do not lead to an increase in computational complexity.
We show that the language obtained by extending since/until logic of the real line with the operators asometime within n time unitsa, n coded in binary, is PS PACE-complete even without the finite variability assumption.
Without qualitative temporal operators the complexity of this language turns out to depend on whether binary or unary coding of parameters is assumed: it is still PS PACE-hard under binary coding but in NP under unary coding.
1  Introduction  The extension of qualitative temporal logics (TLs) with metric operators has been studied for almost fifteen years [5, 4, 8].
Of particular interest are metric extensions of temporal logics of the real line, since the resulting quantitative TLs are an important tool for the specification and verification of real-time systems [2].
Unfortunately, moving from qualitative to quantitative logics is often accompanied by an increase in computational complexity of the satisfiability problem.
The most important example witnessing this effect is the PS PACE-complete since/until logic of the real line [7], whose extension with a metric operator asometime in at least n but not more than m time unitsa (n and m coded in binary) becomes E XP S PACE-complete if the case n = m is not admitted, and even undecidable if it is [1, 3, 5].
It is well known that the complexity of the metric temporal logic obtained by this extension can be reduced to PS PACE again by further restricting the values of n and m, e.g., by enforcing that n = 0 [1].
However, in contrast to the E XP S PACE-completeness and undecidability results above,  this improvement has only been proven under the finite variability assumption (FVA) which states that no propositional variable changes its truth-value infinitely many times in any finite interval.
While the FVA is a natural condition for various computer science applications, we believe that there are at least two reasons to consider also the non-FVA case: first, qualitative temporal logic originated in philosophy and mathematics to study time itself, rather than the behaviour of systems with discrete state changes as considered in computer science.
If quantitative TL is used for the former purpose, the FVA is less convincing than in computer science applications.
Second, even in computer science reasoning without the FVA can be fruitfully employed: assume that a formula D of a quantitative TL describes the specification of a real-time system.
Further assume that D has been found to be unsatisfiable under FVA, indicating that the described specification is not realizable.
If an additional satisfiability check without FVA is made revealing that dropping FVA regains satisfiability of D, then the user obtains additional information on the source of the unrealizability of her specification: namely that it enforces an infinite number of state changes in a finite interval.
The purpose of this paper is to investigate metric temporal logics of the real line that are at most PS PACE-complete.
More precisely, we prove three results.
Our first result is that extending since/until logic of the real line with metric operators asometime in at most n time unitsa, n coded in binary, is PS PACE-complete even without FVA.
(Note that the logic without FVA is more general than with FVA in the sense that the latter logic can be polynomially reduced to the former [5].)
To show this result, we propose a new method for polynomially reducing satisfiability in metric TLs whose numerical parameters are coded in binary to satisfiability in the same logic with numbers coded in unary.
The essence of the reduction is to introduce new propositional variables that serve as the bits of a binary counter measuring distances.
For the metric TL mentioned above, we obtain a PSpace upper bound since Hirshfeld and Rabinovich have shown that QTL, i.e., the same logic with num-  bers coded in unary, is PS PACE-complete without FVA [5].
In the technical report accompanying this paper, we show that our proof method can be used for other logics as well.
For instance, metric extensions of (discrete-time) LTL and the branching time logic CTL are shown to be in PS PACE and E XP T IME, respectively [6].
Our second result concerns a sharpening of PS PACE lower bounds for metric temporal logics of the real line.
In the current literature, such logics usually contain qualititative since/until logic as a proper fragment, and thus trivially inherit PS PACE-hardness [2, 5, 7].
We consider metric TLs with weaker qualitative operators and show that PS PACEhardness can already be observed in the following three cases: (i) a future diamond and a future operator asometime in at most n time unitsa, n coded in unary; (ii) only the future operator asometime in at most n time unitsa, n coded in binary (i.e., no qualitative operators at all); (iii) only a metric version of the until operator for the interval [0, 1].
As a third result, we explore the transition from NP to PS PACE.
In particular, we show that the quantitative TL with only the metric operator asometime within n time unitsa, n coded in unary, is NP-complete.
This result extends the result of [10] that satisfiability of the qualitative TL with operators aeventually in the futurea and aeventually in the pasta over the real line is decidable in NP.
When compared with result (ii) above, it also shows that the complexity of metric TLs without qualitative operators depends on the coding of numbers.
To establish the NP upper bound, we show that satisfiability of a formula D can be decided by first aguessinga a system of rational linear inequalities, and checking whether this system has a solution over the real (or, equivalently, rational) numbers.
2  Preliminaries  We introduce the metric temporal language QTL of [5], which is closely related to the language MITL of [1].
Fix a countably infinite supply p0 , p1 , .
.
.
of propositional variables.
A QTL-formula is built according to the syntax rule D := p | AZD | D aSS D | D S D | D U D | DS I D | DU I D with p ranging over the propositional variables and I ranging over intervals of the forms (0, n), (0, n], [0, n), and [0, n], where n > 0 is a natural number.
The Boolean operators , a", a, and a are defined as abbreviations in the usual way.
Moreover, we introduce additional future modalities as abbreviations: aSIF D =  U I D, IF D = AZaSIF AZD, aSF D =  U D, and F D = AZaSF AZD.
Their past counterparts are defined analogously and have a subscript P .
Note that formulas with rational numbers as parameters of metric operators S I and U I can be translated (in polynomial time) to satisfiability equivalent formulas contain-  ing only the natural numbers by multiplying with the least common denominator of all (rational) parameters.
Formulas of QTL are interpreted on the real line.
A model M =  , V is a pair consisting of the real numbers and a valuation V mapping every propositional variable p to a set V(p) a .
The satisfaction relation a|=a is defined inductively as follows, where we write w + I to denote the set {w + x | x a I} for each time point w a and interval I of one of the above forms; w a I is defined analogously.
A  A  A  M, w M, w M, w M, w  |= p |= AZD |= D aSS D |= D U D  iff iff iff iff  M, w |= D S D  iff  M, w |= D U I D  iff  M, w |= D S I D  iff  w a V(p) M, w  |= D M, w |= D and M, w |= D there exists u > w such that M, u |= D and M, v |= D for all v such that w < v < u there exists u < w such that M, u |= D and M, v |= D for all v such that u < v < w there exists u a w + I such that M, u |= D and M, v |= D for all v such that w < v < u there exists u a w a I such that M, u |= D and M, v |= D for all v such that u < v < w  A  We will also write w |=V D for  , V, w |= D. A QTLformula D is satisfiable if there exists a model M and a w a such that M, w |= D. It is satisfiable under the finite variability assumption (FVA) if it is satisfiable in a model in which no propositional variable changes its truth-value infinitely many times in any finite interval.
Our presentation of QTL deviates from that of [5], where (0,1) (0,1) only the metric operators aSF and aSP are admitted.
If the numerical parameters of the metric operators are coded in unary, there exists an easy polynomial translation from Hirshfeld and Rabinovichas version of QTL to ours and vice versa.
However, in this paper we also consider binary coding of numbers.
If we want to emphasize this fact, we shall write QTLb instead of QTL, and likewise, QTLu will denote unary coding of numbers.
We close this section with a discussion of the relation between temporal logics with and without FVA.
The satisfiability of a formula D of a temporal logic with operators since and until and with FVA can be polynomially reduced to satisfiability in the same logic without FVA; see [5]: Let  (P I'p aSS I'p aSS F I'p ) where I'=  A  p used in D    I'p = (p U p) a" (AZp U AZp)   aSS (p S p) a" (AZp S AZp) .
Then it is not hard to verify that D is satisfiable with FVA iff D aSS I' is without FVA.
Note that the length of D aSS I' is polynomial in the length of D. To the best of our knowledge there is no polynomial reduction of this type for the language without since or until.
3  QTLb is PS PACE-complete without FVA  The purpose of this section is to prove that QTLb satisfiability without FVA is decidable in PS PACE.
Note that, due to polynomial reducibility of QTLb with FVA to this logic, the upper complexity bound carries over.
This result is already known for QTLu without FVA [5] and QTLu with FVA [1].
We first show that our result indeed improves upon the existing ones by proving that QTLb is exponentially more succinct than QT Lu .
Theorem 1.
Let D be a QTL-formula with numbers coded [0,n] in unary that is equivalent to F p. Then D has length at least n. Proof.
Suppose by contradiction that there exists a QTLformula D with numbers coded in unary such that D is [0,n] equivalent to F p, for some n aL 1, and the length of D is strictly smaller than n. We may assume that D contains no other propositional letters than p: otherwise, just replace them with .
Then, for n aL 1, set Vn (p) := [an, n] [0,n] and Mn := R, Vn .
Then Mn , 0 |= F p. Therefore, Mn , 0 |= D. Now, it is straightforward to prove the following by induction: for every subformula D of D of length a$?
k and all x aL k such that n a x aL an + k: M, (n a k) |= D iff Mn , (n a x) |= D. Since the length of D is smaller than n, it follows that, in Mn , the points 0 and 1 satisfy the same subformulas of D. In particular, Mn , 1 |= D. We have derived a contradiction [0,n] since Mn , 1  |= F p. a We now establish the first result of this paper.
Theorem 2.
Satisfiability in QTL with numbers coded in binary is PS PACE-complete without FVA.
Since (qualitative) since/until logic on the real line is PS PACE-hard [7], it suffices to prove the upper bound.
For simplicity, we prove the upper bound for the future fragment of QTL, i.e., we omit past operators.
The proofs are easily extended to the general case.
Within the future fragment, (0,1) (0,1] [0,1) we consider only the metric operators aSF , aSF , aSF , [0,n] and aSF .
This can be done w.l.o.g.
due to the following observations: First, satisfiability in QTLb can be reduced to satisfiability in QTLb without the metric operators D1 U I D2 : to  decide satisfiability of a QTLb -formula D, introduce a new propositional variable pD2 for every D2 which occurs in a subformula of the form D1 U I D2 of D. Inductively define a translation on QTLb -formulas such that, for any subformula D of D, Dp to denotes the result of replacing all outermost subformulas D1 U I D2 of D by D1p U pD2 aSS aSIF pD2 .
Set + F D = D aSS F D. Then D is satisfiable iff fi   Dp aSS + (pD2 a D2p ) F D1 U I D2 asub(D)  is satisfiable.
Note that the length of the latter formula is polynomial in the length of D. Second, for any interval I of the form (0, n), (0, n], or [0, n) with n > 1, aSIF D is [0,na1] equivalent to aSJF aSF D, where J is obtained from I by replacing the upper interval bound n by 1.
In the following, we reduce satisfiability of QTLb formulas to the satisfiability of QTL1 -formula, i.e., QTLformulas in which all upper interval bounds have value 1.
As the coding of numbers is not an issue in the latter logic, we obtain a PS PACE upper bound from the result of [5] that QTLu -satisfiability in models without FVA is decidable in PS PACE.
Let D be a QTL-formula meeting the restrictions laid out above.
Let k be the greatest number occurring as a parameter to a metric operator in D, nc = log2 (k + 2), and D1 , .
.
.
, D the subformulas of D that occur as an argument [0,n] to a metric operator of the form aSF with n > 1.
We reserve, for 1 a$?
i a$?
, fresh propositional variables xi , yi , and cinc a1 , .
.
.
, ci0 that do not occur in D. The sequences cinc a1 , .
.
.
, ci0 of propositional variables will be used to implement binary counters, one for each Di .
Intuitively, these counters measure the distance to the anearesta future occurrence of the formula Di , rounded up to the next largest natural number.
A counter value greater than or equal to k + 1 is a special case indicating that the nearest occurrence is too far away to be of any relevance.
The variables xi and yi will serve as markers with the following meaning: xi holds in a point iff there is a natural number n such that Di holds at distance n, but not in between; similarly, yi holds iff there is a natural number n such that Di does not hold at any distance up to (and including) n, but Di holds at future points that converge from the right to the future point with distance n. In the following, we call the structure imposed on the real line by the markers xi and yi the (one-dimensional) agrida.
To implement the counters, we introduce auxiliary formulas.
For 1 a$?
i a$?
, let aV (Ci = m) be a formula saying that, at the current point, the value of the i-th counter is m, for 0 a$?
m < 2nc .
There are exponentially many such formulas, but we will use only polynomially many of them in the reduction.
aV (Ci a$?
m) is a formula saying that, at the current point, the value of the i-th counter does not exceed m, for 0 a$?
m < 2nc .
aV D := AZ(xi a" yi ) U ((xi a" yi ) aSS D) says that, at the next grid point, D is satisfied.
To deal with effects of convergence, it is convenient to introduce an additional abbreviation.
The formula rc(D) := AZ(AZD U ) aSS AZD describes convergence of D-points from the right against a point where D does not hold.
We now inductively define a translation of QTLb -formulas to QTL1 formulas: pa (AZD)a (D1 aSS D2 )a (D1 U D2 )a (aSIF D)a [0,n] (aSF Di )a  := := := := := :=  p AZD a D1a aSS D2a D1a U D2a aSIF D a   (Ci a$?
n a 1) a" (Ci = n) aSS AZyi  Di4  (0,1]  := AZ(Ci = 0) aSS aSF (xi a" yi ) a     cit aSS AZcit aSS (AZci aSS ci )   aSS  (ci a ci )  =t+1..nc a1  Di5  [0,1)  := AZaSF  =0..ta1    a"    (ci aSS ci )  Qualitative since/until logic on the real line is PS PACEcomplete, and thus not computationally simpler than QTLb .
However, several natural fragments are only NP-complete, an important example being the qualitative TL with temporal operators aeventually in the futurea and aeventually in the pasta [10].
In this section, we explore the transition from NP to PS PACE for fragments of quantitative logics of the real line, i.e., for QTL and its fragments.
We start with determining several weak, but still PS PACE-hard fragments of QTL.
Observe that two of the fragments are purely quantitative, i.e., they do not admit qualitative temporal operators at all.
[0,n]  fi  (0,1) := yi a rc(Dai ) a" F (AZDai aSS AZxi aSS AZyi )  (0,1] aSS aSF yi aSS aSF rc(Dai )  t=0..nc a1  From NP to PS PACE  Theorem 4.
Satisfiability (with and without FVA) is PS PACE-hard for the fragments of QTL whose only temporal operators are:  Here, I ranges over intervals (0, 1], (0, 1), and [0, 1).
It remains to enforce the existence of the grid and the behavior of the counters as described above.
This is done with the following auxiliary formulas, for 1 a$?
i a$?
:   Di1 := (Ci = 0) a Dai a" rc(Dai ) fi  (0,1) Di2 := xi a Dai a" F (AZDai aSS AZxi aSS AZyi )  (0,1] aSS aSF xi aSS aSF Dai Di3  4    =0..nc a1  (xi a" yi ) a (Ci = 2nc a 1)  Intuitively, Di1 initializes the counter, Di2 and Di3 ensure that the grid points xi and yi behave as described above, Di4 increments the counter when travelling to the left, and Di5 ensures that, when travelling left, the counter stays in maximal value after the last occurrence of Dai .
Let Di be the conjunction of Di1 to Di5 .
The following is proved in [6] and finishes the reduction.
Lemma 3.
D is satisfiable iff F (D1 aSS AV AV AV aSS D ) aSS Da is satisfiable.
(i) aSF and aSF [0,n]  (ii) aSF  with n > 0 coded in unary;  with n > 0 coded in binary;  (iii) U [0,1] .
Point (i) is proved by reducing satisfiability in LTL (i.e., qualitative temporal logic of the natural numbers) with the only temporal operators  and aSF (which is PS PACE-hard [9]) to satisfiability in the logic defined in (i).
To do so, the main task is to represent the discrete natural numbers on the real line by alternating intervals making a true and intervals making AZa true, with the former representing the time points of discrete time.
This structure is enforced such that the length of the a-intervals is between 2 and 3 (including 2), the length of the AZa-intervals is between 7 and 8 (including 7), and the length of an a-interval together with the subsequent AZa interval is between 9 and 10.
This is done by the formula D = D1 aSS D2 aSS D3 : D1 D2 D3  [0,2]  = F a, [0,3] [0,7] = F (a a aSF F AZa), [0,10] [0,2] = F (a a aSF F a).
For the reduction, inductively define a translation (AV)a as follows: pa (AZD)a (D1 aSS D2 )a (D)a (aSF D)a  := := := := :=  p AZD a D1a aSS D2a  [0,3]  [0,7] [0,8] aSF F AZa aSS aSF (D a aSS a) aSF (AZa aSS aSF (D a aSS a))  Additionally, a formula D is needed to take care of uniformity, i.e., to make sure that the same propositional variables  hold in all points of an interval that makes a true:  	  [0,3] p aSS a a F (a a p) D = F p used in D     [0,3] aSS AZp aSS a a F (a a AZp) .
Now, D is satisfiable over the natural numbers iff Da aSS D aSS D aSS a is satisfiable over the real numbers with FVA iff it is satisfiable over the real numbers without FVA.
A similar reduction can be used to prove (ii).
Notice that satisfiability in LTL is already PS PACE-hard if the natural numbers are replaced by a finite strict linear order (an initial segment of the natural numbers).
Moreover, any formula D which is satisfiable in a finite strict linear order is also satisfiable in a finite strict linear order of length not exceeding [0,n] 2|D| .
Based on this observation, using the operator aSF , n > 0 coded in binary, instead of aSF , we can reduce satisfiability of an LTL-formula D in such a finite strict linear order to satisfiability over the real line (with and without FVA).
Finally, (iii) can be proved by reducing satisfiability over the real line in the qualitative fragment of QTL with the only temporal operator U (which is PS PACE-hard) to satisfiability of formulas with the operator U [0,1] over the interval (0, 1); details can be found in [6].
We now exhibit a purely quantitative temporal logic of the real line for which satisfiability is NP-complete: the fragment of QTL with only the quantitative diamond and numbers coded in unary, with and without FVA.
This logic may appear rather weak since it does not allow to make statements about all time points.
Still, it is useful for reasoning about the behaviour of systems up to a previously fixed time point.
Note that our NP-completeness result shows that Points (i) and (ii) of Theorem 4 are optimal in the following sense: in Point (i) we cannot drop aSF , and in Point (ii) we cannot switch to unary coding.
Theorem 5.
In the fragment of QTL with temporal operators aSIF and aSIP , I of the form (0, n), [0, n), [0, n], or (0, n], and n > 0 coded in unary, satisfiability is decidable in NP, both, with and without FVA.
The lower bound is immediate from propositional logic and thus we only have to prove the upper bound.
Since numbers are coded in unary, we may restrict our attention to temporal operators whose upper interval bound is 1.
In the proof, we [0,1] only consider the temporal operator aSF .
An extension to past operators and open intervals is straightforward.
Let D be a formula whose satisfiability is to be decided.
We introduce some convenient abbreviations: mD denotes the nesting depth of operators aSIF in D (henceforth diamond depth), nD = 2|D|3 + |D|2 , and rD = |D| A nD .
Denote by cl(D) the closure of the set of subformulas of D under single negation.
A type t for D is a subset of cl(D) such that  (i) AZD a t iff D  a t for each AZD a cl(D), and (ii) D1 aSSD2 a t iff D1 , D2 a t for each D1 aSS D2 a cl(D).
For a model  , V and w a , set  A  A  t(w) t< (w)  = {D a cl(D) | w |=V D}, = {aSIF D a cl(D) | w |=V aSIF D}.
Notice that t(w) is a type for D. First, we devise an algorithm for satisfiability without FVA.
To begin with, we show that satisfiability of D implies satisfiability of D in a ahomogeneousa model.
In particular, in such models the number of realized types is polynomial in the length of D. Lemma 6.
Let D be satisfiable without FVA.
Then there is a sequence x0 , .
.
.
, xnD in such that 0 = x0 < x1 < AV AV AV < xnD = mD , and a valuation V such that  , V, 0 |= D and  A  A  aV |{t(w) | 0 a$?
w a$?
mD }| a$?
rD ; aV for every n with 0 a$?
n < nD and each type t for D, the set {w a | xn < w < xn+1 and w |=V t} is either empty or dense in the interval (xn , xn+1 ).
A  A  Proof.
Consider a model M =  , V  with M, 0 |= D. By the semantics, we clearly have the following:  A  |0a$?w a$?
(a) for any aSIF D a sub(D), the set {w a mD and w |=V aSIF D} is a union of intervals of length at least 1 and at most two intervals of length smaller than 1.
The two possibly shorter intervals are the one starting at 0 and the one ending at mD .
Using (a), we can show that there is a sequence y0 , .
.
.
, yk in for some k a$?
2|D|2 +|D| such that  A  aV 0 = y0 < AV AV AV < yk = mD and aV t< (w) = t< (w ) whenever yi < w < w < yi+1 for any i < k. To see this, take a formula aSIF D a sub(D).
The toggle points for aSIF D in the interval [0, mD ] are those points x such that either (i) there is a y > x such that the truth value of aSIF D at x is different from the truth value of aSIF D at all points z with x < z < y or (ii) there is a y < x such that the truth value of aSIF D at x is different from the truth value of aSIF D at all points z with y < z < x.
By (a), there are at most 2 AV mD + 1 < 2 AV |D| + 1 toggle points for each formula aSIF D, and thus at most 2|D|2 + |D| toggle points altogether.
These points form the required sequence y0 , .
.
.
, yk .
We convert this sequence into the desired sequence x0 , .
.
.
, xnD by arranging the elements of the set  {yi + j | yi + j < mD } {y0 , .
.
.
, yk } aS i<k 1a$?j<mD  in ascending order according to a<a, possibly introducing (arbitrary) intermediate points to obtain a sequence of length nD + 1.
To obtain a valuation V as required by the lemma, fix a set Ti of types for each i < nD as follows: for each aSIF D a sub(D), choose a w a (xi , xi+1 ) with D a t(w) if such a w exists.
Then, Ti is the set of types t(w) of all points w chosen in this way.
Clearly |Ti | a$?
|D|.
For each i < nD , take a collection (Xti )taTi , of subsets of (xi , xi+1 ) which form a partitioning of (xi , xi+1 ) such that each Xti is dense in (xi , xi+1 ).
Now define a valuation V by setting, for every propositional variable p,  V(p) := (V (p) aS {x0 , .
.
.
, xnD }) aS {Xti | p a t}.
i<nD ,taTi  Let ti , i a$?
nD , be the type {D a sub(D) | xi |=V D} for D realized in point xi of the original model M. To show that V is as required, it is sufficient to show that, for each k a$?
mD , each D a sub(D) with diamond depth bounded by k, and each w a [0, mD a k], we have w |=V D  iff there is an i a$?
nD such that (a) w = xi and D a ti , or (b) w a Xti and D a t for some t a Ti .
Proof.
Let k, D, and w be as above.
The proof is by induction on the structure of D. The cases for propositional variables, AZ, and aSS are left to the reader.
Consider the case [0,1] for aSF .
[0,1] aaa: Suppose w |=V aSF D. Then there is a w a w + [0, 1] such that w |=V D by the semantics.
Distinguish four cases: aV w = xi for some i a$?
nD and w = xj for some j aL i.
By (a), the induction hypothesis yields D a tj .
Then [0,1] xj |=V D. From xj a xi a$?
1 follows xi |=V aSF D. [0,1] Hence aSF D a ti .
aV w = xi for some i a$?
nD and w a Xtj for some j with i a$?
j < nD and t a Tj .
The induction hypothesis in (b) yields D a t. Then, by definition of Tj , there is a w a (xj , xj+1 ) such that w |=V D. Note that there is an  with i <  a$?
nD such that x = xi + 1.
But then xj+1 a$?
x ; otherwise w a Xtj contradicts w a w + [0, 1].
Now, from w a w < 1 follows [0,1] [0,1] w |=V aSF D. Hence aSF D a ti .
aV w a Xti for some i < nD and t a Ti , and w = xj for some j > i.
By (a), the induction hypothesis yields D a tj .
Then xj |=V D. Now, from xj a w a$?
1 [0,1] follows w |=V aSF D. But then, by definition of  the sequence x0 , .
.
.
, xnD , it holds that, for all w a [0,1] [0,1] (xi , xi+1 ), w |=V aSF D. Therefore, aSF D a t [0,1] for any t a Ti .
Hence aSF D a t. aV w a Xti for some i < nD and t a Ti , and w a Xtj for some j with i a$?
j < nD and t a Tj .
This case is similar to the previous cases and left to the reader, see [6].
aaa: Let i a$?
nD such that [0,1]  [0,1]  (a) w = xi and aSF D a ti .
Then xi |=V aSF D. There is a w a xi + [0, 1] such that w |=V D. Distinguish two cases: a w = xj for some j with i a$?
j a$?
nD .
Then D a tj .
The induction hypothesis in (a) yields w |=V D. From w a xi a$?
1 follows xi |=V [0,1] aSF D.  a w a (xj , xj+1 ) for some j with i a$?
j < nD .
By definition of Tj , there is a t a Tj such that D a t. The induction hypothesis in (b) yields w |=V D for any w a Xtj .
Since Xtj is dense in (xj , xj+1 ), there is such a w such that w a$?
[0,1] w .
Then w a xi a$?
1.
Hence, xi |=V aSF D. [0,1]  (b) w a Xti and aSF D a t for some t a Ti .
This case is similar to the previous one and left to the reader.
a Lemma 6 suggests the following idea for deciding in nondeterministic polynomial time whether a formula D is satisfiable: guess a (polynomially bounded) set of types for D to be realized in a homogeneous model, a sequence v0 , .
.
.
, vnD of variables, and construct a system of linear inequalities whose solution in determines a sequence of points x0 , .
.
.
, xnD from which we can build a homogeneous model realizing the guessed types.
More precisely, to decide the satisfiability of D, we non-deterministically choose  A  aV a set T of types for D such that |T | a$?
rD ; aV a type ti a T such that D a t0 , for every i a$?
nD ; aV a non-empty set of types Ti a T , for every i < nD .
Intuitively, the type ti is to be realized at point xi , and the types in Ti are those types realized in the interval (xi , xi+1 ).
Then, we take variables v0 , .
.
.
, vnD and check whether the system of inequalities given in Figure 1 has a solution in .
The Inequalities 2 to 9 are only added if i < nD .
To understand the inequalities (in particular 4 and 5), note that the point xi described by variable vi is not intended to realize the whole type ti , but only those elements of ti whose diamond depth is at most mD a xi .
Similarly, points from  A  (1) 0 = v0 < v1 < AV AV AV < vnD = mD [0,1]  D a ti , j aL i, and D a tj  [0,1]  D a ti , j aL i, and D a t for some t a Tj  (2) vj a vi > 1  if AZaSF  (3) vj a vi aL 1  if AZaSF  [0,1]  D a ti , but there is no j aL i such that D a tj or D a t for a t a Tj  [0,1]  D a t for some t a Ti , there is no j > i such that D a tj ,  (4) mD a vi < 1 if aSF (5) mD a vi a$?
1 if aSF  and there is no j aL i such that D a t for some t a Tj  (6) vj a vi a$?
1  [0,1]  if aSF  D a ti and j aL i is minimal such that D a tj and,  for every j  with i a$?
j  < j, D fia t for any t a Tj   (7) vj a vi < 1  [0,1]  if aSF  D a ti and j aL i is minimal such that D a t for some t a Tj and  there is no j  with i a$?
j  a$?
j such that D a tj   (8) vj a vi a$?
1  [0,1]  if aSF  D a t for some t a Ti , D fia t for any t a Ti , and j > i is minimal  such that D a tj or D a t for some t a Tj [0,1]  (9) vj a vi+1 aL 1 if AZaSF  D a t for some t a Ti , and (j aL i and D a t for some t a Tj ) or  (j > i and D a tj )  Figure 1.
The system of inequalities.
(xi , xi+1 ) described by a type t a Ti realize only elements of t whose diamond depth is at most mD a xi ; cf.
the structural induction in the proof of Lemma 6.
The algorithm runs in non-deterministic polynomial time and returns aD is satisfiablea if there is a solution to this system of inequalities, and aD is not satisfiablea otherwise.
By considering the contrapositive, it is easily seen that D is unsatisfiable if the algorithm answers anoa: if D has a model, then by Lemma 6 it also has a homogeneous model, and this model suggests a choice of types such that the corresponding system of inequalities is satisfiable.
Conversely, if the algorithm returns ayesa, we can construct a homogeneous model: Lemma 7.
If the algorithm returns aD is satisfiablea, then D is satisfiable.
Proof.
Suppose there are types ti , i a$?
nD , and sets of types Ti , i < nD , such that there is a solution x0 , .
.
.
, xnD for the corresponding system of inequalities.
For i < nD , take a partitioning (Xti )taTi of (xi , xi+1 ) such that each Xti is dense in (xi , xi+1 ).
Now define a valuation V by putting, for every propositional variable p,     V(p) := {Xti | p a t} .
{xi | p a ti } aS ia$?nD  i<nD ,taTi  In [6], the following is proved: for all k a$?
mD , all D a sub(D) with diamond depth bounded by k, and all  w a [0, mD a k], we have w |=V D  iff  there is an i a$?
nD such that (a) w = xi and D a ti , or (b) w a Xti and D a t for some t a Ti .
It is an immediate consequence that 0 |=V D.  a  We now come to the proof of Theorem 5 with FVA.
Again, the first step is to show that if D is satisfiable under FVA, then it is satisfiable in a homogeneous model (this time with FVA) in which only polynomially many types are realized: Lemma 8.
Suppose D is satisfiable with FVA.
Then there exists a sequence z0 , .
.
.
, zrD in such that 0 = z0 < z1 < AV AV AV < zrD = mD , and a valuation V such that  , V, 0 |= D and  A  A  aV |{t(w) | 0 a$?
w a$?
mD }| a$?
rD ; aV for all n with 0 a$?
n < rD , all D a sub(D), and all zn < w < w < zn+1 , w |=V D iff w |=V D.  A  Proof.
Consider a model M =  , V  with FVA satisfying D in 0.
First, construct a sequence 0 = y0 < y1 < AV AV AV < yk = mD , k a$?
2|D|2 + |D|, as in Lemma 6.
Then the sequence x0 , .
.
.
, xnD is obtained by arranging the elements  of the set {y0 , .
.
.
, yk } aS    {yi + j | yi + j < mD }  i<k 1a$?j<mD  aS    {yi a j | yi a j > 0}  ia$?k 1a$?j<mD  in ascending order according to < (where we possibly have to add new xi to obtain a sequence of length nD + 1).
Let D = min{xi+1 a xi | 0 a$?
i < nD }, and set, for i < nD , Di =  1 |D|i+1  A D. The sequence  0 = z0 < z1 < AV AV AV < zrD = mD is obtained by adding to the sequence x0 , .
.
.
, xnD the points j yij = xi + A Di , |D| for all i < nD and j a$?
|D|.
For i < nD , denote by tai the type t which is realized in some interval of the form (xi , y).
Note that such an interval exists since we are in a model with FVA.
Also, denote by t+i the type which is realized in some interval of the form (y, xi+1 ).
Now, for i < nD , take for any aSIF D a sub(D) such that there exists w a (xi , xi+1 ) with D a t(w) such a type t(w) and denote the collection of selected types plus the types tai and t+i by Ti .
Notice that |Ti | a$?
|D|.
Let ti0 , .
.
.
, ti|D|a1 be an ordering of the types in Ti such that ti0 = tai (if Ti has cardinality < |D|, then take some t from Ti more than once in this ordering.)
Define a valuation V by setting, for every propositional variable p, V(p) = {xi | i a$?
nD , xi |=V p}  aS {(yij , yij+1 ] | p a tij } i<nD ,j<|D|  aS    i<nD  |D|  {(yi , xi+1 ) | p a t+i }.
We show that V is as required.
To this end, it is sufficient to show by induction that, for each k a$?
mD , every D a [0,1] sub(D) in which the number of nestings of aSF does not exceed k, and all w a [0, mD a k]: w |=V D a there is an i a$?
nD such that (a) w = xi and xi |=V D, or (b) w a (yi , yi+1 ] and D a ti for some  < |D|, or |D|  (c) w a (yi , xi+1 ) and D a t+i .
Proof.
Let k, D, and w be as above.
The proof is by induction on the structure of D. The cases for propositional variables, AZ, and aSS are left to the reader.
Consider the case [0,1] for aSF .
[0,1] aaa: Suppose w |=V aSF D. Then there is a w a  w + [0, 1] such that w |=V D. Similarly to the previous proof distinguish four cases.
Here only the most intricate case is considered; the other cases are left to the reader and can also be found in [6]: aV w a (xi , xi+1 ) for some i < nD , and w a (xj , xj+1 ) for some j aL i.
If w a (yj , yj+1 ] for some  < |D|, then the induction hypothesis in (b) yields D a tj .
|D| Otherwise, i.e., if w a (yj , xj+1 ), D a t+j by the induction hypothesis in (c).
Since tj , t+j a Tj , it follows by definition of Tj that there is a w a (xj , xj+1 ) such that w |=V D. Note that there is an i > i + 1 such that xi = xi+1 + 1.
But then xj+1 a$?
xi ; otherwise xj aL xi and thus w a w > 1 contradicting w a w+[0, 1].
Thus there is a v a (xi , xi+1 ) such that [0,1] w a v a$?
1.
By the semantics, v |=V aSF D. Then it follows by definition of the sequence x0 , .
.
.
, xnD that [0,1] v  |=V aSF D for all v  a (xi , xi+1 ).
Therefore, [0,1] [0,1] aSF D a t for any t a Ti .
Hence aSF D a ti if [0,1] w a (yi , yi+1 ] for some  < |D|, and aSF D a t+i if |D| w a (yi , xi+1 ).
aaa: Here only Case (b) is considered; the cases (a) and (c) are left to the reader and can also be found in [6].
Let [0,1] i a$?
nD such that (b) w a (yi , yi+1 ] and aSF D a ti for some  < |D|.
By definition of Ti , there is a w a (xi , xi+1 ) [0,1] such that w |=V aSF D. Then it follows by definition of [0,1] x0 , .
.
.
, xnD that w |=V aSF D for any w a (xi , xi+1 ).
[0,1] In particular, w |=V aSF D. Then v |=V D for some v a w + [0, 1] by the semantics.
Distinguish three cases: aV v = xj for some j > i.
The induction hypothesis in (a) yields v |=V D. Since v a w a$?
1, it follows by the [0,1] semantics that w |=V aSF D. aV v a (xi , xi+1 ).
By definition of Ti , there is a t a Ti such that D a t. Distinguish two subcases: First, suppose that D a ti for some  aL , or D a t+i .
The induction hypothesis in (b) or (c) yields v  |=V   |D| D for all v  a (yj , yj +1 ], or all v  a (yi , xi+1 ),  respectively.
Then there is such a v such that v  aw < [0,1] 1.
Hence w |=V aSF D. Second, suppose there is no  aL  such that D a ti , and D a / t+i .
Note that this implies  > 0.
Since +i Da / t , there is an interval of the form (y, xi+1 ) such that y   |=V D for all y  a (y, xi+1 ).
Take such a [0,1] y  .
Since w |=V aSF D, it follows by definition of  [0,1]  x0 , .
.
.
, xnD that y  |=V aSF D. Then there is a v  a y  + [0, 1] such that v  |=V D and v  aL xi+1 .
By definition of x0 , .
.
.
, xnD , there is an i such that xi = xi + 1.
Consider only the case where v  a (xj , xj+1 ) where j = i ; the other cases are straightforward.
Note that there is no such j > i .
For suppose otherwise, it holds that xi + 1 < xj < xi+1 + 1.
By definition of x0 , .
.
.
, xnD , there is a j  such that xj  = xj a 1.
Thus xi < xj  < xi+1 ; a contradiction.
Therefore j = i , i.e., xj = xi + 1.
By definition of Tj , there is an  < |D| such that tj a Tj and D a tj .
Then the induction hypothesis in (b) yields v  |=V D for all   v  a (yj , yj +1 ].
Take such a v  .
Since  > 0 and Di by definition of Dj , it holds that yi + 1 aL Dj a$?
|D|  xj + Dj .
Then yj +1 a [0,1] Hence w |=V aSF D.  yi    < 1 and thus v a w < 1.  aV v a (xj , xj+1 ) for some j > i.
By definition of x0 , .
.
.
, xnD , there is an i such that xi = xi + 1.
Consider only the case where j = i ; the other cases are straightforward.
Note that there is no such j > i .
For suppose otherwise, it holds that xi + 1 < xj < xi+1 + 1.
By definition of x0 , .
.
.
, xnD , there is a j  such that xj  = xj a 1.
Thus xi < xj  < xi+1 ; a contradiction.
Distinguish three subcases: a  = 0 and w |=V D for some w with xi < w a$?
xj .
Then it is easy to see that there is a v  aL w such that v  |=V D and v  a w a$?
1.
[0,1] Hence w |=V aSF D. a  = 0 and w  |=V D for all w with xi < w a$?
[0,1] xj .
Since w |=V aSF D, it follows by definition [0,1] of x0 , .
.
.
, xnD that w |=V aSF D for all w  with xi < w < w. Take such a w .
Then there is a v  a w + [0, 1] such that v  |=V D and v  > xj .
This implies that D a taj = tj0 .
Then the induction hypothesis in (b) yields v  |=V D for all v  a (yj0 , yj1 ].
Clearly, there is such a v  [0,1]  such that w a v  a$?
1.
Hence w |=V aSF  D.  a 1 a$?
 < |D|.
By definition of Tj , there is an  < |D| such that tj a Tj and D a tj .
The induction hypothesis in (b) yields v  |=V D for all v  a   Di by (yj , yj +1 ].
Take such a v  .
Since Dj a$?
|D|  definition of Dj , it holds that yi + 1 aL xj + Dj [0,1] and thus v  a w < 1.
Hence w |=V aSF D. a Using Lemma 8, one can now modify the decision procedure for satisfiability without FVA to obtain a decision procedure running in nondeterministic polynomial time for  satisfiability with FVA.
The crucial step is to determine a set of rational linear inequalities which represent the truth conditions in models of the form described in Lemma 8.
We leave this exercise to the reader.
Acknowledgements.
Work on this paper was supported by the U.K. EPSRC research grants GR/S63182/01, GR/S61966/01 and GR/S62727/01.
The work reported here was partly carried out while the first author was visiting the University of Liverpool on a DAAD grant.
References [1] R. Alur, T. Feder, and T. Henzinger.
The benefits of relaxing punctuality.
Journal of the ACM, 43:116a146, 1996.
[2] R. Alur and T. Henzinger.
Logics and models of real time: a survey.
In Real Time: Theory and Practice, Lecture Notes in Computer Science, pages 74a106, Berlin, 1992.
Springer.
[3] R. Alur and T. Henzinger.
A really temporal logic.
Journal of the ACM, 41:181a204, 1994.
[4] E. Emerson, A. Mok, A. Sistla, and J. Srinivasan.
Quantitative temporal reasoning.
Real-Time Systems, 4:331 a 352, 1992.
[5] Y. Hirshfeld and A. Rabinovich.
Logics for real time: Decidability and complexity.
Fundamenta Informaticae, 62:1a28, 2004.
[6] C. Lutz, D. Walther, and F. Wolter.
Quantitative temporal logics: PSpace and below.
LTCS-Report 05-03, Technical University Dresden, 2005. see http://lat.inf.tu-dresden.de/research/reports.html.
[7] M. Reynolds.
The complexity of the temporal logic over the reals.
manuscript.
[8] P. Schobbens, J. Raskin, and T. Henzinger.
Axioms for real-time logics.
Theoretical Computer Science, 274:151a182, 2002.
[9] A. Sistla and E. Clarke.
The complexity of propositional linear temporal logics.
Journal of the Association for Computing Machinery, 32:733a749, 1985.
[10] F. Wolter.
Tense logic without tense operators.
Mathematical Logic Quarterly, pages 145a171, 1996.