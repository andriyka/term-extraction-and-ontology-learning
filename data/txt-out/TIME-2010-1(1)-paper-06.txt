A decidable spatial generalization of Metric Interval Temporal Logic Bresolin, Davide Sala, Pietro Dept.
of Computer Science University of Verona, Italy  Della Monica, Dario Montanari, Angelo Dept.
of Mathematics and Computer Science University of Udine, Italy  Abstract--Temporal reasoning plays an important role in artificial intelligence.
Temporal logics provide a natural framework for its formalization and implementation.
A standard way of enhancing the expressive power of temporal logics is to replace their unidimensional domain by a multidimensional one.
In particular, such a dimensional increase can be exploited to obtain spatial counterparts of temporal logics.
Unfortunately, it often involves a blow up in complexity, possibly losing decidability.
In this paper, we propose a spatial generalization of the decidable metric interval temporal logic RPNL+INT, called Directional Area Calculus (DAC).
DAC features two modalities, that respectively capture (possibly empty) rectangles to the north and to the east of the current one, and metric operators, to constrain the size of the current rectangle.
We prove the decidability of the satisfiability problem for DAC, when interpreted over frames built on natural numbers, and we analyze its complexity.
In addition, we consider a weakened version of DAC, called WDAC, which is expressive enough to capture meaningful qualitative and quantitative spatial properties and computationally better.
Keywords-interval temporal logics; spatial logics; decidability; computational complexity  I. I NTRODUCTION The transfer of formalisms, techniques, and results from the temporal context to the spatial one is quite common in computer science and artificial intelligence.
However, it (almost) never comes for free: it involves a blow up in complexity, that can possibly yield undecidability.
In this paper, we study a spatial generalization of the decidable metric interval temporal logic RPNL+INT [1].
The main goal of spatial formal systems is to capture common-sense knowledge about space and to provide a calculus of spatial information.
Information about spatial objects may concern their shape and size, the distance between them, their topological and directional relations.
Applications of spatial calculi include, for instance, spatial databases management, geographical information systems, image processing, and autonomous agents.
Depending on the considered class of spatial relations, we can distinguish between topological and directional spatial reasoning.
While topological relations between pairs of spatial objects (viewed as sets of points) are preserved under translation, scaling, and rotation, directional relations depend on the relative spatial position of the objects.
A comprehensive and sufficiently up-to-date  Sciavicco, Guido Dept.
of Information and Communication Engineering University of Murcia, Spain  survey, which covers topological, directional, and combined constraint systems and relations, can be found in [2], [3].
Deductive systems for reasoning about topological relations have been proposed in various papers, including Bennett's work [4], [5], later extended by Bennett et al.
[6], Nutt's systems for generalized topological relations [7], the modal logic systems for a number of mathematical theories of space described in [8], the logic of connectedness constraints developed by Kontchakov et al.
[9], and Lutz and Wolter's modal logic of topological relations [10].
Directional relations have been dealt with following either the algebraic approach or the modal logic one.
As for the first one, the most important contributions are those by Gusgen [11] and by Mukerjee and Joe [12], that introduce Rectangle Algebra (RA), later extended by Balbiani et al.
in [13], [14].
As for the second one, we mention Venema's Compass Logic [15], whose undecidability has been shown by Marx and Reynolds in [16], Spatial Propositional Neighborhood Logic (SpPNL for short) by Morales et al.
[17], that generalizes the logic of temporal neighborhood [18] to the two-dimensional space, and the fragment of SpPNL, called Weak Spatial Propositional Neighborhood Logic (WSpPNL), presented in [19].
As for quantitative spatial formalisms, the literature is very scarce.
Condotta [20] proposes a generalization of RA including quantitative constraints, and identifies some meaningful tractable fragments of it.
Dutta [21] develops an integrated framework for representing spatial constraints between a set of landmarks given imprecise, incomplete, and possibly conflicting quantitative and qualitative information about them, using fuzzy logic.
Finally, Sheremet, Tishkovsky, Wolter, and Zakharyaschev [22] devise a logic for reasoning about metric spaces with the induced topologies, which combines the qualitative interior and closure operators with the quantitative operators "somewhere in the sphere of radius r" including or excluding the boundary; similar and related work can be also found in [23], [24].
In this paper, we present the Directional Area Calculus (DAC), that can be viewed as a two-dimensional variant of RPNL+INT [1].
DAC allows one to reason with basic shapes, such as lines, points, and rectangles, directional relations, and (a weak form of) areas.
It features two modal  operators: somewhere to the north and somewhere to the east.
Moreover, by means of special atomic propositions of the form lenh=k (resp., lenv=k ), it makes it possible to constrain the length of the horizontal (resp., vertical) projections of objects.
In the following, we show that, despite its simplicity, DAC allows one to express meaningful spatial properties.
As an example, combining horizontal and vertical length constraints, conditions like "the area of the current object is less than 4 square meters" can be expressed in DAC.
Moreover, we prove that its satisfiability problem is decidable in 2NEXPTIME.
Then, we study a proper fragment of DAC, called Weak DAC (WDAC), which is expressive enough to capture meaningful qualitative and quantitative spatial properties.
Decidability of WDAC is proved by a decision procedure whose complexity is exponentially lower than that for DAC.
Optimality is an open issue for both DAC and WDAC.
The paper is organized as follows.
In Section 2, we present syntax and semantics of DAC and WDAC.
Then, in Section 3 we briefly discuss the expressive power of DAC, and in Section 4 we prove that it is decidable.
Next, in Section 5, we focus on WDAC by showing that it is strictly less expressive than DAC, and by providing a more efficient decision procedure tailored to it.
In the conclusions, we provide an assessment of the work done.
II.
D IRECTIONAL A REA C ALCULI (DAC AND WDAC) The languages DAC and WDAC consist of a set of propositional variables AP, the logical connectives !
and [?
], and the modalities e , n (corresponding to the relations somewhere to the east and to the north, respectively), plus an infinite set of special atomic propositions of the form lenh=k and lenv=k , with k [?]
N. Let p [?]
AP.
Well-formed formulas, denoted by ph, ps, .
.
., are recursively defined as follows: ph ::= lenh=k | lenv=k | p | !ph | ph [?]
ps | e ph | n ph.
The other logical connectives, as well as the logical constants > and [?
], and the universal modalities e and n , can be defined in the usual way.
Let Dh = hDh , <i and Dv = hDv , <i, where Dh (resp., Dv ) is (a prefix of) the set of natural numbers N and < is the usual linear order.
Elements of Dh (resp., Dv ) will be denoted by ha , hb , .
.
.
(resp., va , vb , .
.
.).
A spatial frame is a structure F = Dh x Dv .
The set of objects (rectangles, lines, and points) is the set O(F) = {h(ha , vb ), (hc , vd )i | ha <= hc , vb <= vd , ha , hc [?]
Dh , vb , vd [?]
Dv }.
The semantics of DAC is given in terms of spatial models M = h(F, O(F)), Vi, where F is a spatial frame, O(F) is the set of relevant objects, and V : O(F) - 2AP is a spatial valuation function.
The pair (F, O(F)) is called spatial structure.
Given a model M and an object o = h(ha , vb ), (hc , vd )i, the truth relation for DAC-formulas is defined as follows: h v * M, o  len=k (resp., len=k ) iff (hc - ha ) = k (resp., (vd - vb = k));  M, o  p iff p [?]
V(o), for any p [?]
AP; M, o  !ph iff M, o 6 ph; * M, o  ph [?]
ps iff M, o  ph or M, o  ps; * M, o  e ps iff there exist he [?]
Dh , with hc <= he , and vg , vi [?]
Dv , with vg <= vi , such that M, h(hc , vg ), (he , vi )i  ps; * M, o  n ps iff there exist ve [?]
Dv , with vd <= ve , and hg , hi [?]
Dh , with hg <= hi , such that M, h(hg , vd ), (hi , ve )i  ps.
The truth relation for WDAC-formulas is obtained by replacing the last two rules with the following ones: * M, o  e ps iff there exist he , hf [?]
Dh , with hc <= he <= hf , and vg , vi [?]
Dv , with vg <= vi , such that M, h(he , vg ), (hf , vi )i  ps; * M, o  n ps iff there exist ve , vf [?]
Dv , with vd <= ve <= vf , and hg , hi [?]
Dh , with hg <= hi , such that M, h(hg , ve ), (hi , vf )i  ps.
Length constraints of the form lenh>k or lenh<k can be easily defined in terms of lenh=k ; the same holds for the vertical ones.
Without loss of generality, we will restrict our attention to the satisfiability problem for DAC and WDAC over an initial object h(0, 0), (h0 , v0 )i (initial satisfiability).
* *  III.
E XPRESSIVE P OWER OF DAC As pointed out in [17], one of the possible measures of the expressive power of a directional-based spatial logic for rectangles is the comparison with Rectangle Algebra (RA) [12].
In RA, one considers a finite set of objects (rectangles) O1 , .
.
.
, On , and a set of constraints between pairs of them.
Each constraint is a pair of Allen's Interval Algebra relations that capture the relationships between the projections on the x- and the y-axis of the objects.
As an example, O1 (b, d)O2 means that bef ore (resp., during) is the interval relation between the x-projections (resp., yprojections) of O1 and O2 .
In general, given an algebraic constraint network, the main problem is to establish whether or not the network is consistent, that is, if all constraints can be jointly satisfied.
In [17], it has been shown that SpPNL is powerful enough to express and to check the consistency of an RA-constraint network.
In [19], the authors show that the same can be done with its decidable fragment WSpPNL.
Here, we consider the problem of checking the consistency of an augmented interval and rectangle network [20], which can be viewed as the metric version of the consistency problem for an RA-constraint network.
An augmented network is basically an RA-constraint network enriched with a set + - of point-based constraints of the forms OiX - OjX = k + - or OiY - OjY = k. Such point-based constraints allow one to relate the endpoints of the various objects; thus, for example, one can force the object O1 and the object O2 to be 3 units far from each other along the x-axis, with O2 - + after O1 , by means of O2X - O1X = 3.
Moreover, an augmented network makes it possible to constrain the horizontal  p p n p n p  e p  e p  Figure 1.
Intuitive semantics of DAC (left) and WDAC (right).
and/or the vertical lengths of an object by imposing suitable constraints on the distance between its endpoints.
Augmented networks can be embedded in DAC as follows.
As a preliminary step, we introduce the universal operator u and nominals.
The universal operator forces a formula ph to be true everywhere in a model M ; nominals are propositional letters which are true only over the current (spatial) object.
It can be easily shown that both the universal operator and nominals can be defined in DAC.
The former is defined as follows: u ph [?]
e n ph.
As for the latter ones, in order to express the property "p is true over the current object and false everywhere else", we use the following formula, that exploits the fresh propositional letters pe and pn : p [?]
u (p - e pe [?]
n pn )[?]
u (e p - e (lenh>0 - e !p))[?]
u (n p - n (lenv>0 - n !p))[?]
u (e pe - e (lenh>0 - e !pe ))[?]
u (n pn - n (lenv>0 - n !pn )) Notice that degenerate spatial objects (lines and points) play an essential role in the definitions of the universal operator and nominals.
The encoding is defined as follows.
For every object Oi in the network, we introduce a distinct propositional variable pOi and we force it to be a nominal.
Metric constraints are expressed by means of the metric component of DAC.
As - + an example, the constraint O2X -O1X = 3 can be encoded by the formula: u (pO1 -  e (lenh=3  p  p  [?]
e pO2 )).
One can prove that the conjunction of the resulting DACformulas is satisfiable if and only if the network is consistent.
Finally, DAC allows one to express natural spatial statements.
Let area=k be a shorthand for (lenh=1 [?]
lenv=k ) [?]
(lenh=2 [?
]lenv= k )[?].
.
., where all and only admissible combina2 tions of horizontal and vertical constraints occur (in a similar way, one can define area>k and area<k ).
The condition "The area of the current object is less then 4 square meters" can be expressed by means of the formula area<4 .
Similarly, the condition "If the area of the current object is greater than 6 square meters, then there exists a line of length 12 meters to the north of it with the property q, and a point with the property p to the east of it" is captured by the formula: area>6 - n (lenv=0 [?]
lenh=12 [?]
q) [?]
e (lenh=0 [?]
lenv=0 [?]
p).
IV.
DAC: D ECIDABILITY AND C OMPLEXITY A.
Basic Notions Let ph be a DAC-formula to be checked for satisfiability and let AP be the set of its propositional variables.
We define the notions of closure, spatial request, atom, and fulfilling labeled spatial structure as follows.
Definition 1.
The closure CL(ph) of ph is the set of all sub-formulas of ph and of their negations (we identify !
!ps with ps).
Let e [?]
{e , e , !e , !e } (resp., n [?]
{n , n , !n , !n }).
The set of horizontal (resp., vertical) spatial requests of ph is the set HF(ph) (resp., VF(ph)) of all horizontal (resp., vertical) spatial formulas in CL(ph), that is, HF(ph) = {e ps | e ps [?]
CL(ph)} (resp., VF(ph) = {n ps | n ps [?]
CL(ph)}).
Definition 2.
A ph-atom is a set A [?]
CL(ph) such that i) for every ps [?]
CL(ph), ps [?]
A iff !ps 6[?]
A, and ii) for every ps1 [?]
ps2 [?]
CL(ph), ps1 [?]
ps2 [?]
A iff ps1 [?]
A or ps2 [?]
A.
We denote the set of all ph-atoms by Aph .
Let |ph| (the size of ph) be the number of symbols of ph.
By induction on the structure of ph, one can easily prove that | CL(ph)| is linear and |Aph | is exponential in |ph|.
Atoms are connected by the h v binary relation Rph (resp., Rph ) over Aph x Aph such that, h for every pair of atoms (A, A0 ) [?]
Aph x Aph , A Rph A0 v 0 (resp., A Rph A ) if and only if, for every e ps [?]
CL(ph)  | HF(ph)| 2  (resp., n ps [?]
CL(ph)), if e ps [?]
A (resp., n ps [?]
A), then ps [?]
A0 .
We now introduce a suitable labeling of spatial structures based on ph-atoms.
different objects of the type h(hc , ve ),(hf , vg )i are sufficient to fulfill existential horizontal spatial formulas belonging to the labeling of an object h(ha , vb ),(hc , vd )i (and symmetrically for the vertical axis).
Definition 3.
A ph-labeled spatial structure (LSS for short) is a pair L = ((F, O(F)), L), where (F, O(F)) is a spatial structure and L : O(F) - Aph is a labeling function such that, for every pair of objects h(ha , vb ), (hc , vd )i and h(hc , ve ), (hf , vg )i, L(h(ha , vb ), (hc , vd )i) h Rph L(h(hc , ve ), (hf , vg )i), and for every pair of objects h(ha , vb ), (hc , vd )i and h(he , vd ), (hf , vg )i, L(h(ha , vb ), v (hc , vd )i) Rph L(h(he , vd ),(hf ,vg )i).
An LSS L is said to be: * horizontally (resp., vertically) fulfilling if for every formula of the type e ps (resp., n ps) in CL(ph) and every object h(ha , vb ), (hc , vd )i, if e ps [?]
L(h(ha , vb ), (hc , vd )i) (resp., n ps [?]
L(h(ha , vb ), (hc , vd )i)), then there exists an object h(hc ,ve ),(hf ,vg )i (resp., h(he ,vd ),(hf ,vg )i) such that ps belongs to L(h(hc , ve ),(hf ,vg )i) (resp., L(h(he ,vd ),(hf ,vg )i)); * length fulfilling if for every length constraint lenh=k (resp., lenv=k ) in CL(ph) and every object h(ha , vb ), (hc , vd )i, lenh=k (resp., lenv=k ) belongs to L(h(ha , vb ), (hc , vd )i) iff (hc - ha ) = k (resp., (vd - vb ) = k); * fulfilling if and only if it is horizontally, vertically, and length fulfilling.
Definition 4.
Given an LSS L = ((F, O(F)), L) and hc [?]
Dh (resp., vd [?]
Dv ), we denote by REQh (hc ) (resp., REQv (vd )) the set of all and only the horizontal (resp., vertical) requests belonging to the labelings of objects of the type h(ha , vb ),(hc , vd )i.
The set REQh (ph) (resp., REQv (ph)) is the set of all possible sets of horizontal (resp., vertical) requests for the formula ph.
It is quite straightforward to prove that a formula ph is satisfiable if and only if there exists a fulfilling LSS such that ph belongs to the labeling of some initial object h(0, 0), (h0 , v0 )i.
This allows us to reduce the satisfiability problem for ph to the problem of finding a fulfilling LSS with an initial object labeled by ph.
From now on, we say that a fulfilling LSS L satisfies ph if and only if ph [?]
L(h(0, 0), (h0 , v0 )i) for some h0 , v0 >= 0.  , mv = | VF(ph)| , and m = Hereafter, let mh = | HF(ph)| 2 2 max{mh , mv }, and let k = max{k 0 , 1}, where either lenh=k0 or lenv=k0 occurs in ph and for all lenh=k00 and lenv=k00 occurring in ph, k 0 >= k 00 .
B.
The Elimination Lemma Since fulfilling LSSs satisfying ph may be arbitrarily large or even infinite, we must find a way to finitely establish their existence.
In the following, we will show how the techniques developed in [1] for the metric temporal logic RPNL+INT can be exploited to prove the decidability of DAC.
We first give a bound on the size of finite fulfilling LSSs and then we show that, in the infinite case, we can safely restrict ourselves to infinite fulfilling LSSs with a finite bounded representation.
To prove these results, we take advantage of the following two fundamental properties of LSSs: i) the labelings of all objects that share the rightmost horizontal (resp., topmost vertical) coordinate must agree on horizontal (resp., vertical) spatial formulas, that is, for every ps [?]
HF (ph) (resp., ps [?]
V F (ph)), ps [?]
L(h(ha , vb ),(hc , vd )i) if and only if ps [?]
L(h(he ,vf ),(hc ,vg )i) (resp., ps [?]
L(h(ha , vb ), (hc , vd )i) if and only if ps [?]
L(h(he ,vf ),(hg ,vd )i)); ii)  In order to bound the size of finite LSSs that we must take into consideration when checking the satisfiability of a given formula ph, we determine the maximum number of times any set in REQh (ph) (resp., REQv (ph)) may appear in a given LSS.
Definition 5.
Given an LSS L = ((F, O(F)), L), we say that a horizontal (resp., vertical) k-sequence in L is a sequence of k consecutive points in Dh (resp., Dv ).
Given a horizontal sequence s in L, its sequence of horizontal requests REQh (s) is defined as the sequence of horizontal requests at the points in s, and similarly for the vertical component.
We say that h [?]
Dh starts a horizontal ksequence s if the horizontal requests at h, .
.
.
, h + k - 1 define an occurrence of REQh (s), and similarly for the vertical component.
Definition 6.
Given an LSS L = ((F, O(F)), L), any sequence of horizontal requests REQh (s) is said to be abundant in L if and only if it has at least k * (m2 + m) * | REQh (ph)|2 + (m2 + 3 * m) * | REQh (ph)| + 1 distinct occurrences in Dh .
The case of an abundant sequence of vertical requests is defined similarly.
The above definition shows a quadratic increase in complexity from RPNL+INT.
In the temporal case, indeed, a number of occurrences linear in m and REQ(ph) suffices to declare a sequence of requests as abundant.
For any given horizontal k-sequence s in L, we will denote by hsq the first point of the q-th occurrence of s. Hereafter, whenever s will be evident from the context, we will write hq for hsq .
The next Lemma is analogous to Lemma 5.12 in [1].
However, in the spatial setting, to be able to reduce the size of the model we must also guarantee the existence of a certain number of occurrences of the sequence before a given point hq .
Lemma 1.
Let L = ((F, O(F)), L) be an LSS and s be a horizontal k-sequence in L such that REQh (s) is abundant in L. Then, there exists an index q such that:  1) for every pair (REQh (h), REQh (h0 )) such that h [?]
Dh- = {h | hq <= h < hq+1 } and h0 - h <= k, there exist at least m2 + m distinct pairs of points h00 , h000 in Dh \ Dh- such that h000 - h00 = h0 - h and (REQh (h00 ), REQh (h000 )) = (REQh (h), REQh (h0 )); 2) for every element R [?]
{REQh (h) | h [?]
Dh- }, R occurs at least m2 + m times before hq and at least 2 * m times after hq+1 + k. Proof: (sketch) By Definition 6, there exist at least k * (m2 + m) * | REQh (ph)|2 + (m2 + 3 * m) * | REQh (ph)| + 1 points hi [?]
Dh such that hi is the first element of a distinct occurrence of s. For every index i, if there exists a pair (REQh (h), REQh (h0 )), with hi <= h < hi+1 and h0 - h <= k, such that there exist no m2 + m distinct pairs of points h00 , h000 in Dh \ {h | hi <= h < hi+1 } with h000 - h00 = h0 - h and (REQh (h00 ), REQh (h000 )) = (REQh (h), REQh (h0 )), then q cannot be equal to i.
By an easy combinatorial argument, we can prove that there exist at most k * (m2 + m) * | REQh (ph)|2 such indexes, where | REQh (ph)|2 is the number of possible pairs (REQh (h), REQh (h0 )), k is the number of possible values for h0 -h, and, for any pair (REQh (h), REQh (h0 )) and any distance h0 -h, m2 +m is the greatest number of occurrences of a pair (REQh (h), REQh (h0 )) that may lead to a violation of condition 1.
Since s is abundant in L, we can conclude that there exist at least (m2 + 3 * m) * | REQh (ph)| + 1 indexes in Dh that satisfy condition 1.
Let us now restrict our attention to these indexes.
In the worst case, for at most (m2 + m) * | REQh (ph)| indexes i it may happen that there exist no m2 + m occurrences of R before hi for some R [?]
{REQh (h) | hi <= h < hi+1 }.
Hence, there exist at least 2 * m * | REQh (ph)| + 1 indexes that satisfy both the above conditions.
By applying the same argument, we can conclude that for at most 2 * m * | REQh (ph)| indexes i it may happen that there exist no 2 * m occurrences of R after hi+1 + k for some R [?]
{REQh (h) | hi <= h < hi+1 }.
This allows us to conclude that there exists at least one index i that satisfies the conditions of the lemma.
Lemma 2.
(Horizontal Elimination Lemma) Let L = ((F, O(F)), L) be a fulfilling LSS that satisfies ph.
Suppose that there exists an abundant k-sequence of horizontal requests REQh (s) and let Dh- be the set whose existence is guaranteed by Lemma 1.
Then, there exists a fulfilling LSS L = ((F, O(F)), L) that satisfies ph, with Dh = Dh \ Dh- and Dv = Dv .
Proof: Let us fix a fulfilling LSS L = ((F, O(F)), L) satisfying ph at some h(0, 0), (h0 , v0 )i and an abundant ksequence of horizontal requests REQh (s).
Moreover, let Dh- be the set whose existence is guaranteed by Lemma 1 and Dh0 = Dh \Dh- .
Finally, let L = ((F0 , O(F0 )), L0 ) be the restriction of L to Dh0 .
L is still an LSS, but not necessarily a fulfilling one.
To recover the property of fulfillment, we  must suitably redefine the evaluation of objects.
Fixing lengths.
First, we must revise the labeling of those objects whose horizontal length was greater than k before the elimination of points in Dh- and has become less than or equal to k in Dh0 .
In general, the horizontal length of every object h(ha ,vb ),(hc ,vd )i, with ha < hq and hc >= hq+1 , becomes hq+1 - hq units shorter.
This is critical for those objects whose horizontal length in Dh was less than or equal to k + (hq+1 - hq ).
To cope with these cases, for every h < hq , va , vb [?]
Dv , and 0 <= r < k, we put L0 (h(h, va ), (hq+1 + r, vb )i) = L(h(h, va ), (hq + r, vb )i).
(Notice that, in Dh0 , hq+1 turns out to be the immediate successor of hq - 1.)
Fixing defects.
Once the above relabeling has been accomplished, we may still have four types of defects (some of them have been introduced by the elimination, others by the length-fixing process itself): 1) there is a formula e ps [?]
REQh (ha ), for some ha [?]
Dh0 , that is not fulfilled anymore.
For this to be the case, it must be that some object h(ha ,vb ), (h,vc )i either has been eliminated because h [?]
Dh- or its labeling has been changed by the previous step.
In both cases, the critical objects are those such that (h - ha ) > k in the original model.
Since there are at least 2 * m points h1 , .
.
.
, h2*m after hq+1 + k with the same set of requests of h, for at least one of them, say hi , either the label of the object h(ha ,vb ),(hi , vc )i satisfies neither vertical requests from REQv (vb ) nor horizontal requests from REQh (ha ), or it satisfies only requests that are satisfied elsewhere.
So, we put L0 (h(ha ,vb ),(hi , vc )i) = L(h(ha ,vb ),(h,vc )i), thus fixing the defect; 2) there is a formula n ps [?]
REQv (va ), for some va [?]
Dv , that is not fulfilled anymore.
As in the previous case, this may happen either because of the elimination of some object h(hb ,va ),(h, vc )i, where h [?]
Dh- and hb [?]
Dh0 , or because of the relabeling of some object h(hb ,va ),(h,vc )i, where h, hb [?]
Dh0 .
Again, for this to be the case, it must be that (h - hb ) > k. To fix this defect, we proceed exactly as in the previous case; 3) there is a formula n ps [?]
REQv (va ), for some va [?]
Dv , that is not fulfilled anymore because of the elimination of some object h(h,va ), (hb ,vc )i, where h, hb [?]
Dh- and hb - h <= k. By Lemma 1, there are at least m2 + m distinct pairs (h1 , h01 ), .
.
.
, (hm2 +m , h0m2 +m ) such that for all i (1 <= i <= m2 + m), hi , h0i [?]
Dh \Dh- , h0i -hi = hb -h, and (REQh (hi ), REQh (h0i )) = (REQh (h), REQh (hb )).
Let {e t1 , .
.
.
, e tq } [?]
REQh (h), with q <= m, be the set of horizontal requests at h. We look for an index i such that we can force hi to satisfy ps, as well as all horizontal requests tj (1 <= j <= q), exactly (that is, at the same vertical coordinates) as h did, that is, ps [?]
L0 (h(hi , va ), (h0i , vc )i) and, for every j (1 <= j <= q), tj [?]
L0 (h(hi , vtj ), (h0tj , vt0 j )i) if and only if tj [?]
L(h(h, vtj ), (htj , vt0 j )i), with h0tj - hi = htj - h. In order to accomplish such a relabeling process, we  must be careful not to introduce defects.
The operation is safe with respect to horizontal defects, since, by construction, REQh (hi ) = REQh (h).
As for possible vertical defects, the replacement of object labels may cause vertical requests fulfilled by overwritten labels to become unfulfilled, thus introducing vertical defects.
However, thanks to the presence of sufficiently many points hi with the same set of horizontal requests as h (candidates for the relabeling process), we are guaranteed of the existence of an index i such that the objects whose labels we overwrite either do not satisfy any vertical requests or satisfy only vertical requests that are also satisfied by other objects (other candidates for the relabeling process).
4) there is a formula n ps [?]
REQv (va ), for some va [?]
Dv , that is not fulfilled anymore because of the elimination of some object h(h,va ),(hb ,vc )i), where h [?]
Dh- , and (hb - h) > k. To fix this defect, we proceed exactly as in case 3, using one of the m2 + m "copies" of h before hq as left horizontal coordinate.
In this way, we can fix all defects.
At the end of the process, L is a fulfilling LSS, as claimed.
Similarly, we have: Lemma 3.
(Vertical Elimination Lemma) Let L = ((F, O(F)), L) be a fulfilling LSS that satisfies ph.
Suppose that there exists an abundant k-sequence of vertical requests REQv (s) and let Dv- be the set whose existence is guaranteed by the (vertical version of) Lemma 1.
Then, there exists a fulfilling LSS L = ((F, O(F)), L) that satisfies ph, with Dv = Dv \ Dv- and Dh = Dh .
Lemma 2 and 3 are the spatial counterpart of the Elimination Lemma for RPNL+INT [1].
However, while in the temporal case only defects of type 1 may occur, the interaction between the two spatial operators of DAC introduces other types of defect.
C. DAC Satisfiability Thanks to the horizontal and vertical elimination lemmas above, the following theorem holds.
Theorem 1 (Small Model Theorem).
If ph is any finitely satisfiable formula of DAC, then it is satisfiable in a finite LSS L = ((F, O(F)), L) such that |Dh | <= (k * (m2 + m) * | REQh (ph)|2 + (m2 + 3 * m) * | REQh (ph)|) * | REQh (ph)|k + k - 1, and |Dv | <= (k * (m2 + m) * | REQv (ph)|2 + (m2 + 3 * m) * | REQv (ph)|) * | REQv (ph)|k + k - 1.
Corollary 1.
Finite satisfiability for DAC is decidable.
Infinite structures can be dealt with in a similar way.
As a preliminary step, we distinguish among three types of infinite LSSs, depending on whether only one domain is infinite (and which one) or both.
For each of these types, an appropriate representation can be obtained as follows.
Definition 7.
Any LSS L = ((F, O(F)), L) is horizontally ultimately periodic, with prefix P reH , period P erH >= 0 and threshold k, if and only if: 1) for every h, h0 , with h0 >= P reH and (h0 - h) > k, and every v, v 0 , L(h(h, v), (h0 , v 0 )i) = L(h(h, v), (h0 + P erH , v 0 )i); 2) for every object h(h,v), (h0 , v 0 )i, with h >= P reH , L(h(h, v), (h0 , v 0 )i) = L(h(h + P erH , v), (h0 + P erH , v 0 )i).
The notion of vertically ultimately periodic LSS can be defined in a similar way.
Finally, a LSS is simply ultimately periodic if it is (i) both horizontally and vertically ultimately periodic, or (ii) horizontally ultimately periodic and vertically finite, or (iii) horizontally finite and vertically ultimately periodic.
It is immediate to see that every ultimately periodic LSS is finitely presentable.
Lemma 4.
Let L = ((F, O(F)), L) be an horizontally infinite, vertically finite LSS that satisfies ph.
Then, there exists an ultimately periodic LSS L that satisfies ph.
An analogous of Lemma 4 can be stated for the vertical component, and, thus, any infinite LSS can be transformed into a ultimately periodic one.
Theorem 2 (Periodic Small Model Theorem).
Let L = ((F, O(F)), L) be an LSS that satisfies ph.
Then, there exists an ultimately periodic LSS L such that (i) L satisfies ph and (ii) the length of the horizontal prefix and the horizontal period are bounded by (k * (m2 + m) * | REQh (ph)|2 + (m2 + 3 * m) * | REQh (ph)|) * | REQh (ph)|k + k - 1 (similarly for the vertical component).
Once again, the spatial features of DAC causes a quadratic increase in the size of (prefixes and periods of) the model with respect to the metric temporal logic RPNL+INT [1].
Corollary 2.
The satisfiability problem for DAC is decidable.
D. Complexity Issues In [19], it has been shown that the non-metric version of DAC presents a NEXPTIME-complete satisfiability problem.
Hence, DAC is at least NEXPTIME-hard.
To correctly state the complexity of the satisfiability problem for DAC, we have to consider three different cases, depending on the representation of length constraints.
As a direct consequence of the theorems given in previous sections, a nondeterministic decision procedure that guesses an ultimately periodic model satisfying the formula ph can be easily built.
Such a procedure works in NTIME(2|ph|*k ), and its exact complexity class depends on how the metric constants are encoded.
Theorem 3.
The satisfiability for DAC is: * NEXPTIME-complete, if k is a constant;  * *  NEXPTIME-complete, if k is represented in unary; between EXPSPACE and 2NEXPTIME, if k is represented in binary.
NEXPTIME inclusion (cases 1 and 2) can be proved by simply observing that O(2|ph|*k ) = O(2|ph| ) if k is constant or represented in unary (with respect to the length of the formula); NEXPTIME-hardness is a consequence of NEXPTIME-hardness for SpPNL [19].
In these cases, there is not a complexity increase with respect to the temporal counterpart RPNL+INT, which is NEXPTIMEhard as well [1].
On the contrary, when k is represented in binary (Case 3), RPNL+INT is EXPSPACE-complete, and thus DAC is at least EXPSPACE-hard.
However, since k = O(2|ph| ), the non-deterministic procedure runs in time |ph| O(22 ), giving us a 2NEXPTIME upper bound on the complexity.
We do not know yet which is the exact complexity class for DAC in this case, and whether the switch from temporal logic to its spatial counterpart causes an increase in complexity or not.
V. W EAK D IRECTIONAL A REA C ALCULUS (WDAC) In this section, we discuss expressive power, decidability, and complexity of WDAC, ans we briefly compare it with full DAC.
First of all, formulas of WDAC can be translated into DAC-formulas by replacing any sub-formula of the form e ps (resp., n ps) by e e ps (resp., n n ps).
By a bisimulation argument, we can prove that the converse does not hold.
We will show that, for every k >= 0, there exist two models M1k and M2k that are bisimilar with respect to WDAC-formulas with maximum metric constant k, but can be easily distinguished by a DAC-formula.
Let k >= 0 and AP = {p}.
The two spatial models M1 = hF1 , O(F1 ), V1 i and M2 = hF2 , O(F2 ), V2 i are defined as follows.
* F1 = F2 = N x N * V1 (h(1, va ), (k + 4, vb )i) = V1 (h(3, va ), (k + 4, vb )i) = {p}, for all va , vb [?]
N; * V2 (h(3, va ), (k + 4, vb )i) = {p}, for all va , vb [?]
N; * p is false everywhere else.
The following relation Z k [?]
O(F1 ) x O(F2 ) is a WDACbisimulation between M1k and M2k : k * (h(ha , vb ), (hc , vd )i, h(ha , vb ), (hc , vd )i) [?]
Z for all (ha , hc ) 6= (1, k + 4); k * (h(1, vb ), (k + 4, vd )i, h(3, vb ), (k + 4, vd )i) [?]
Z ; k * (h(2, vb ), (k + 4, vd )i, h(1, vb ), (k + 4, vd )i) [?]
Z .
Since the DAC-formula e p is true over the object h(0, 0), (1, 1)i in M1k , but it is false in M2k for every value of k, and since bisimilar models must satisfy the same set of WDAC-formulas, e p cannot be translated to any WDACformula.
Theorem 4.
WDAC is strictly less expressive than DAC.
Despite being strictly less expressive than DAC, Weak DAC is powerful enough to express the augmented interval  and rectangle network consistency problem discussed in Section III, at the price of a more complex encoding.
Decidability of WDAC trivially follows from the decidability of DAC.
However, its weaker semantics allows us to lower the complexity bound.
The modal operators are transitive in WDAC: if a formula e ps holds over an object, then it holds over any object to the east of it (and symmetrically for n ps), while in full DAC this is not necessarily the case.
This implies that if a formula e ps [?]
REQh (ha ) (resp., n ps [?]
REQv (va )) for some ha [?]
Dh (resp., va [?]
Dv ), then e ps [?]
REQh (hb ) for every hb > ha (resp., n ps [?]
REQv (vb ) for every vb > va ).
By exploiting this property, we can provide a bound on the size of LSS satisfying a WDAC-formula that is exponentially smaller than the one given for DAC in Theorem 2.
Theorem 5 (Weak Periodic Small Model Theorem).
Let ph be a satisfiable WDAC-formula.
Then, there exists a ultimately periodic fulfilling LSS satisfying ph with horizontal and vertical prefix bounded by (2 * m + 1) * (k + 1) + 1, horizontal and vertical period bounded by 2 * m * (k + 1), and threshold k. As a direct consequence of Theorem 5, a nondeterministic decision procedure that guesses an ultimately periodic model satisfying the formula ph can be easily built.
Such a procedure works in NTIME(k*|ph|), and its exact complexity class depends on how the metric constants are encoded.
Theorem 6.
The satisfiability for WDAC is: * NP-complete, if k is a constant; * NP-complete, if k is represented in unary; * in NEXPTIME, if k is represented in binary.
NP-completeness of the problem when k is constant or in unary encoding follows from the NP-completeness of SAT.
We do not know yet if WDAC with binary encoding is NEXPTIME-hard or not.
VI.
C ONCLUSION In this paper, we proposed a new modal logic of directional relations, called DAC, that pairs qualitative and quantitative spatial reasoning about points, lines, and rectangles over natural number frames.
DAC can be viewed as an extension of the spatial logic WSpPNL [19] with special atomic propositions that make it possible to express a weak notion of area.
We proved that the satisfiability problem for DAC is decidable.
Moreover, we showed that, when a binary encoding of length constraints is provided, it lies in between EXPSPACE and 2NEXPTIME.
The exact complexity class is an open problem.
Then, we analyzed the satisfiability problem for a proper expressive fragment of DAC, called WDAC, and we proved that it belongs to NEXPTIME.
As in the case of DAC, the exact complexity class, when a binary encoding of length constraints is provided, is an open problem.
ACKNOWLEDGMENT We would like to acknowledge the support from the EU project FP7-ICT-223844 CON4COORD (D. Bresolin), the Italian PRIN project Innovative and multi-disciplinary approaches for constraint and preference reasoning (D. Della Monica, A. Montanari, P. Sala), the Italian GNCS project Logics, automata, and games for the formal verification of complex systems (D. Bresolin, D. Della Monica, A. Montanari, P. Sala, G. Sciavicco), and the Spanish project TIN2009-14372-C03-01 (G. Sciavicco).
[12] A. Mukerjee and G. Joe, "A qualitative model for space," in Proc.
of the of the Eighth National Conference on Artificial Intelligence (AAAI-90), 1990, pp.
721-727.
[13] P. Balbiani, J. Condotta, and L. F. del Cerro, "A model for reasoning about bidimensional temporal relations."
in Proc.
of the Sixth International Conference on Principles of Knowledge Representation and Reasoning (KR'98), 1998, pp.
124-130.
[14] ----, "A new tractable subclass of the rectangle algebra."
in Proc.
of the Sixteenth International Joint Conference on Artificial Intelligence (IJCAI-99), 1999, pp.
442-447.
R EFERENCES [1] D. Bresolin, A. Montanari, V. Goranko, and G.Sciavicco, "Right propositional neighborhood logic over natural numbers with integer constraints for interval lengths;," in Proc.
of the 7th IEEE Conference on Software Engeneering and Formal Methods (SEFM 2009), 2009, pp.
240 - 249.
[2] A. Cohn and S. Hazarika, "Qualitative spatial representation and reasoning: An overview," Fundamenta Informaticae, vol.
46, no.
1-2, pp.
1-29, 2001.
[3] M. Aiello, I. Pratt-Hartmann, and J. V. Benthen, Eds., Handbook of Spatial Logics.
Springer, 2007.
[4] B. Bennett, "Spatial reasoning with propositional logics," in Proc.
of the Fourth International Conference on Principles of Knowledge Representation and Reasoning (KR'94), J. Doyle, E. Sandewall, and P. Torasso, Eds.
Morgan Kaufmann, 1994, pp.
51-62.
[5] ----, "Modal logics for qualitative spatial reasoning," Journal of the Interest Group in Pure and Applied Logic (IGPL), vol.
4, no.
1, pp.
23-45, 1996.
[6] B. Bennett, A. Cohn, F. Wolter, and M. Zakharyaschev, "Multi-dimensional modal logic as a framework for spatiotemporal reasoning," Applied Intelligence, vol.
17, no.
3, pp.
239-251, 2002.
[7] W. Nutt, "On the translation of qualitative spatial reasoning problems into modal logics," in Proc.
of the 23rd Annual German Conference on Artificial Intelligence (KI'99).
SpringerVerlag, 1999, pp.
113-124.
[8] M. Aiello and J. van Benthem, "A modal walk through space," Journal of Applied Non-Classical Logic, vol.
12, no.
3-4, pp.
319-363, 2002.
[9] R. Kontchakov, I. Pratt-Hartmann, F. Wolter, and M. Zakharyaschev, "On the computational complexity of spatial logics with connectedness constraints," in Proc.
of the 15th International Conference LPAR, ser.
LNCS, I. Cervesato, H. Veith, and A. Voronkov, Eds., vol.
5330.
Springer Verlag, 2008, pp.
574-589.
[10] C. Lutz and F. Wolter, "Modal logics of topological relations," in Proc.
of Advances in Modal Logics 2004, 2004.
[11] H. Guesguen, "Spatial reasoning based on Allen's temporal logic," International Computer Science Institute, Tech.
Rep. ICSI TR89-049, 1989.
[15] Y. Venema, "Expressiveness and completeness of an interval tense logic," Notre Dame Journal of Formal Logic, vol.
31, no.
4, pp.
529-547, 1990.
[16] M. Marx and M. Reynolds, "Undecidability of compass logic," Journal of Logic and Computation, vol.
9, no.
6, pp.
897-914, 1999.
[17] A. Morales, I. Navarrete, and G. Sciavicco, "A new modal logic for reasoning about space: spatial propositional neighborhood logic," Annals of Mathematics and Artificial Intelligence, vol.
51, no.
1, pp.
1-25, 2007.
[18] V. Goranko, A. Montanari, and G. Sciavicco, "Propositional interval neighborhood temporal logics," Journal of Universal Computer Science, vol.
9, no.
9, pp.
1137-1167, 2003.
[19] D. Bresolin, A. Montanari, P. Sala, and G. Sciavicco, "A tableau-based system for spatial reasoning about directional relations," in Proc.
of the 18th International Conference on Automated Reasoning with Analytic Tableaux and Related Methods (TABLEAUX 2009), Lecture Notes in Computer Science, vol.
5607.
Springer, 2009, pp.
123-137.
[20] J. Condotta, "The augmented interval and rectangle networks," in Proc.
of the Seventh International Conference on Principles of Knowledge (KR'2000), 2000, pp.
571-579.
[21] S. Dutta, "Approximate spatial reasoning: Integrating qualitative and quantitative constraints," International Journal of Approximated Reasoning, vol.
5, no.
3, pp.
307-330, 1991.
[22] M. Sheremet, D.Tishkovsky, F. Wolter, and M. Zakharyaschev, "From topology to metric: modal logic and quantification in metric spaces," in Proc of the 2006 Conference on Advances in Modal Logic, 2006, pp.
429-448.
[23] U. Hustadt, D. Tishkovsky, F. Wolter, and M. Zakharyaschev, "Automated reasoning about metric and topology," in Proc.
of the 10th European Conference on Logics in Artificial Intelligence (JELIA 2006), 2006, pp.
490-493.
[24] O. Kutz, F. Wolter, H. Sturm, N. Suzuki, and M. Zakharyaschev, "Logics of metric spaces," ACM Transactions on Computational Logic, vol.
4, no.
2, pp.
260-294, 2003.