2011 Eighteenth International Symposium on Temporal Representation and Reasoning  Consistency of qualitative constraint networks from tree decompositions Jean-FranASSois Condotta and Dominique DaAlmeida UniversitAS Lille-Nord de France, Artois CRIL-CNRS, UMR 8188 Rue de launiversitAS, SP 16, F62307 Lens {condotta,dalmeida}@cril.fr  approaches can be used.
AbstractaA common way to decide the consistency problem of a qualitative constraint network (QCN) is to encode it as a boolean formula in order to benedZt from the efdZciency of SAT solvers.
In recent works, a decomposition method of QCNs have been proposed to reduce the amount of boolean formulae.
In this paper, we dZrst show that the decompositions used can be expressed by particular tree decompositions.
Furthermore, for some classes of relations, we prove that the consistency problem of a QCN can be decided by applying the method of the closure by weak composition on the clusters of a tree decomposition.
This result allows us to extend the approach recently proposed to tree decompositions of QCNs.
The dZrst, introduced by Nebel [7], consists in a synchronous backtracking algorithm by maintaining a local consistency.
This algorithm exploits certain tractable classes of relations with multi-valued assignments and the weak composition closure allowing to obtain a local consistency close to path-consistency.
At each step during search, a constraint relation is split into sub-relations belonging to the tractable class.
The constraint is iteratively replaced by each sub-relation.
This cutting allows us to decrease the branching factor during the search.
Most of the QCN solvers exploit this solving method, in particular GQRa [8] which is currently the most efdZcient solver.
Keywords-Temporal qualitative constraints ; Consistency problem ; Tree decomposition  I. I NTRODUCTION  The second approach [9], [10] consists in encoding the consistency problem of QCNs as boolean formulae in order to benedZt from the efdZciency of SAT solvers.
However, the counter-part of this approach is the large amount of the boolean formulae obtained.
Recently, in order to overcome this drawback for QCNs of the Interval Algebra, Li et al.
[11] proposed a method of decomposition allowing to discard some constraints of the QCN.
This method splits recursively the QCN considered in two equivalent subQCNs.
Each constraint of the initial QCN which is absent from one of the two QCNs is considered as useless to decide the consistency, and is not considered in the encoding.
The amount of the boolean formulae is greatly reduced compared to the full encoding, and the experimental results show an improvement in term of solving time.
Reasoning about temporal or spatial knowledge is a major task in many domains of ArtidZcial Intelligence, such as Geographic Information System (GIS), natural language processing, temporal/spatial scheduling, and so on.
Qualitative reasoning is a way to express and process the qualitative aspect of knowledge about temporal or spatial entities.
A qualitative calculus considers a domain from temporal or spatial entities and a dZnite set of base relations over these entities.
Each base relation symbolizes a relative position between the entities, and is a factoring for condZgurations given as numeric information.
These previous decades, many qualitative calculi have been studied.
The Interval Algebra [1] represents temporal entities by intervals and considers thirteen base relations describing each possible relative position between two temporal entities (see Figure 1).
Many qualitative calculi for temporal knowledge are derived from the Interval Algebra [2], [3], [4].
In spatial reasoning, the well-known qualitative calculus RCC [5], [6] is quite possibly the most studied.
RCC is based on eight base relations between entities dedZned over all regions of a topological space.
In the qualitative calculi frameworks, the set of temporal or spatial information may be represented by some specidZc constraint networks called qualitative constraint networks (QCNs).
In a QCN, each variable stands for a temporal or spatial entity and each constraint restricts the possible condZgurations between entities by using a set of base relations.
Given a QCN, the main decision problem is the consistency problem.
In the general case, this problem is NP-complete.
To solve it, we can cite two kinds of 1530-1311/11 $26.00 AS 2011 IEEE DOI 10.1109/TIME.2011.22  In this paper, we dedZne particular decompositions called RecPart decompositions.
These specidZc decompositions formalize the decompositions of QCNs used by Li et al.
in their process of SAT encoding.
Then, we show that the RecPart decompositions can be equivalently dedZned as tree decompositions [12], widely studied in the framework of dZnite CSPs.
Moreover, we study the consistency problem for the QCN through the tree decompositions.
In particular, we show that, given a tree decomposition for a QCN dedZned over a tractable class of relations, the weak composition closure applied on each cluster is sufdZcient to decide the consistency of the QCN.
Finally, by exploiting this result we propose to decide the consistency of QCNs by using a tractable class of relations and a tree decomposition in the framework of boolean formula encodings.
149   with a, b a B, r  s = aar,bas {a  b}, with r, s a 2B .
The relation r  s is also dedZned as the strongest relation in 2B which contains the usual composition r aS s = {(x, y) a DA D : ax, y, z a D with x a z, z b y and x c y}.
For some qualitative calculi, r aS s and r  s are equivalent.
A class of relations C is a subset of 2B which contains the relation I", all of the singleton relations of 2B , and which is closed under converse, intersection and weak composition.
Given r a 2B and a class C, the smallest relation of C which contains r is denoted by rC and is called the closure of r in C. In IA, let us consider the relation {p, m} a 2B between two entities X and Y .
X {p, m} Y means that a1 X precedes or meets Y .
The converse relation {p, m} = a1 a1 {p , m } = {pi, mi} expresses the relation between Y and X, so Y is preceded or is met by X.
Finally, let us introduce Y {m, s, eq} Z.
We have some information about the relations between X, Y and Y, Z, so we can deduce information about the relation between X, Z by using the weak composition.
Since {p, m}  {m, s, eq} = {p, m}, we have X {p, m} Z.  II.
P RELIMINARY NOTIONS ON QUALITATIVE CALCULI A. Qualitative calculi A qualitative calculus considers a dZnite set of relations B, called base relations, over an indZnite domain D representing the temporal or spatial entities.
In our study, we focus on binary relations (a large part of qualitative calculi considers this kind of base relations).
Each base relation of B represents a certain relative position between spatial or temporal entities.
They are Jointly Exhaustive and Pairwise Disjoint (JEPD), i.e.
each element (x, y) a D A D belongs to one and only one a a B.
The set B has some properties [13] : (1) B is a partition of D A D, (2) B contains the identity relation id and, (3) B is closed by converse, i.e.
the converse of an base relation in B is also in B.
As an illustration, the Interval Algebra (IA), also known as Allenas calculus [1], considers intervals of the line to represent the temporal entities.
The domain D is dedZned by D = {(xa , x+ ) a Q A Q | xa < x+ }.
The base relations correspond to the set B = {eq, p, pi, m, mi, o, oi, s, si, d, di, f, f i}.
Each of these base relations symbolizes a relative position between two temporal intervals, which is illustrated in Figure 1.
A complex relation, also called relation, for a qualitative calculus is an union of base relations.
It is customary to represent a relation by the set of the base relations which compose it.
Hence, in the sequel we make no distinction between the set of relations and the set 2B which will represent the set of relations of a qualitative calculus based on the set of base relations B.
In the Interval Algebra, the relation r = p aS mi aS eq will be represented by the set {p, mi, eq}.
The usual set-theoretic operations union (aS), intersection (aS) B .
For a relation r a 2B , and converse (AVa1 ) are dedZned over 2 a1 the converse is dedZned as r = {aa1 |a a r}.
Among B the relations of 2 , I" denotes the relation that contains all the base relations of B.
The set 2B is also equipped with the weak composition operation, denoted by , dedZned as: a  b = {c a B : ax, y, z a D with x a z, z b y and x c y},  B. Qualitative Constraint Networks A Qualitative Constraint Network (QCN) consists of a dZnite set of m variables V = {v1 , .
.
.
, vm } which represent the spatial or temporal entities, and a map C from V A V to 2B such that C(vi , vi ) a {Id} for each vi a V , with Id the base relation corresponding to the identity relation over D, and a1 C(vi , vj ) = C(vj , vi ) for all vi , vj a V .
In the rest of this paper, we will also denote C(vi , vj ) by N [vi , vj ].
The dZgure 2 illustrates a QCN N of the Interval Algebra.
In this dZgure, a variable is represented by a node, and a constraint by an arc labelled with the associated relation.
Note that, for simplicity, there is no arc going from vi to vj when either there is already an arc going from vj to vi or i = j.
Given a QCN N = (V, C), a partial instantiation of N on V fi a V is a map s from V fi to D. A partial solution on N on V fi a V is a partial instantiation on V fi such that (s(vi ), s(vj )) satisdZes C(vi , vj ) for all vi , vj a V fi , i.e.
there exists a base relation b a C(vi , vj ) such that (s(vi ), s(vj )) a b for all vi , vj a V fi .
A solution of N is a partial solution of N on V .
N is consistent if, and only if,  Relation Symbol Converse Illustration X  precedes  p  pi  Y X  meets  m  mi  Y  {o, mi, f i}  X  overlaps  o  oi  starts  s  si  v8  Y X  {p, pi, di}  Y  {eq, p, mi, f i}  X  during  d  di  Y X  finishes  f  equals  eq  Figure 1.  fi eq  Y  v10  X Y  {eq, m, s, si} v6 {oi, mi}  v9  {oi, m, f i} {eq, p, f i} {di, o, m}  Figure 2.
150  {o, oi, mi, f i}  {eq, p, o, f i} v1  v0  {m, f }  {o, oi, mi, f } {o, mi, f i} v2  The base relations of the Interval Algebra.
v7  {p, mi, s}  v3  v4 {pi, di, o} v5  A QCN N = (V, C) of the Interval Algebra.
there exists a solution of N .
N is trivially inconsistent when there exist two variables v, v fi a V such that N [v, v fi ] = a. N is globally consistent if, and only if, each partial solution of N can be extended to a solution of N .
The projection of the QCN N to V fi with V fi a V , denoted by NV  , is the QCN (V fi , Cproj ) with Cproj the restriction of C to the set V fi .
A sub-QCN N fi of N is a QCN (V, C fi ) such that C fi (vi , vj ) a C(vi , vj ), for all vi , vj a V .
Let N 1 and N 2 be two QCNs dedZned respectively on the sets of variables V 1 and V 2 , with for each pair of variables v, v fi a V 1 aS V 2 , N 1 [v, v fi ] = N 2 [v, v fi ].
We denote by N 1 aS N 2 the unique QCN N dedZned on V 1 aS V 2 such that N [v, v fi ] = N 1 [v, v fi ] for all v, v fi a V 1 , N [v, v fi ] = N 2 [v, v fi ] for all v, v fi a V 2 , N [v, v fi ] = I" for all v a V 2 \ V 1 and v fi a V 1 \ V 2 .
A QCN N = (V, C) is -consistent or closed by weak composition if, and only if, C(vi , vj ) a C(vi , vk )C(vk , vj ) for all vi , vj , vk a V .
The weak composition closure of the QCN N , denoted by (N ) is the largest (for a) -consistent sub-QCN of N .
This closure may be obtained by iterating the operation C(vi , vj ) a C(vi , vj )aS(C(vi , vk )C(vk , vj )) for all vi , vj , vk a V until a dZxpoint is reached.
The worstcase time-complexity of this method is O(m3 ), with m the number of variables.
For some classes of relations, such as the set of the ORD-Horn relations or the set of the convex relations [14], [15] of IA, the consistency problem of a QCN can be decided by enforcing -consistency.
Hence, a -consistent ORD-Horn QCN with no empty constraint is a consistent QCN.
The class of convex relations admits a stronger property : each -consistent convex QCN non trivially inconsistent is globally consistent [16].
We conclude this section with some dedZnitions about trees.
Given a rooted tree (a connected acyclic graph with a root) T = (X, F ) and a node Xi a X, we denote by desc(Xi ) (resp.
asc(Xi )) the set of the descendant nodes (resp.
the ancestor nodes) of Xi (note that Xi belongs to desc(Xi ) and asc(Xi )).
Given X fi a X a non-empty subset of nodes, lca(X fi ) denote the node of T which is the lowest common ancestor of the nodes belonging to X fi .
The set leaves(T ) corresponds the set of the leaf nodes of T .
Finally, given a Xi a X, TXi denotes the sub-tree of T rooted in Xi .
X0 = {v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10} X1 = {v0, v1, v2, v3, v4, v5, v6, v7}  X2 = {v0, v6, v8, v9, v10}  X3 = {v0, v1, v2, v3, v6, v7} X4 = {v1, v4, v5} X7 = {v0, v1, v2, v6, v7}  X5 = {v0, v6, v8, v9} X6 = {v8, v9, v10}  X8 = {v2, v3} Figure 3(a).
A RecPart T = (X, F ) decomposition of N .
X0 = {v0, v6} X1 = {v1}  X2 = {v8, v9}  X3 = {v2}  X4 = {v1, v4, v5}  X7 = {v0 , v1, v2, v6, v7}  X5 = {v0, v6, v8, v9}  X6 = {v8, v9, v10}  X8 = {v2, v3} Figure 3(b).
A tree decomposition of N corresponding to T .
within the framework of the discrete CSPs we dedZne a tree decomposition of a QCN as a decomposition of its constraint graph: DedZnition 1: Let N = (V, C) be a QCN and G(N ) = (V, E) be its constraint graph.
A tree decomposition of N is a tree T = (X = {X0 , .
.
.
, Xn }, F ) with n a positive integer, where X is a family of subsets of variables of V (Xi a V ), such that :  (1) {Xi a X} = V ; (2) a(v, v fi ) a E, there exists Xi a X with v, v fi a Xi ; (3) for all Xi , Xj , Xk a X, if Xj is on the unique path between Xi and Xk then Xi aS Xk a Xj .
Given a tree decomposition T = (X = {X0 , .
.
.
, Xn }, F ) of a QCN, the treewidth of T is equal to max{|Xi | a 1 : Xi a X}.
Furthermore, every set of variables Xi is called a cluster.
In Figure 3(b), a tree decomposition of the QCN N of Figure 2 is represented.
III.
D ECOMPOSITIONS OF QCNS A.
Tree decompositions  B.
The RecPart decompositions  The relation I" consists of all the possible base relations of B and is satisdZed by any pair of elements of the domain D. A constraint between two variables of a QCN dedZned by the relation I" specidZes that locally there is no constraint concerning the relative position of both entities represented.
So, in a natural way, we dedZne the graph of constraints of a QCN N = (V, C), by the undirected graph G(N ) = (V, E) with (v, v fi ) a E if, and only if, N [v, v fi ] = I" and v = v fi .
In the sequel we suppose that given a QCN N , G(N ) is connected.
In the contrary case, N may be trivially split in two independent QCNs without common variables.
As  Recently, Li et al.
[11] proposed a method allowing to translate QCNs of the Interval Algebra into boolean satisdZability problem (SAT instances).
This method recursively decomposes at each step a QCN N = (V, C) into two QCNs N 1 and N 2 such that N = N 1 aS N 2 .
The constraints dedZned by the relation I" in the QCN N not belonging to N 1 and N 2 are characterized as not necessary in the search of a solution of the initial QCN and thus not translated.
The advantage of such a translation is that the obtained SAT instance is of smaller size than an instance stemming from a complete translation.
Taking inspiration from this  151  we can assert that N [v, v fi ] = I" and that (v, v fi ) is not an edge of G(N ).
Moreover, we have previously assumed that for every QCN N considered, G(N ) is connected.
Consequently, for all v a Xj and v fi a Xk , there exists a path of G(N ) between v and v fi .
Moreover this path passes necessarily through two edges (v, v fifi ) and (v, v fififi ) with v fifi a V \ {Xj aS Xk } and v fififi a V \ {Xj aS Xk }.
As Xj aS Xk = Xi , we have v fifi a Xi .
Let Xl be the nearest common ancestor of Xi such that v fifi a Xl .
Let Xm and Xo be the two child nodes of Xl with Xm a asc(Xi ).
We have v fifi a Xm and v a Xm .
Moreover, v fifi a Xo since Xo aS Xm = Xl .
We also know NXl = NXm aS NXo .
Consequently, we have N [v, v fifi ] = I".
We know that (v, v fifi ) is an edge of G(N ).
There is a contradiction.
We conclude that Xj aS Xk = a.
(2) Let Xi , Xj , Xk a X with Xk = lca({Xi , Xj }).
Assume that Xk = Xi and Xk = Xj .
We have necessarily Xk a leaves(T ).
Let us denote by Xl and Xm the two child nodes of Xk .
We have Xi a desc(Xl ) and Xj a desc(Xm ) or, Xi a desc(Xm ) and Xj a desc(Xl ).
Hence, from Proposition 1 (1), we have Xi a Xl and Xj a Xm or, Xi a Xm and Xj a Xl .
Consequently, we have Xi aS Xj a Xm aS Xl .
We conclude that Xi aS Xj a Xk .
(3) Let Xi a X.
First, consider the case where Xi a leaves(X).
By dedZnition, Xi = Xi , hence the property is satisdZed.
Now, assume that Xi a leaves(X) and let Xk and Xl be the two child nodes of Xi .
We have Xk aS Xl = Xi = a.
Let v a Xi , we have v a Xi .
From Proposition 1 (4), there exists Xj a leaves(T ) aS desc(Xi ) such that v a Xj .
From the property (2) of DedZnition 2,  we have Xk aS Xl a Xj since (Xk aS Xl ) aS Xj = a.  method, we dedZne particular decompositions of QCNs, called RecPart decompositions (for recursive partitioning), in the following way: DedZnition 2: Let N be a QCN = (V, C).
A RecPart decomposition of N is a rooted tree T = (X = {X0 , .
.
.
, Xn }, F ), with n a positive integer, where X is a family of subsets of V (Xi a V ) and Xr = V with Xr the root of T .
Moreover, each node of T has two or no child nodes and, given Xi , Xj , Xk a X such that Xj and Xk are child nodes of Xi , T must satisfy the following properties : (1) NXi = NXj aS NXk , Xj \ Xk = a and Xk \ Xj = a.
(2) For every Xm a desc(Xi ), if Xm aS (Xj aS Xk ) = a then (Xj aS Xk ) a Xm .
In Figure 3(a) is represented a RecPart decomposition of the QCN N illustrated in Figure 2.
We dedZne the treewidth of a RecPart decomposition T = (X, F ) by max{|Xi | a 1 : Xi a leaves(T )}.
Note that from the property (1) of the previous dedZnition, Xi = a for every Xi a X.
A RecPart decomposition satisdZes the following properties : Proposition 1: Let T = (X = {X0 , .
.
.
, Xn }, F ) be a RecPart decomposition of a QCN N = (V, C).
For each Xi a X, we have : (1) For each Xj a X such that i = j, Xi = Xj and moreover, if Xj a desc(Xi ) then Xj a Xi ; (2) TXi is aRecPart decomposition of NXi ; (3) NXi = {NXj : Xj a leaves(TXi )} ; (4) Xi = {Xj a leaves(TXi )}.
The proofs of these properties are omitted, they can be directly established from DedZnition 2.
Note that from the previous property (1), we have for all Xi , Xj a X, the sets Xi and Xj which are distinct sets if, and only if, i = j.
Hence, for each Xi a X, the set of variables belonging to Xi characterises one and only one node of T .
Let T = (X, F ) be a RecPart decomposition of a QCN N = (V, C).
Given Xi a X, Xi will denote the set Xi in the case where Xi a leaves(T ).
In the case where Xi a leaves(T ), Xi is dedZned by the set Xj aS Xk with Xj and Xk the two child nodes of Xi .
Note that Xi a Xi since Xj a Xi and Xk a Xi .
Moreover, we have the following properties : Proposition 2: Let T = (X = {X0 , .
.
.
, Xn }, F ) be a RecPart decomposition of a QCN N = (V, C).
(1) For each Xi a X, Xi = a.
(2) Given Xi , Xj , Xk a X with Xk = lca({Xi , Xj }), if Xk = Xi and Xk = Xj then Xi aS Xj a Xk .
(3) For each Xi a X, there exists Xj a leaves(X) such that Xi a Xj .
Proof.
(1) Consider the case where Xi a leaves(T ) (for the case where Xi a leaves(T ) the property is trivially satisdZed since Xi = Xi and Xi = a).
Let Xi , Xj , Xk a X such that Xi is the parent node of Xj and Xk .
Suppose by contradiction that Xj aS Xk = a.
From DedZnition 2, we have NXi = NXj aS NXk .
Hence, for all v a Xj and v fi a Xk ,  IV.
F ROM RecPart DECOMPOSITIONS TO TREE DECOMPOSITIONS  In this section, we are going to show that from a RecPart decomposition T of a QCN we can dedZne a tree decomposition T fi with same treewidth and considering the same clusters of variables (more exactly the same binary constraints).
Before this, we introduce a new notation : given  v8  {o} {di} {o, d, s}  {p, o, m}  v9 {f i}  {p}  v10  {f i}  v6  {m}  v7  {o, f i}  {oi} {o, f i} {eq, o, f i} {f } v1 v0 {o}  {o, m} v2  {o, mi, f i}  {s}  v3  {oi} v4  {pi, oi, mi}  {di} v5  {eq, d, di, o, oi, s, si, f, f i}  Figure 4.
152  N  a ORD-Horn   aconsistent X  sub-QCN of N .
0 the property is trivially satisdZed.
Now, assume that the property is satisdZed for each path with a length l aL 0 and let us show in an inductive way that the property holds for each path between Xi and Xk of length l + 1.
First, assume that Xi a desc(Xk ) and Xk a desc(Xi ) w.r.t.
T .
By examining the dedZnition 3 we notice that for T a path between Xi and Xk necessarily passes through Xo with Xo = lca({Xi , Xk }).
From Proposition 2 (2) we have Xi aS Xk a Xo .
Consequently, v a Xo .
By considering the two paths Xi , .
.
.
, Xo and Xo , .
.
.
, Xk which have a length lower or equal to l, and by using the induction hypothesis, we can assert that the nodes on the path Xi , .
.
.
, Xo and the nodes on the path Xo , .
.
.
, Xk contain v since Xi , Xo and Xk contain v. Now, assume that Xi a desc(Xk ) in T (the case Xk a desc(Xi ) can be handled in a similar way).
The case Xi = Xk is a trivial case, assume that Xi = Xk .
We have Xi a desc(Xo ) with Xo one of the child nodes of Xk in T .
By examining DedZnition 3 we remark that for T , a path between Xk and Xi passes necessarily through Xm  with Xm = lca(X k Xo ).
From Proposition 3 (2), we know that Xk a Xm .
It results that v a Xm .
By considering the paths Xi , .
.
.
, Xm and Xm , .
.
.
, Xk which have a length lower or equal to l, and by using the induction hypothesis, we can assert that the nodes of the path Xi , .
.
.
, Xm and the nodes of the path Xm , .
.
.
, Xk contain v since Xi , Xm and Xk contain v.   Xi , Xj a X with Xj child node of Xi , X i Xj will denote the set {Xk : Xk a desc(Xj ) and Xi a Xk }.
Concerning  X i Xj , we have the following properties : Proposition 3: Let T = (X, F ) be a RecPart decomposition of a QCN N = (V, C) and let Xi , Xj a X with  Xj a child node of Xi .
We have : (1) X i Xj = a, (2)   lca(Xi Xj ) a Xi Xj .
Proof.
(1) We know that Xi = a (Proposition 2 (1)), hence there exists v a Xi .
By dedZnition of Xi , we know that v a Xj .
From Proposition 1 (4), there exists Xk a leaves(T ) aS desc(Xj ) such that v a Xk .
From the property (3) of DedZnition 2, we can assert that Xi a Xk .
  Hence, Xk a X i Xj and we can conclude that Xi Xj = a.
  (2) Let Xl = lca(Xi Xj ).
There exists Xk , Xm a X i Xj such that Xl = lca({Xk , Xm }).
In the case where Xl = Xk or Xl = Xm the property is trivially satisdZed.
In the case where Xl = Xk and Xl = Xm , from Proposition 2 (2) we have Xk aS Xm a Xl .
As Xi a Xk and Xi a Xm we can assert that Xi a Xl .
Moreover, since Xl = lca({Xk , Xm }), Xk a desc(Xj ) and Xm a desc(Xj ),  we have Xl a desc(Xj ).
We conclude that Xl a X i Xj .
 Now, we dedZne from a RecPart decomposition T of a QCN N a tree denoted by T .
We will prove in the sequel that this tree is a tree decomposition of the QCN N satisfying some particular properties.
DedZnition 3: Let N be a QCN and T = (X = {X0 , .
.
.
, Xn }, F ) a tree decomposition of N .
From T and an element Xi a X, we inductively dedZne a rooted tree T Xi = (XXi , FXi ) with root Xi in the following way : aV Base case : Xi a leaves(T ), T Xi = ({Xi }, a).
aV Inductive case : Xi a leaves(T ).
By considering T , let  Xj and Xk the child nodes of Xi , Xl = lca(X i Xj )  and Xm = lca(Xi Xk ).
XXi and FXi are dedZned by XXi = XXj aS XXk aS {Xi }, FXi = FXj aS FXk aS {(Xi , Xl ), (Xi , Xm )}.
T is dedZned by the rooted tree T Xr with Xr the root of T .
Let us show that the tree T is a tree decomposition of the QCN N for which T is a RecPart decomposition.
Proposition 4: Let N = (V, C) be a QCN and a RecPart decomposition T = (X = {X0 , .
.
.
, Xn }, F ).
We have T = (X = {X0 , .
.
.
, Xn }, F ) which is a tree decomposition of N such that for each Xi a X there exists Xj a leaves(T ) with Xi a Xj .
Proof.
Properties (1) and (2) of the dedZnition 1 arise from the fact that for each Xi a leaves(X), Xi = Xi and from Proposition 1.
Now, let us prove that the property (3) of DedZnition 1 is satisdZed by T .
Let Xi , Xj , Xk a X with Xj on the unique path between Xi and Xk w.r.t.
T .
We are going to show that if v a Xi and v a Xk then v a Xj .
If the length of the path between Xi and Xk is  The fact that for each Xi a X, there exists Xj a leaves(T ) such that Xi a Xj results from Proposition 2 (3).
 V. T REE DECOMPOSITIONS AND CONSISTENCY OF QCNS In this section we are going to show that to decide the consistency of a QCN from one of its tree decomposition we can leave aside some of its constraints.
In particular, we show that for some classes of relations, the closure by weak composition restricted to constraints of the clusters stemming from a tree decomposition is complete for the consistency problem.
First of all, we introduce a new local consistency corresponding to the property of -consistency restricted to some subsets of variables of a QCN: DedZnition 4: Let N = (V, C) be a QCN and X = {X0 , .
.
.
, Xn } a family of subsets of V .
N is X -consistent if, and only if, for each Xi a X, the QCN NXi is a -consistent QCN.
Given a QCN N = (V, C) and X = {X0 , .
.
.
, Xn } a family of subsets of V , we will denote by X (N ) the larger (for a)  X -consistent sub-QCN of N .
The following result extends the one of Li et al.
on atomic networks.
It concerns QCNs whose constraints are dedZned by relations stemming from a class C for which any QCN closed by weak composition is globally consistent.
As illustration, we can consider the QCNs dedZned by relations belonging to the class of the convex relations of the Interval Algebra which admits this property.
153  Theorem 1: Let N = (V, C) be a QCN dedZned on a class of relations C for which each QCN -consistent is globally consistent, and let T = (X = {X0 , .
.
.
, Xn }, F ) be a tree decomposition of N .
If N is a non trivially inconsistent and  X -consistent QCN then N is a consistent QCN.
Proof.
We suppose without loss of generality that T has a root.
Let Xi a X and TXi = (XXi , FXi ) the sub-tree of T .
Given a partial instantiation s on V fi with V fi aS Xifi a Xi for each Xifi a XXi and such that for each Xj a X with Xj a V fi , sXj is a solution of NXj .
We are going to prove the following property : s can  be extended to a partial instantiation sfi on V fifi = V fi aS {Xifi a XXi } such that for each Xj a X with Xj a V fifi , sfiXj is a solution of NXj .
We are going to prove this property in an inductive way on the size of XXi .
aV Base case: |XXi | = 1.
We have XXi = {Xi }.
Since N is a X -consistent QCN, we have the QCN NXi which is a QCN -consistent and hence globally consistent.
sV  aSXi is a partial solution of NXi which can be extended to a solution sfifi of NXi .
We dedZne by sfi the partial instantiation on V fi aS Xi in the following way : if v a V fi then sfi (v) = s(v) else sfi (v) = sfifi (v).
We have sfiXi which is a solution of NXi and more generally sfiXk is a solution of NXk for each Xk a X and Xk a V fi aS Xi .
aV Inductive step: |XXi | > 1.
We assume that the property holds for each sub-tree TXj = (XXj , FXj ) with |XXj | < |XXi |.
As in the previous case, we extend s to a partial instantiation sfi on V fi aS Xi such that sfiXk is a solution of NXk for each Xk a X and Xk a V fi aS Xi .
By the induction hypothesis, this partial instantiation sfi can be extended to the set of variables belonging to the descendant nodes of Xi .
Indeed, consider Xl a child node of Xi .
First, we remark that by denoting by TXl = (XXl , FXl ) the sub-tree of T , we have |XXl | < |XXi |.
Moreover, as T is a tree decomposition, we have for each Xm a XXl , Xm aS (V fi aS Xi ) a Xl (from the property (3) of the dedZnition 1).
Hence, the induction hypothesis can be applied on TXl = (XXl , FXl ).
By applying the previous property on Xr the root of T , we know  that there exists an instantiation s on the set of variables {Xi : Xi a X} such that sXi is a solution of the QCN NXi for each Xi a X.
First, from  the property (1) of DedZnition 1 we can assert that V = {Xi : Xi a X}.
Hence, s is an instantiation on V .
Moreover we can show that s is a solution of N .
Indeed, let v, v fi a V , if N [v, v fi ] = I" we have s(v) and s(v fi ) which satisfy the constraint N [v, v fi ].
Now, assume that N [v, v fi ] = I".
From the property (2) of DedZnition 1, there exists Xi a X such that v a Xi and v fi a Xi .
We know that s(v) and s(v fi ) satisfy NXi [v, v fi ].
As NXi [v, v fi ] = N [v, v fi ] we can assert that s(v) and s(v fi ) satisfy N [v, v fi ].
We can conclude that s is a solution of N   particular class of the ORD-Horn relations of the Interval Algebra.
In [15], Ligozat attributes a dimension (an integer included between 0 and 2) to each base relations of the Interval Algebra : the dimension of the base relations p, pi, o, oi, d, di is 2, this one of the base relations m, mi, s, si, f, f i is 1, and the dimension of eq is 0.
A partial solution of maximal dimension is a solution satisfying for every pair of variables a base relation of maximal dimension with regard to the dimensions of the base relations belonging to the constraint.
For illustration, consider the QCN N fi in Figure 4, a maximal instantiation s of N fi {v0 ,v1 ,v2 ,v6 ,v7 } is represented in Figure 5(b), the atomic QCN corresponding to this solution is given in Figure 5(a).
For example, the base relation satisdZed between s(v0 ) and s(v1 ) is the base relation o of dimension 2, it is a maximal dimension w.r.t.
to the dimensions of the base relations of the relation N fi [v0 , v1 ] = {eq, o, f i}.
Given a QCN N closed by weak composition dedZned by ORD-Horn relations, in the general case N is not a globally consistent QCN.
Nevertheless we have a nearest property which is satisdZed : each partial solution of maximal dimension of N can be extended to a maximal solution of N (see Proposition 6 in [15]).
From this property we can establish the following result : Theorem 2: Let N = (V, C) be a QCN dedZned by relations of the ORD-Horn class of the Interval Algebra and let T = (X = {X0 , .
.
.
, Xn }, F ) be a tree decomposition of N .
If N is a X -consistent QCN non trivially inconsistent then N is consistent.
Proof.
The proof is similar to the proof of Theorem 1 except that the manipulated partial instantiations are maximal partial instantiations.
  {m}  v6 {oi} {oi}  v0 {o}  v7  {o}  {o}  {o}  v1  {o} {o}  v2 Figure 5(a).
An N  {v0 ,v1 ,v2 ,v6 ,v7 } s(v6)  {oi}  atomic  sub-QCN  of  s(v2) s(v7)  s(v0) s(v1)  Figure 5(b).
A maximal solution of N  {v0 ,v1 ,v2 ,v6 ,v7 }  We are going to characterize a similar result for the  154  We proved in the previous section that given a QCN N and a RecPart decomposition T = (X = {X0 , .
.
.
, Xn }, F ) of this QCN we can dedZne a tree decomposition T fi = (X fi = {X0fi , .
.
.
, Xnfi }, F ) = T such that for each Xifi a X fi there exists Xj a leaves(T ) such that Xifi a Xj .
From this property and the previous theorems we can establish the following properties : Corollary 1: Let N = (V, C) be a QCN dedZned on a class of relations C and let T = (X = {X0 , .
.
.
, Xn }, F ) a RecPart decomposition of N .
aV If C is such that each -consistent QCN dedZned on C is globally consistent and if N is a leaves(T ) -consistent QCN then N is consistent.
aV If C is the ORD-Horn class of the Interval Algebra and if N is a leaves(T ) -consistent QCN then N is consistent.
100  80  %  60  40  20  (i,j) - PartRec decompositions (i,j) - Tree decompositions LexBFS (i,j,k) - PartRec decompositions (i,j,k) - Tree decompositions LexBFS  0  4  6  8  16 14 12 10 Density of non trivial constraints  18  20  22  Figure 6(c).
Percentages of pairs and triples of variables belonging to the clusters  VI.
F ROM QCNS TO BOOLEAN FORMULAE  1  To decide the consistency problem of QCNs, recent studies [9], [10] propose to exploit the theoretical and practical framework of the propositional logic, by using SAT encodings.
Given a QCN N = (V, C), a dZrst part of these encodings allows to represent the possible base relations of C(vi , vj ) for each pair of variables vi , vj a V .
A second part is dedZned by a set of clauses allowing to the SAT solver to enforce the property of -consistency during search.
Intuitively, these clauses represent the possible condZgurations for each triple of variables vi , vj , vk a V with regard to the weak composition operation.
Hence, a SAT instance resulting of these encodings will be consistent if, and only if, there exists a -consistent sub-QCN of N .
The encoding proposed in [9] leads to a sub-QCN dedZned by singleton relations whereas the approach proposed in [10] leads to a convex sub-QCN.
From Theorem 1, we can restrict these encodings to the constraints belonging to clusters of a tree decomposition of N .
For illustration, we consider two kinds of decompositions : RecPart decompositions obtained by a method similar as in [11], and tree decompositions obtained from triangulation of the constraint graphs of the QCNs by using the lexBFS algorithm [17].
We have focused on QCNs of the Interval Algebra, randomly generated by following the model A(n, d, s) [7].
This model involves the generation of QCNs according to three parameters: n the number of variables, d the density of constraints not dedZned by the relation I" (the average degree of the nodes in the constraint graph) and s the average number of base relations in each constraint.
The results presented concern QCN instances from series A(100, d, 6.5) for d varying from 4 to 24 with a step of 0.25, for each point We generated 100 networks for each serie.
In Figure 6(c) are given the percentages of pairs and triples of variables belonging to clusters for each kind of tree decompositions.
Clearly, we can observe that the lexBFSbased tree decompositions discard much more constraints  0.8  Ratio  0.6  0.4  0.2  PartRec decompositions Tree decompositions LexBFS  0  4  6  8  16 14 12 10 Density of non trivial constraints  18  20  22  Figure 6(d).
Ratios of the size of the SAT instances by using tree decompositions to the size of the SAT instances by using the complete encoding.
than the RecPart decompositions.
Remark that the less is the density of non-trivial constraints, the more is the number of discarded constraints.
In Figure 6(d) are given the ratios of the size of the SAT instances using tree decompositions to the size of the SAT instances using the complete encoding.
The SAT encodings used are based on the SAT encoding dedZned in [10].
Unsurprisingly, the using of the LexBFSbased tree decompositions always performs the using of RecPart decompositions.
Figure 6 shows the number of solved instances against CPU time.
The results are given for QCN instances with the parameter d varying from 8 to 12, and Minisat 2.2 [18] was used to solve generated SAT instances.
CPU time is restricted to solving time, and QCN instances are not preprocessed before encoding into SAT instances.
As we can see, the lexBFS-based tree decompositions allows to improve the performance for solving SAT instances.
155  [6] J. Renz, aMaximal tractable fragments of the region connection calculus: a complete analysis,a in Proceedings of the 16th international joint conference on ArtidZcal intelligence, ser.
IJCAI, vol.
1, 1999, pp.
448a454.
2000 1800  Number of solved instances  1600 1400  [7] B. Nebel, aSolving hard qualitative temporal reasoning problems: Evaluating the efdZcienty of using the ORD-Horn class,a in Proceedings of the 12th European Conference on ArtidZcial Intelligence, ser.
ECAI, 1996, pp.
38a42.
1200 1000 800  [8] Z. Gantner, M. Westphal, and S. WAsldZ, aGQR - a fast reasoner for binary qualitative constraint calculi,a in Proceedings of AAAIa08 Workshop on Spatial and Temporal Reasoning, 2008.
600 400 LexBFS RecPart Raw  200 0 0  Figure 6.
200  400  600 CPU Time (s)  800  1000  [9] D. N. Pham, J. Thornton, and A. Sattar, aModelling and solving temporal reasoning as propositional satisdZability,a ArtidZcial Intelligence, vol.
172, pp.
1752a1782, October 2008.
1200  Number of solved instances against CPU time.
[10] J.-F. Condotta and D. DaAlmeida, aQualitative constraints representation for the time and space in SAT,a in Proceedings of the 19th IEEE International Conference on Tools with ArtidZcial Intelligence, ser.
ICTAI, vol.
1, 2007, pp.
74a77.
VII.
C ONCLUSION AND FUTURE WORKS In this paper, we have introduced and studied the RecPart decompositions.
We proved that these decompositions are equivalent to particular tree decompositions.
Moreover, we have studied the consistency problem of QCNs with regard to tree decompositions.
We proved that, for some tractable classes of relations such as ORD-Horn class, we can decide the consistency problem of a QCN by enforcing the consistency restricted to the constraints belonging to clusters of a tree decomposition.
In order to illustrate these results, we have compared two kinds of decompositions : RecPart decompositions and tree decompositions obtained from triangulation of the constraint graphs of QCNs by using the lexBFS algorithm.
A future work is to conduct extensive experiments in order to compare more tree decompositions into the framework of SAT encodings of QCNs.
[11] J. J. Li, J. Huang, and J. Renz, aA divide-and-conquer approach for solving interval algebra networks,a in Proceedings of the 21st international jont conference on ArtidZcal intelligence, ser.
IJCAI, 2009, pp.
572a577.
[12] G. Gottlob, Z. MiklAls, and T. Schwentick, aGeneralized hypertree decompositions: NP-hardness and tractable variants,a Journal of the ACM, vol.
56, pp.
30:1a30:32, September 2009.
[13] J. Renz and G. Ligozat, aWeak composition for qualitative spatial and temporal reasoning,a in Proceedings of the 11th International Conference on Principles and Practice of Constraint Programming, ser.
CP, 2005, pp.
534a548.
R EFERENCES  [14] B. Nebel and H.-J.
BAzrckert, aReasoning about temporal relations: a maximal tractable subclass of Allenas interval algebra,a Journal of the ACM, vol.
42, pp.
43a66, January 1995.
[1] J. F. Allen, aAn interval-based representation of temporal knowledge,a in Proceedings of the 7th international joint conference on ArtidZcial intelligence, ser.
IJCAI, vol.
1, 1981, pp.
221a226.
[15] G. Ligozat, aA new proof of tractability for ORD-Horn relations,a in Proceedings of the thirteenth national conference on ArtidZcial intelligence, ser.
AAAI, vol.
1, 1996, pp.
395a401.
[2] G. Ligozat, aOn generalized interval calculi,a in Proceedings of the ninth National conference on ArtidZcial intelligence, ser.
AAAI, vol.
1, 1991, pp.
234a240.
[16] P. van Beek and R. Cohen, aExact and approximate reasoning about temporal relations,a Computational Intelligence, vol.
6, pp.
132a147, July 1990.
[3] R. A. Morris, W. D. Shoaff, and L. Khatib, aPath consistency in a network of non-convex intervals,a in Proceedings of the 13th international joint conference on ArtidZcal intelligence, ser.
IJCAI, vol.
1, 1993, pp.
655a660.
[17] D. J.
Rose, R. E. Tarjan, and G. S. Lueker, aAlgorithmic aspects of vertex elimination on graphs,a SIAM Journal on Computing, vol.
5, no.
2, pp.
266a283, 1976.
[18] N. EASn and N. SAsrensson, aAn extensible sat-solver,a in Proceeding of the 6th International Conference on Theory and Applications of SatisdZability Testing, ser.
SAT, 2003, pp.
502a518.
[4] A. K. Pujari, G. V. Kumari, and A. Sattar, aINDU: An interval and duration network,a in Proceedings of the 12th Australian Joint Conference on ArtidZcial Intelligence: Advanced Topics in ArtidZcial Intelligence, ser.
AI, 1999, pp.
291a303.
[5] D. A. Randell, Z. Cui, and A. G. Cohn, aA spatial logic based on regions and connection,a in Proceedings of the Third International Conference on Principles of Knowledge Representation and Reasoning, ser.
KR, 1992, pp.
165a176.
156