On Incompleteness of Multi-dimensional First-order Temporal Logics David Toman Department of Computer Science, University of Waterloo Waterloo, Ontario, Canada N2L 3G1 E-mail: david@uwaterloo.ca Abstract In this paper we show that dZrst-order temporal logics form a proper expressiveness hierarchy with respect to dimensionality and quantidZer depth of temporal connectives.
This result resolves (negatively) the open question concerning the existence of an expressively complete dZrst-order temporal logic, even when allowing multi-dimensional temporal connectives.
1 Introduction We study the expressive power of multi-dimensional dZrst-order temporal logics and their relationship to twosorted dZrst-order logic.
In particular, we are interested in the following result: Two-sorted dZrst-order logic is strictly more expressive than any dZxed-dimensional dZrst-order temporal logic with a dZnite set of temporal connectives.
The paper proves this claim even when only dZnite temporal structures are considered.
To obtain the result we combine results of Bidoit et al.
[3, 4] on order independent properties dedZnable using standard temporal logic with results of Toman and Niwinski [16] on multi-dimensional temporal logics over dense linear order of time.
Interest in expressively complete temporal logics was, in the temporal database community, originally motivated by (unsuccessful) attempts to dedZne expressively complete temporal relational algebras closed over the timestamp or bi-temporal data models [8, 5] in order to implement expressively complete temporal query languages, such as SQL/Temporal [13] or SQL/TP [14, 15].
The result presented in this paper, however, is a general result on temporal logics and equally applies to problems in the area of knowledge representation.
The paper is organized as follows: Section 2 provides the necessary background and dedZnitions.
Section 3 introduces (appropriate extensions of) results in [3, 4, 16] needed to prove the claims in this paper.
Section 4 gives the main result and Section 5 concludes and discusses directions for future research.
2 DedZnitions In this section we give basic dedZnitions of temporal structures and temporal query languages.
The notation and dedZnitions are based on the development in the chapter Temporal Logic in Information Systems [7].
Temporal Structures.
Temporal structures (databases) are built from the following three basic building blocks:   to serve as the temporal domain, 1. a structure where  usually stands for a binary predicate denoting linear order () on .
We also consider (cf.
Section 4) temporal domains equipped with equality () only.
2. a structure  structure.
  to serve as the data domain of the  3. a set of single-sorted predicate symbols  A" fi    fi  ; the arity of the symbol   is  .
This choice dedZnes the database schema for our temporal structure.
In the rest of this section we use  for the signature  A" fi    fi  .
DedZnition 2.1 (Temporal Structure) Let be a temporal domain,  a data domain, and    A" fi    fi   a database schema.
We dedZne   to be a two-sorted predicate symbol of the sort    for each  in  .
We call  the temporal extension of   .
Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTLa03) 1530-1311/03 $17.00 AS 2003 IEEE  A temporal extension of    dedZned as    fiA"      fi    is a two-sorted signature composed of the signature of the temporal domain, , the signature of the data domain, , and the temporal extensions fi  of the predicate symbols   in .
We dedZne a temporal structure  to be a two-sorted  structure     	      fiA"fi      fifi   The instances fifi of fi in  dedZne the interpretation of the symbols  in the database schema for every element of the time domain, formally:    A"         holds at time  iff   fi   A"           for   ,    , and    	 fi   fi  .
This observation links the above dedZnition with a Kripke-style dedZnition of temporal structures commonly used to dedZne semantics for temporal logics; [7] shows that these two approaches are equivalent.
Note that the interpretation of the predicate symbols connected solely with the temporal () and data domains ( ) is dZxed, while the interpretation of the symbols fi depends on the database instance.
In practice we often require the instances of the relational symbols   to be dZnite or dZnite at every time instant.
The later is equivalent to requiring the sets A"           fi  A"        are dZnite for every    and fi   fi .
Temporal Queries.
First-order properties of temporal structures can be captured by sentences (closed formulas) in an appropriate temporal query language.
We introduce two principal ways of temporalizing a dZrst-order query language (dZrst order logic) over -structures.
The dZrst approach (often referred to as the timestamp language) introduces explicit temporal variables, relationships between these variables (e.g., order), and quantidZers to the language.
The result is a two-sorted variant of dZrst-order logic over  (the temporal extension of ).
DedZnition 2.2 (2-FOL) Let  be the set of all formulas dedZned by the following BNF rule:              fi    A"             	    	   We call  a temporal variable and   a data variable.
A 2-FOL query is a formula in the language dedZned by the productions for  above.
A temporal 2-FOL property is a closed 2-FOL query.
The semantics of formulas in this language is the standard dZrst-order (Tarskian) semantics with respect to  -structures.
Note that the database schema is monadic with respect to the sort  , i.e., the predicate symbols in the database schema have always exactly one distinguished argument of sort  .
In the technical development we use the following syntactic property of 2-FOL formulas.
DedZnition 2.3 (QuantidZer Depth) We dedZne function  2-FOL        1.
If  is atomic then  2.
3.
4.
fi.
If  is  then  .
If  is A"  Az then   A"  Az .
 	  .
If  is 	  or 	  then   The second approach to developing a temporal query language on top of dZrst-order logic uses implicit temporal connectives to link truth of formulas with an evaluation point.
In the case of multi-dimensional dZrst-order temporal logics () the generalized evaluation point is a vector in the multiple time dimensions.
Temporal connectives can be dedZned by formulas in the language of the temporal domain extended with additional place-holders standing for   formulas (to be aconnecteda by the connective).
DedZnition 2.4 (Temporal Connective) Let  be a relation symbol in the signature of the temporal domain.
We dedZne a set of formulas                  	   A  -dimensional -ary temporal connective   A"        dedZned with respect to the signature of the temporal sort   is a formula dedZned by the productions for  with free variables Az       A" and place-holders  A"       .
The restriction placed on free variables of a  -dimensional temporal connective yields the intuitive behavior: the free variables stand for the generalized evaluation point of the whole connective; the formula that dedZnes the connective aexpectsa the (sub-)formulas substituted for the placeholders  to have the same set of (implicit) free variables.
Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTLa03) 1530-1311/03 $17.00 AS 2003 IEEE  Note that there is no restriction on the number of the placeholders .
Example 2.5 We can express the standard linear-time temporal connectives [11] in the temporal signature of linear order as follows: A"  fi  Az Az  AzAz  Az   AzAz Az  Az  A" Az  A"  Az   Az Az A"  A"  A"Az  A"   AzAz A"  A" A" Az  A"   Az Az A"  A"   Az A" A"  Similarly, we can express the past temporal connectives , Az, and A".
Note that, in order to simplify further notation, we have added subformulas that yield a proper renaming of variables,  to the otherwise standard dedZnitions.
Thus, the fi formulas rooted by such connectives are expected to have a single (implicit) temporal variable named Az free.
The renaming subformulas guarantee that names of temporal variables match correctly when fi formulas are embedded into 2-FOL (cf.
DedZnition 2.8).
  Example 2.6 In Section 4 we use the following connectives to show separation between layers of multi-dimensional temporal logics.
Az fi   fi   Az Az A"   fi fi fi    Az A"      .. .
Az Az   fi           	A" fi   fi 	    	 	 	 	   A"fi   fi                  for    .
A  fi  query is a formula in the language dedZned by the productions for .
A fi   property is a closed fi  query.
           	A" fi    fi 	fi  	 	  A"  Az  	   	    A" fi   fi     Azfi 	A" fi   fi 	  	 	 A"   Az  	   	     A" fi    fi   fi        is the (C-)formula denoted by   in      .
Note that embeddings of closed  fi   formulas yield 2-FOL formulas with free variables Az A" .
Thus, the meaning of such formulas in a - structure is dedZned with respect to an evaluation point 	 	 	.
However, since there is no restriction on the content of the set   , we can simulate various alternative approaches, e.g., requiring the formula to be true with respect to an arbitrary evaluation point can be achieved using the Az  operator introduced in Example 2.6 and writing the formula Az  .
Similarly, requiring the formula to be true with respect to all evaluation points is equivalent to writing the formula 	Az  	 .
Thus the choice of an dZxed evaluation point does not affect temporal properties expressible in fi  .
This observation also reconciles the difference between closed formulas in fi and 2-FOL: sentences in 2-FOL can also be evaluated with respect to the 	 evaluation point, since an assignment to the Az A" variables cannot change the truth value of a closed formula.
The quantidZer depth of  fiformulas is dedZned as the quantidZer depth of their embeddings to 2-FOL.
Similarly, the quantidZer depth of temporal connectives is dedZned as the quantidZer depth of their embeddings into 2-FOL, assuming the place-holders stand for atomic formulas.
Given a dZnite set of temporal connectives  we dedZne        .
It is also easy to see that all formulas in  fi   can be considered to be formulas of  fiAz  for any   .
   fi   fi  fifi           fi   fi   DedZnition 2.7 (Temporal Logic) Let   be a dZnite set of -dimensional connectives dedZned over the signature of the temporal sort  .
We dedZne a set of formulas    DedZnition 2.8 (Embedding of fi in 2-FOL) Let  be a mapping of formulas in the language fi   to the language 2-FOL  dedZned as follows:  where  Az A" Az  fi  Az  It is easy to see that all the fi formulas can be naturally embedded into the language of 2-FOL formulas.
This embedding also dedZnes the semantics of the fi-formulas relatively to the semantics of 2-FOL:            3 Background Results The results in this paper depend crucially on the following two results.
Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTLa03) 1530-1311/03 $17.00 AS 2003 IEEE  3.1 Games for fi   Example 3.2 Consider the  The dZrst result relates to a modidZed version of Ehrenfeucht-FraAaEsseE Games [10] that precisely captures properties dedZnable by First-order Temporal Logic fi  with an arbitrary set of temporal connectives  such that fi  .
The game is a natural extension of games for single-dimensional temporal logic used by Toman and Niwinski [16] to show separation of fiA"  from 2-FOLfi  in the case of dense ordering of the temporal domain.
  DedZnition 3.1 (Game States) Let structures.
A state size :    and    be two  -  fi of size  is a triple consisting of three vectors of   1. a vector  able names,  fi  			  of temporal and data vari-      			   3. a vector   fi 			  from domains of  .
We require that the elements   and  are elements drawn from the temporal domain of the appropriate structure whenever  is a name of a temporal variable and data elements whenever  is a name of a data variable.
Contiguous sub-sequences of temporal variable names in fi (or more precisely, in the dZrst component of fi ) are grouped 2. a vector  fi   of values from the domains of the structure , and  into disjoint blocks of size up to      .
Variable names  and  are compatible in the following condition holds.
fi if either of   both  and  are both (names of) data variables;   is a data variable,  is a temporal variable (named)  fi  formula  Az fi	fi fi fi	fi fi fi	fi   fi where Az , fi , and fi are temporal connectives introduced in Example 2.6.
The embedding of this formula into 2-FOL is as follows:     	fi	 fi   	    	fi   	    	fi   fi   fi fi    It is easy to see that the variable introduced by the Az  connective is only visible outside the scopes of the fi  and fi connectives.
Thus only data variables quantidZed outside these connectives can appear together with this instance of .
The rethe variable in an atomic predicate, e.g., fi maining data variables, namely, and are not compatible with this instance of , since they appear within scope of another temporal connective that dedZnes another instance of .
Similar observation can be made for the variable and the instance of introduced by fi  .
Moreover, for the same reason, within the (embedding of the) fi  connective, the original variable is no longer visible since another was introduced by Az  introduced by fi  .
Thus, the variable is not compatible with any of the temporal variables introduced by, e.g., fi  .
                    Since moves in a game correspond to nesting of quantidZers in a formula, the above observations tell us that we only have to consider compatible moves in the game when dedZning a winning condition for duplicator DedZnition 3.3 (Winning Game State) A state ning state for duplicator if,  fi is a win-  fifi    			      fi  			  ; (2)        ; and (3)          ;   , and  that occurs after  in fi ;   is a data variable,  is a temporal variable  , such that  is the last occurrence of  before  in fi ;  both  and  are temporal variables in the same block of temporal variables in fi ; or  both  and  are temporal variables, and   is the last occurrence of one of  			 before  in fi .
whenever the variable names corresponding to the values used as arguments of predicate symbols in (1)-(3) are pairwise compatible in , and assuming the values used as arguments of predicates belong to the appropriate sorts.
The intuition behind the dedZnition of moves compatible in a state derives from the syntactical structure of the 2-FOL images of  formulas.
DedZnition 3.4 (Game) A move is an extension of a given state of size as follows:  (1)  Az  A"  Az  A"  fi  fi    Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTLa03) 1530-1311/03 $17.00 AS 2003 IEEE  1. player I (spoiler) chooses a variable name AVA" and an element of the appropriate sort from the domains of  or  .
1 2. player II (duplicator) then chooses an element of the same sort from the domains of the other structure.
The values AVA" ,  AVA" , and fi AVA" are used to extend the three components of  yielding a new state of size   .
A game of  moves starting from a given state  consists of extending  by  moves.
Duplicator wins a game of  moves starting from state  if, after  moves the game ends in a winning state.
Spoiler wins otherwise.
Duplicator has a winning strategy for games of  moves starting from a state  if he wins every game of  moves that starts in  .
Note that whenever the duplicator wins a game of  moves, starting from a state  , he also wins all games of length up to .
In other words, when following a winning strategy for the game, the duplicator always moves from a winning state to another winning state.
Lemma 3.5 A winning strategy for duplicator for games of length  starting from a state   fi 	 	 fi and with blocks of temporal variables bounded by   dedZnes an equivalence  relation 	  fi 	 fi over the class of  -structures..
This equivalence relation captures classes of  -structures indistinguishable by formulas in fi	  of limited quantidZer depth.
Proposition 3.6 Let  and  be two  -structures, 	  a dZnite set of  -dimensional temporal connectives such that fi	   ,  a vector of variable names fi Az 	    	  A" , and    fi 	    	   .
Then 	         fi 	       	      for all temporal properties  fi  .
  fi  fi	    	       such that  P r o o f. (sketch) The proof is similar to the proof in the dZrst-order case: games won by the spoiler correspond to formulas separating  from  .
The weakening of the winning condition for duplicator is equivalent to observing which variable names can appear together in atomic (sub-)formulas of embeddings of fi	  formulas into 1 Spoiler  can also decide whether a block of temporal variables should end at this point.
However, there is no advantage to the spoiler to choose blocks of size less than .
Thus we can assume that the blocks only end after they reach the maximal size allowed in the game.
  2-FOL.
Thus, formulas constructed from games won by the spoiler yield fi	  formulas (or, more precisely, their embeddings to 2-FOL) such that fi	    , that distinguish  from  .
On the other hand, given a formula    fi	 that separates  from  , we can construct a win for the spoiler of length at most  that obeys the variAz able compatibility conditions.
Corollary 3.7 A temporal property  cannot be expressed by fi	 , fi	   , if and only if for all    we can dZnd  and  such that 1.
 	     fi  AV  	  ,  2.
 	    , and  	    .
where    fiAz 	    	   A".
3.2 Order-independent Temporal Properties The game-based techniques are very general.
However, their application to discrete linearly ordered structures, such as the dZnite temporal structures considered in this paper, is rather difdZcult.
The main difdZculty is in dZnding a winning strategy for duplicator in the presence of discrete order.
Indeed, the separation result [16] crucially depends on the use of dense order of the time domain (and the use of indZnite temporal structures).
Abiteboul et al.
[1] avoided the difdZculty by using a different technique based on communication protocols.
However, their technique doesnat seem to generalize to multi-dimensional temporal logics.
Recently, however, Bidoit et al.
[3, 4] made a crucial observation that sidesteps the difdZculties associated with discrete order of the temporal domain.
DedZnition 3.8 (Order-independent Property) Let  be a closed formula in 2-FOL.
We say that  dedZnes an orderindependent property if for all temporal structures  and  that differ only in the linear ordering of time instants we have    fi   .
Then, using a variant of Craigas Interpolation Theorem [6, 9], the expressive power of order independent temporal properties is related to Ehrenfeucht-FraAaEsseE Games that consider only equality on the temporal structure.
We extend the technique to  -dimensional temporal logics.
First an extension of the interpolation theorem: Proposition 3.9 Let 	  be a dZnite set of temporal connectives over a linear order    and    fi	  a formula expressing an order-independent property.
Then there is a set of connectives dedZned only using equality    on  Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTLa03) 1530-1311/03 $17.00 AS 2003 IEEE  the temporal structure, such that  .
and a formula  fi   P r o o f. (sketch) Let  be a sentence expressing that a binary relation  is linear order and   the formula  in which all occurrences of the symbol  have been replaced by the binary symbol .
The rest follows from a direct extension of Craigas Interpolation Theorem [9], since, for order-independent properties, we have      fi fi    fi  for  fi two binary symbols not in .
The rest is similar to the proof used by Chang and Keisler [6] pages 87a89; we only have to observe that the interpolant is indeed an fi  formula.
Az  4 Inexpressibility Results We use the following property to separate from 2-FOL.
 fi    DedZnition 4.1 (Cover Property) We dedZne  fi                    we call fi the cover property of level 	 .
The fi property asks if there are 	 	   time instants such that the data values related by the relation  to these time instants (snapshots) acovera the data domain of the underlying temporal structure.
Note that the cover properties can also be expressed by the following range-restricted [2] formula:                       First we show that the cover property fi can also be dedZned in 	 	  -dimensional temporal logic.
Lemma 4.2 There is a temporal property fi fi  such that  fi      fi fi 	    fi fi for any  -structure  .
Moreover, the quantidZer depth of the connectives  fi   	 	  .
In the rest of this section we show that fi  fi  fi   for any set of temporal connectives  such that     .
We use the following pairs of temporal structures containing a single unary relational symbol  to show our separation results.
           	 	                 	 	      where     is the linear order on integers and where the instances of the relation  are dedZned by    	     fifi             for fi      fi the enumeration of all  element subsets of the data domain of the underlying structure.
Note that in both    and   the instances of the predicate symbol  are dZnite.
Thus, the temporal domain of the structures can be restricted to a dZnite sets of time instants corresponding to non-empty snapshots 2 of  (and the state ), yielding dZnite  -structures.
Such a restriction does not affect the following results.
be a set of temporal connectives such Lemma 4.3 Let that that    .
Then fi .
fi  fi P r o o f. It is easy to see that for any   	 we have     fi    fi fi fi  fi    fi fifi  We now show that temporal properties in fi  with quantidZer depth at most  cannot separate the above temporal structures  fi  and fi  .
We show this by dedZning a winning strategy for duplicator in the   fi     fi       game and then appealing to Corollary 3.7.
The game starts in an initial state     .
The following strategy shows that duplicator can play  moves always ending in a winning state (clearly, the initial state is a winning state for the duplicator).
During the course of the game the duplicator maintains an invariant guaranteeing a winning strategy.
Let fiA"      fi be all temporal variables in fi compatible with the next move3 .
For each of these variables we dedZne a snapshot in the corresponding structure as follows:  P r o o f. We dedZne  fi      fi fi   fi     fi fi    fi  Az          where  , .
.
.
,  , and Az are 	 	 -dimensional connectives Az introduced in Example 2.6.
            where          snapshot of at time  is the set   .
3 Note that we can consider pairs of variables only, since all relations in the signatures of the fi -structures used in this proof are binary.
2A  Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTLa03) 1530-1311/03 $17.00 AS 2003 IEEE  Note that the elements and  associated with  in  are from the appropriate temporal sort of fi and  , respectively.
Also, the cardinality of each of the   and   is .
The invariant for the game is dedZned by the following two rules:  2.
  variable in  and      for all  such that  is a data A" 	       	 fi fi;       for all      1.
        we consider the case in which the spoiler chooses  .
The duplicator replies as follows:      A"	       	 fi fi.
1.
A temporal move  : There can be at most  fi    temporal variables compatible with the current move and at most    data variables in the current state.
Assume, without loss of generality, that the spoiler has   .
The duplicator then replies chosen a value as follows:      If the value is equal to a value associated with any of the temporal variables compatible with this move, the duplicator chooses the corresponding value in the other structure.
Otherwise, the new move dedZnes a distinct snapshot   .
The duplicator must choose    such that the snapshot  preserves the above dedZned invariant.
This, however, is always possible since all -element subsets of the respective data domains are present as snapshots in the structures and there can be at most fi  compatible temporal moves (thus the data domains must contain at least  elements outside of the union of all the snapshots).
The case in which the spoiler chooses  metric to the above case.
  is sym-  2.
A data move  : There are  temporal variables compatible with this move (dedZning  snapshots) and at most    data variables in the current state.
Again,  Otherwise, if the value belongs to       	  	 	   A"	       	  fi fi    the duplicator chooses an arbitrary value that belongs to  In other words, we require that, in both the structures, all values associated with the data variables in the current state belong to the same snapshots associated with the compatible temporal variables and that the cardinalities of intersections of the snapshots associated with an arbitrary subset of the compatible temporal variables are the same.
This invariant is used to guarantee that all states of the game are winning states for duplicator.
Since the initial state 	 	  is a winning state for the duplicator that satisdZes the above conditions (trivially), the following strategy preserves the invariant through  game moves.
There are two cases to consider.
If the value is associated with any of the data variables in the current state, duplicator picks the corresponding value from the current state.
      	    A" 	       	  fi fi    this is always possible since the intersections have the same cardinality in both structures.
  Otherwise the value does not belong to any of the snapshots   and the duplicator thus picks a value not belonging to any of the snapshots   in the other structure.
Again, this is always possible, since the set of such data values must contain at least  values in both of the structures.
The case in which the duplicator chooses  again symmetric.
 is  In all the cases, the resulting state is a winning state for the duplicator for games of up to  moves starting from the state 	 	  .
Az Now we are ready to apply the results of Bidoit et al.
[3, 4] to extend this result to ordered temporal domains.
Lemma 4.4 fi is order-independent.
P r o o f. Immediate from dedZnition of order-independence (Def.
3.8).
Az Combining the results of Corollary 3.7, Proposition 3.9, and Lemmas 4.3 and 4.4 we obtain the desired result.
be a dZnite set of temporal connectives Theorem 4.5 Let   dedZned over a discrete linear order 	.
Then there is a dZnite ,  set    , such that   is strictly Az Az  for     		  fi fi .
weaker than   Az This result holds for dZnite and discrete (integer-like) dZows of time.
Dense dZows of time (with time instants modeled by  Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTLa03) 1530-1311/03 $17.00 AS 2003 IEEE  rational numbers) were considered by Toman and Niwinski [16].
However, the construction of the structures  and   and the associated game for  gives an alternative proof for dense linear order as well.
Corollary 4.6 fi 2-FOLfi  for any   connectives  .
 is strictly weaker than  and any dZnite set of temporal  5 Conclusion We have shown that there cannot be a dZxed-dimensional and expressively complete temporal logic.
This fact also precludes the use of dZxed-dimensional temporal relational algebras [8], e.g., algebras based on the bi-temporal data model [12], to implement expressively complete temporal query languages based on 2-FOL, e.g., SQL/TP [14, 15].
5.1 Future Work While the results in this paper achieve our main goala showing that dZxed-dimensional temporal logics are strictly weaker than two-sorted dZrst order logic, no matter what dZnite set of  -dimensional connectives is usedathe results are not quite satisfactory (tight enough): using the approach in this paper, the standard one-dimensional  is separated from 2-FOL by the fi Az property.
The results in [1, 3, 4, 16] can be easily modidZed to show the separation using fiA" .
We conjecture the following: Conjecture 5.1 fi is not expressible in fi independently of the quantidZer depth of connectives in .
  Another direction of research considers more complex structures of time (the language and theory of the temporal domain), e.g., temporal domains equipped with distance measure, periodic sets, etc.
For the separation results to hold, we have to extend Theorem 3.9 to reduce temporal connectives in the extended language of the temporal domain to connectives dedZned only using equality for temporal properties preserved under permutations of the temporal domain.
The separation results, however, can only apply to temporal domains whose theories cannot encode pairs of time instants as a single instant (i.e., theories that cannot dedZne pairs and projections).
Acknowledgments The author gratefully acknowledge the Natural Sciences and Engineering Research Council of Canada, the Canadian Foundation for Innovation, the Communications and Information Technology of Ontario, and Nortel Networks Ltd. for their support of this research.
References [1] S. Abiteboul, L. Herr, and J.
Van den Bussche.
Temporal Versus First-Order Logic to Query Temporal Databases.
In ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, pages 49a57, 1996.
[2] S. Abiteboul, R. Hull, and V. Vianu.
Foundations of Databases.
Addison-Wesley, 1995.
[3] N. Bidoit, S. de Amo, and L. SegoudZn.
ProprieEteEs Temporelles IndpeEndantes de laordre.
In 17eEmes JourneEes de Bases de DonneEes AvanceEes, pages 219a225, 2001.
[4] N. Bidoit, S. de Amo, and L. SegoudZn.
Order Independent Temporal Properties.
Technical report, http://www.deamo.prof.ufu.br/arquivos/ journalLC.ps, 2002.
(to appear in Journal of Logic and Computation).
[5] M. H. BoEhlen, C. S. Jensen, and R. T. Snodgrass.
Temporal Statement ModidZers.
ACM Transactions on Database Systems, 25(4):407a456, 2000.
[6] C. C. Chang and H. J. Keisler.
Model Theory, 3rd ed.
Studies in Logic and Foundations of Mathematics, vol.
73.
Elsevier Science Publishers, 1985.
[7] J. Chomicki and D. Toman.
Temporal Logic in Information Systems.
In J. Chomicki and G. Saake, editors, Logics for Databases and Information Systems, pages 31a70.
Kluwer, 1998.
[8] J. Clifford, A. Croker, and A. Tuzhilin.
On Completeness of Historical Relational Query Languages.
ACM Transactions on Database Systems, 19(1):64a116, 1994.
[9] W. Craig.
Three uses of the Herbrand-Genzen theorem in relating model theory and proof theory.
Journal of Symbolic Logic, 22:269a285, 1957.
[10] A. Ehrenfeucht.
An application of games to the completeness problem for formalized theories.
Fundamenta Mathematicae, 49:129a141, 1961.
[11] D. M. Gabbay, I. Hodkinson, and M. Reynolds.
Temporal Logic: Mathematical Foundations and Computational Aspects.
Oxford University Press, 1994.
[12] C. S. Jensen, R. T. Snodgrass, and M. D. Soo.
The TSQL2 Data Model.
In The TSQL2 Temporal Query Language, pages 153a238.
Kluwer Academic Publishers, 1995.
[13] R. T. Snodgrass, M. H. BoEhlen, C. S. Jensen, and A. Steiner.
Adding valid time to sql/temporal.
ISO/IEC JTC1/SC21/WG3 DBL MAD-146r2 21/11/96, (change proposal), International Organization for Standardization, 1996.
[14] D. Toman.
Point-based Temporal Extensions of SQL.
In International Conference on Deductive and Object-Oriented Databases, pages 103a121, 1997.
[15] D. Toman.
SQL/TP: A Temporal Extension of SQL.
In Kuper, Libkin, and Paredaens, editors, Constraint Databases, chapter 19, pages 391a399.
Springer Verlag, 2000.
[16] D. Toman and D. Niwinski.
First-Order Queries over Temporal Databases Inexpressible in Temporal Logic.
In Advances in Database Technology, EDBTa96, volume 1057, pages 307a324, 1996.
Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTLa03) 1530-1311/03 $17.00 AS 2003 IEEE