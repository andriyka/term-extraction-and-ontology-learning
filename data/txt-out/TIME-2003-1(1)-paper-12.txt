Journal of Applied Logic 4 (2006) 168-191 www.elsevier.com/locate/jal  Definability and decidability of binary predicates for time granularity Massimo Franceschet a , Angelo Montanari b,* , Adriano Peron c , Guido Sciavicco b a Dipartimento di Scienze, Universita di Chieti-Pescara, Pescara, Italy b Dipartimento di Matematica e Informatica, Universita di Udine, Udine, Italy c Dipartimento di Scienze Fisiche, Universita di Napoli 'Federico II', Napoli, Italy  Available online 19 July 2005  Abstract In this paper we study the definability and decidability of binary predicates for time granularity in monadic languages interpreted over finitely and infinitely layered structures.
We focus our attention on the equi-level (respectively equi-column) predicate constraining two time points to belong to the same layer (respectively column) and on the horizontal (respectively vertical) successor predicate relating a time point to its successor within a given layer (respectively column).
We give a number of positive and negative results by reduction to/from a wide spectrum of decidable/undecidable problems.
(c) 2005 Elsevier B.V. All rights reserved.
Keywords: Time granularity; Monadic theories; Definability; Decidability  1.
Introduction In this paper we systematically investigate the definability and decidability of several binary predicates in monadic languages interpreted over temporal structures for time granularity.
The ability of providing and relating temporal representations at different 'grain * Corresponding author.
E-mail addresses: francesc@sci.unich.it (M. Franceschet), montana@dimi.uniud.it (A. Montanari), peron@na.infn.it (A. Peron), sciavicc@dimi.uniud.it (G. Sciavicco).
1570-8683/$ - see front matter (c) 2005 Elsevier B.V. All rights reserved.
doi:10.1016/j.jal.2005.06.004  M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  169  levels' is widely recognized as an important research theme for temporal logic and a major requirement for many applications, including specification and verification of reactive system, knowledge representation and reasoning, temporal databases, and data mining [1,4,6, 13,14].
We focus our attention on the area of formal specification and verification where the explicit representation of time granularity makes it possible to specify in a concise way reactive systems whose behaviour can be naturally modeled with respect to a possibly infinite set of differently-grained temporal domains/layers (we shall use the two terms interchangeably) [10,16].
A logical specification framework incorporating a notion of time granularity has been systematically developed in [16] and later extended in [7].
It is based on a many-level view of temporal structures that replaces the flat temporal domain of standard linear and branching temporal logics by a temporal universe consisting of a possibly infinite set of differently-grained temporal layers.
The monadic second-order (MSO for short) theory of the n-layered (there are exactly n layers) k-refinable (each time point can be refined into k time points of the immediately finer layer, if any) temporal structure for time granularity (n-LS), with matching decidability results, has been investigated in [20].
The MSO theory of the k-refinable upward unbounded layered structure (UULS), that is, the o-layered structure consisting of a finest temporal layer together with an infinite number of coarser and coarser layers, and the MSO theory of the k-refinable downward unbounded layered structure (DULS), that is, the o-layered structure consisting of a coarsest layer together with an infinite number of finer and finer layers, have been studied in [17].
The decidability of the theories of the UULS and the DULS has been proved by reducing their decision problems to the emptiness problem for systolic and Rabin tree automata, respectively.
Such a connection between multi-level temporal logics and automata theory suggests a complementary point of view on time granularity: besides an important feature of a specification language, it can be viewed as a formal tool to investigate the definability of meaningful temporal properties, such as periodicity, density, and exponential grow/decay, as well as the expressiveness and decidability of temporal logics [8,9,17,19,20].
In this respect, the number of layers (single vs. multiple, finite vs. infinite) of the underlying temporal structure, as well as the nature of their interconnections, play a major role: certain temporal properties can be expressed using a single layer; others using a finite number of layers; others only exploiting an infinite number of layers [7,16].
As an example, the MSO theory of the binary 2-LS suffices to state that a given condition holds at all even points of a given temporal domain, a situation that cannot be expressed in propositional linear temporal logic.
Moreover, the MSO theory of the k-refinable UULS allows one to state that a given condition holds at all time points k i , for all natural numbers i, of a given temporal domain, a situation that cannot be captured by using propositional or quantified temporal logics over a finite number of layers.
Finally, the MSO theory of the k-refinable DULS allows one to state that a given condition holds 'densely' over a given time interval or to constrain two distinct conditions to be temporally indistinguishable [17,18].
In this paper, we deal with the definability and decidability of a set of binary predicates in monadic languages interpreted over the n-layered and o-layered structures.
We focus our attention on the equi-level (respectively equi-column) predicate constraining two time points to belong to the same layer (respectively column) and the horizontal (respectively vertical) successor predicate relating a time point to its successor within a given layer  170  M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  (respectively column), which allow one to express meaningful properties of time granularity [16].
As a matter of fact, definability and decidability problems for the equi-level and vertical successor predicates in monadic languages interpreted over the binary and k-ary trees have been already studied in the literature.
More precisely, the decidability of the extension of the first-order theory of two successors, devoid of free set variables, over the infinite binary tree with the equi-level predicate was first proved by Elgot and Rabin in [3].
Thomas extended this result by showing that the monadic chain logic extended with the equi-level predicate over the infinite k-ary tree is decidable [24], while Lauchli and Savoiz proved the undecidability of the (weak) MSO theory of k successors over the infinite k-ary tree extended with either the equi-level or the vertical successor predicate [15].
Our paper generalizes these results in two directions: on the one hand, we interpret the monadic languages over more general structures; on the other hand, we take into consideration a larger set of predicates, including the equi-column and the horizontal successor predicates (these predicates are intimately related to the vertical successor and equi-level predicates, respectively, but in general they are not inter-definable).
The paper is organized as follows.
In Section 2 we provide background knowledge about monadic theories of time granularity.
Then, in Section 3 we introduce the relevant binary predicates for time granularity.
In the subsequent sections, we study the definability and decidability of these predicates in monadic languages over the UULS, n-LS, and DULS.
Conclusions provide an assessment of the work.
2.
Monadic theories of layered structures In this section we introduce the MSO theories of time granularity, and their first-order, path, and chain fragments (a more detailed presentation can be found in [5]).
MSO theories are systems of MSO logic that allow quantification over arbitrary sets of elements.
We show that some MSO theories of time granularity can be reduced to well-know classical theories, such as the MSO theory of one successor and the MSO theory of two successors, while other granularity theories are proper extensions of them.
Definition 2.1 (The language of monadic second-order logic).
Let t = c1 , .
.
.
, cr , u1 , .
.
.
, us , b1 , .
.
.
, bt be a finite alphabet of symbols, where c1 , .
.
.
, cr (respectively u1 , .
.
.
, us , b1 , .
.
.
, bt ) are constant symbols (respectively unary relational symbols, binary relational symbols), and let P be a finite set of uninterpreted unary relational symbols.
The secondorder language with equality MSO[t [?]
P] is built up as follows: (1) atomic formulas are of the forms x = y, x = ci (with 1  i  r), ui (x) (with 1  i  s), bi (x, y) (with 1  i  t ), x [?]
X, and x [?]
P , where x and y are individual variables, X is a set variable, and P [?]
P; (2) formulas are built up from atomic formulas by means of the Boolean connectives !
and [?
], and the quantifier [?]
ranging over both individual and set variables.
In the following, we shall write MSOP [t ] for MSO[t [?]
P]; in particular, we shall write MSO[t ] when P is meant to be the empty set.
M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  171  Fig.
1.
The 2-refinable 3-layered structure.
Relational structures for time granularity consists of a (possibly infinite) number of distinct layers.
We focus our attention on the n-layered structure, which include a fixed finite number n of layers, and o-layered structures, which feature an infinite number of layers.
2.1.
The n-layered structure Let n  1 and k  2.
 For every 0  i < n, let T i = {ji | j  0}.
The n-layered temporal universe is the set Un = 0i<n T i .
The (k-refinable) n-layered structure (n-LS for short) is the relational structure Un , (|j )k-1 j =0 , <	.
Such a structure can be viewed as an infinite sequence of complete (k-ary) trees of height n - 1, each one rooted at a point of the coarsest layer T 0 (see Fig.
1).
The sets T i , with 0  i < n, are the layers of the trees.
For every 0  j  k - 1, |j is the j th successor relation over Un such that |j (x, y) (also denoted by |j (x) = y) if y is the j th son of x.
Note that for all x belonging to the finest layer T n-1 there exist no 0  j  k - 1 and y [?]
Un such that |j (x) = y.
Finally, < is a total ordering over Un given by the pre-order (root-left-right in the binary trees) visit of the nodes (for elements belonging to the same tree) and by the total linear ordering of trees (for elements belonging to different trees).
Formally, for any pair ab , cd [?]
Un , we have that |j (ab ) = cd if b < n - 1, d = b + 1, and c = a * k + j .
The total ordering < is defined as follows: (1) (2) (3) (4)  if x = a0 , y = b0 , and a < b over N, then x < y; for all x [?]
Un \ T n-1 , x <|0 (x), and |j (x) <|j +1 (x), for all 0  j < k - 1; if x [?]
Un \ T n-1 , x < y, and not ancestor(x, y), then |k-1 (x) < y; if x < z and z < y, then x < y,  where ancestor(x, y) if there exists 0  j  k - 1 such that |j (x) = y or there exist 0  j  k - 1 and z such that |j (z) = y and ancestor(x, z).
A path over the n-LS is a subset of the domain whose elements can be written as a sequence x0 , x1 , .
.
.
, xm , with m  n - 1, in such a way that, for every i = 1, .
.
.
, m, there exists 0  j < k for which xi =|j (xi-1 ).
A full path is a maximal path with respect to set inclusion.
A chain is any subset of a path.
A P-labeled n-LS is a relational structure Un , (|i )k-1 i=0 , <, (P )P [?
]P 	, , <) is the n-LS and, for every P [?]
P, P [?]
Un is the set of where the tuple (Un , (|i )k-1 i=0 k-1 points labeled with P .
The decidability of MSOP [<, (|i )i=0 ] over the n-LS has been proved in [20] by reducing it to the decidability of the MSO theory of one successor MSO[<], which is known to be (non-elementarily) decidable [23].
Theorem 2.2.
MSOP [<, (|i )k-1 i=0 ] over the n-LS is (non-elementarily) decidable.
172  M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  Fig.
2.
The 2-refinable upward unbounded layered structure.
2.2.
The upward unbounded layered structure The UULS is a relational structure U, |i )k-1 i=0 , <	.
It can be viewed as a complete (kary) infinite tree generated from the leaves (Fig.
2).
The sets T i , with i  0, are the layers of the tree.
For every 0  j  k - 1, |j is the j th successor relation over U such that |j (x, y) (also denoted by |j (x) = y) if y is the j th son of x.
The total ordering < over U is induced by the in-order (left-root-right in the binary tree) visit of the treelike structure.
Formally, for every ab , cd [?]
U , |j (ab ) = cd if b > 0, d = b - 1, and c = a * k + j .
The total ordering < is defined as follows: (1) for all x [?]
U \ T 0 , |0 (x) < x, x <|1 (x), and |j (x) <|j +1 (x), for every 0 < j < k - 1; (2) if x < y and not ancestor(x, y), then |k-1 (x) < y; (3) if x < y and not ancestor(y, x), then x <|0 (y); (4) if x < z and z < y, then x < y.
A path over the UULS is a subset of the domain whose elements can be written as an infinite sequence x0 , x1 , .
.
.
such that, for every i  1, there exists 0  j < k such that xi-1 =|j (xi ) (for the sake of convenience, in some proofs we shall introduce finite paths over the UULS and list their elements in the opposite order, that is, we shall represent them as finite sequences xi0 , xi1 , .
.
.
, xin such that, for every 0  j < n, there exists 0  l < k such that xij +1 =|l (xij )).
A full path is a maximal (infinite) path with respect to set inclusion.
A chain is any subset of a path.
It is worth noting that every pair of paths over the UULS may differ on a finite prefix only.
A P-labeled UULS is obtained by expanding the UULS with a set P [?]
U , for any P [?]
P. The decidability of MSOP [<, (|i )k-1 i=0 ] over the UULS has been proved in [17] by reducing it to the decidability of a proper extension of the MSO theory of one successor [21].
Theorem 2.3.
MSOP [<, (|i )k-1 i=0 ] over the UULS is (non-elementarily) decidable.
2.3.
The downward unbounded layered structure  Let U = i0 T i be the o-layered temporal universe.
The DULS is a relational structure U, (|i )k-1 i=0 , <	.
It can be viewed as an infinite sequence of complete (k-ary) infinite trees, each one rooted at a point of the coarsest domain T 0 (see Fig.
3).
The sets T i , with  M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  173  Fig.
3.
The 2-refinable downward unbounded layered structure.
i  0, are the layers of the trees.
The successor relations |j , with 0  j  k - 1, and the total ordering < over U are defined as for the n-LS.
Formally, for any pair ab , cd [?]
U , we have that |j (ab ) = cd if and only if d = b + 1 and c = a * k + j , while the total ordering < is defined as follows: (1) (2) (3) (4)  if x = a0 , y = b0 , and a < b over N, then x < y; for all x [?]
U , x <|0 (x), and |j (x) <|j +1 (x), for all 0  j < k - 1; if x < y and not ancestor(x, y), then |k-1 (x) < y; if x < z and z < y, then x < y.
A path over the DULS is a subset of the domain whose elements can be written as an infinite sequence x0 , x1 , .
.
.
such that, for every i  1, there exists 0  j < k for which xi =|j (xi-1 ).
A full path is a maximal (infinite) path with respect to set inclusion.
A chain is any subset of a path.
A P-labeled DULS is a relational structure k-1 U, (|i )k-1 i=0 , <, (P )P [?
]P 	, where the tuple (U, (|i )i=0 , <) is the DULS and, for every P [?]
P, P [?]
U is the set of points labeled with P .
The decidability of MSOP [<, (|i )k-1 i=0 ] over the DULS has been proved in [17] by reducing it to the decidability of the MSO theory of k successors, which is known to be (non-elementarily) decidable [23].
Theorem 2.4.
MSOP [<, (|i )k-1 i=0 ] over the DULS is (non-elementarily) decidable.
We conclude the section by introducing some notations and basic properties that will help us in comparing expressive power and logical properties of the various formal systems.
Definitions and results are given for full second-order languages with uninterpreted unary relational symbols, but they immediately transfer to their fragments, possibly devoid of uninterpreted unary relational symbols.
Let M(ph) be the set of models of the formula ph.
We say that MSOP [t1 ] can be embedded into MSOP [t2 ], denoted MSOP [t1 ] - MSOP [t2 ], if there is an effective translation tr of MSOP [t1 ]-formulas into MSOP [t2 ]-formulas such that, for every formula ph [?]
MSOP [t1 ], M(ph) = M(tr(ph)).
Moreover, we say that MSOP [t1 ] is as expressive as MSOP [t2 ], written MSOP [t1 ] fi MSOP [t2 ], if both MSOP [t1 ] - MSOP [t2 ] and MSOP [t2 ] - MSOP [t1 ].
It is immediate to see that if MSOP [t1 ] - MSOP [t2 ] and MSOP [t2 ] is decidable (respectively MSOP [t1 ] is undecidable), then MSOP [t1 ] is decidable (respectively MSOP [t2 ] is undecidable) as well.
Besides decidability issues, we are interested in definability ones.
Let b be a relational symbol.
We say that b is definable in MSOP [t ] if MSOP [t [?
]{b}] - MSOP [t ].
If the addition  174  M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  Fig.
4.
A hierarchy of monadic formalisms over layered structures.
of b to a decidable formalism MSOP [t ] makes the resulting formalism MSOP [t [?]
{b}] undecidable, we can conclude that b is not definable in MSOP [t ].
The opposite does not hold in general: the predicate b may not be definable in MSOP [t ], but the extension of MSOP [t ] with b may preserve decidability.
In such a case, we obviously cannot reduce the decidability of MSOP [t [?]
{b}] to that of MSOP [t ].
In the following, we shall explore the definability and decidability of relevant binary predicates for time granularity with respect to MSO[<, (|i )k-1 i=0 ] and its first-order, path, k-1 and chain fragments FO[<, (|i )k-1 ], MPL[<, (| ) ], and MCL[<, (|i )k-1 i i=0 i=0 i=0 ] as well as k-1 k-1 their P-variants FOP [<, (|i )i=0 ], MPLP [<, (|i )i=0 ], and MCLP [<, (|i )k-1 i=0 ] (the path, respectively chain, fragments are obtained by interpreting second-order variables over paths, respectively chains).
Fig.
4 summarizes the relationships between the expressive powers of such formal systems (an arrow from T to T  stands for T - T  ).
From Theorems 2.2, 2.3, and 2.4, it immediately follows that all the formalisms in Fig.
4, when interpreted over the n-LS, the UULS, and the DULS, are decidable.
3.
Binary predicates for time granularity In this section, we introduce the binary predicates for time granularity we are interested in; in the subsequent sections, we shall investigate definability and decidability issues about them.
More precisely, we shall investigate the possibility of defining such predicates within the given systems for time granularity, and, whenever this is not possible, the possibility of adding them preserving decidability.
Let U, (|i )k-1 i=0 , <	 be a layered structure and let nr and ms be two elements of U .
We focus our attention on the following set of predicates: (1) (2) (3) (4) (5) (6) (7) (8)  equi-level predicate T , such that T (nr , ms ) iff r = s; ith equi-level predicate T i , such that T i (nr , ms ) iff r = s = i; equi-column predicate D, such that D(nr , ms ) iff n = m; ith equi-column predicate D i , such that D i (nr , ms ) iff n = m = i; horizontal successor +1, such that +1(nr , ms ) iff r = s and m = n + 1; ith horizontal successor +i 1, such that +i 1(nr , ms ) iff r = s = i and m = n + 1; vertical successor [?
]1, such that [?
]1(nr , ms ) iff n = m and s = r + 1; ith vertical successor [?
]i 1, such that [?
]i 1(nr , ms ) iff n = m = i and s = r + 1.
M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  175  Fig.
5.
The global predicates for time granularity.
T i , D i , +i 1, and [?
]i 1, and T , D, +1, and [?
]1 are respectively called local and global predicates.
Global predicates are depicted in Fig.
5.
Among the many possible relations between time points belonging to the temporal universe, the above local predicates can be identified as the primitives for time granularity, that is, relations that any specification language for time granularity should be able to express.
Global predicates are a natural generalization of local ones.
In particular, the equi-level predicate allows one to check whether or not two elements belong to the same layer, while the equi-column predicate allows one to verify whether two elements are at the same distance from the origin of the layer they belong to.
Some of the above predicates are functional in nature, and we shall sometimes use a functional notation for them.
For instance, we shall write +1(x) = y for +1(x, y) (the same for [?]1).
Moreover, we shall write T i (x) as a shorthand for T i (x, x), which states that x belongs to the ith layer (the same for D i (x, x)).
It is worth pointing out that the predicates +i 1 and T i are inter-definable in FO[<, (|i )k-1 i=0 ] over layered structures as follows: +i 1(x, y) = x < y [?]
T i (x, y) [?]
[?
]z((T i (x, z) [?]
x < z) - y  z); T i (x, y) = [?
]w(+i 1(x, w)) [?]
[?
]w(+i 1(y, w)).
Similarly, +1 and T are inter-definable in MSO[<, (|i )k-1 i=0 ] as follows: +1(x, y) = x < y [?]
T (x, y) [?]
[?
]z((T (x, z) [?]
x < z) - y  z); T (x, y) = [?
]X(x [?]
X [?]
[?
]z(z [?]
X - [?
]w(+1(z, w) [?]
w [?]
X)) - y [?]
X) [?]
[?
]X(y [?]
X [?]
[?
]z(z [?]
X - [?
]w(+1(z, w) [?]
w [?]
X)) - x [?]
X).
In fact, +1 is first-order definable in terms of T , while T is second-order definable in terms of +1 (note that the interpretation of the second-order variable X in the definition of T cannot be restricted to paths or chains).
In summary, we have that +i 1 (respectively +1) is k-1 i definable in FO[<, (|i )k-1 i=0 ] (respectively MSO[<, (|i )i=0 ]) if and only if T (respectively k-1 k-1 T ) is definable in FO[<, (|i )i=0 ] (respectively MSO[<, (|i )i=0 ]).
Similarly, we can show the inter-definability of the pairs of predicates ([?
]i 1, D i ) (respectively ([?
]1, D)) in FO[<, k-1 (|i )k-1 i=0 ] (respectively MSO[<, (|i )i=0 ]).
In the following, we first focus on the upward unbounded layered structure, then we move to the n-layered structure, and finally we consider the downward unbounded one.
We study the upward unbounded layered structure before than the n-layered one because some results for the latter can be directly obtained from those for the former.
176  M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  4.
Definability and decidability over the UULS In this section, we investigate the definability and decidability of the given binary predicates in monadic languages interpreted over the UULS.
The ith equi-level T i can be defined as follows: T 0 (x, y) = ![?
]z1 (|0 (x) = z1 ) [?]
![?
]z2 (|0 (y) = z2 ); T i+1 (x, y) = [?
]z1 [?
]z2 (T i (z1 , z2 ) [?]
|0 (x) = z1 [?]
|0 (y) = z2 ).
As we have already shown, the horizontal successor +i can be defined in terms of T i .
As for D i , the predicate D 0 can be expressed as follows: D0 (x, y) = [?
]X(x [?]
X [?]
y [?]
X [?]
00 [?]
X [?]
[?
]z((T 0 (z) [?]
z = 00 ) - z [?]
/ X) [?]
[?
]z(z [?]
X - [?
]w(|0 (w) = z [?]
w [?]
X))) [?]
[?
]z((z [?]
X [?]
z = 00 ) - [?
]w(|0 (z) = w [?]
w [?]
X)))), where 00 is the first-order definable origin of layer T 0 .
Let an k n + * * * + a0 k 0 be the k-ary representation of i, for any i > 0.
D i can be defined as follows: D i (x, y) = [?
]z(D 0 (z) [?]
|a0 ,...,an (z) = x) [?]
[?
]z(D 0 (z) [?]
|a0 ,...,an (z) = y), where, for any w [?]
{0, .
.
.
, k - 1}* , |w (x) is inductively defined as follows: if w = , then |w (x) = x, otherwise, if w = av, with a [?]
{0, .
.
.
, k - 1} and v [?]
{0, .
.
.
, k - 1}* , then |w (x) =|a (|v (x)).
The vertical successor [?
]i 1 can be defined in terms of D i .
Notice that second-order quantification comes into play in the definition of D 0 only; furthermore, the semantics of D 0 does not change if we interpret the second-order variable X as a path.
Hence, the ith equi-column D i and the ith vertical successor [?
]i 1 can be encoded in i MPL[<, (|i )k-1 i=0 ], while the ith equi-level T and the ith horizontal successor +i 1 can be k-1 encoded in FO[<, (|i )i=0 ].
Consider now the global predicates.
We start by showing that the addition of the vertical predicates [?
]1 or D to FOP [<, (|i )k-1 i=0 ] makes it undecidable.
The proof reduces a suitable undecidable version of the tiling problem to the satisfiability problem for FOP [<, (|i )k-1 i=0 , [?]1]-formulas.
k-1 Theorem 4.1.
Both FOP [<, (|i )k-1 i=0 , D] and FOP [<, (|i )i=0 , [?
]1] over the k-ary UULS are undecidable.
Proof.
We prove the theorem for the binary UULS; the generalization to the k-refinable UULS is straightforward.
We show that FOP [<, |0 , |1 , [?
]1] over the binary UULS is undecidable by embedding the octant tiling problem into it [12].
Since FOP [<, |0 , |1 , [?
]1] - FOP [<, |0 , |1 , D], it follows that FOP [<, |0 , |1 , D] is undecidable as well.
The octant tiling problem is the problem of establishing whether, given a finite set of tile types T , T can tile O = i0 {(i, j ) | 0  j  i}.
For every tile type t [?]
T , let right(t), left(t), up(t), and down(t) be the colors of the corresponding sides of t .
The octant tiling problem consists in finding a function f : O - T such that right(f (n, m)) = left(f (n + 1, m)) and, whenever m < n, up(f (n, m)) = down(f (n, m + 1)).
We reduce  M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  177  Fig.
6.
Shaping the octant over the UULS.
the octant tiling problem to the satisfiability problem for FOP [<, |0 , |1 , [?
]1] over the binary UULS.
Let T = {T1 , .
.
.
, Tk } be the set of tile types.
We construct a formula phT such that T tiles O if and only if phT is satisfiable over the binary UULS.
The first step is forcing the octant grid  over the binary UULS U, |0 , |1 , <	 (cf.
Fig.
6).
The octant grid domain is the set G = i0 {(2(i-j ) - 1)j | 0  j  i} [?]
U .
We have that x [?]
G if and only if x is reachable through a 'rightmost branch' rooted at some point in {0i | i  0}.
The horizontal grid successor s0 is such that, for every nr [?]
G, s0 (nr ) = nr+1 , while the vertical grid successor s1 is such that, for every nr [?]
G, with r > 0, s1 (nr ) = (2n+1)r-1 .
For every nr [?]
G, with r > 0, it holds that s0 (s1 (nr )) = s1 (s0 (nr )).
In FOP [<, |0 , |1 , [?
]1] we can define a unary predicate grid such that grid(x) if and only if x belongs to the octant grid domain G. Let Plp , Qgrid [?]
P. For all x, we have that grid(x) if and only if x [?]
Qgrid [?]
00 [?]
Plp [?]
[?
]y((y [?]
Plp - [?
]z(|0 (z) = y [?]
z [?]
Plp [?]
|1 (z) [?]
/ Plp )) [?]
(y [?]
/ Plp [?]
!T 0 (y) - / Plp [?]
|1 (y) [?]
/ Plp )) [?]
[?
]y((y [?]
Plp - y [?]
Qgrid ) [?]
|0 (y) [?]
(y [?]
Qgrid [?]
y [?]
Plp [?]
!T 0 (y) - |0 (y) [?]
Qgrid [?]
|1 (y) [?]
Qgrid ) [?]
(y [?]
Qgrid [?]
y [?]
/ Plp [?]
!T 0 (y) - |0 (y) [?]
/ Qgrid [?]
|1 (y) [?]
Qgrid ) [?]
(y [?]
/ Qgrid [?]
!T 0 (y) -|0 (y) [?]
/ Qgrid [?]
|1 (y) [?]
/ Qgrid )).
Moreover, the horizontal successor s0 is [?
]1, and the vertical successor s1 is |1 .
We further need to impose the tiling conditions on the grid.
To this end, we take advantage of monadic predicates in {P1 , .
.
.
, Pk } [?]
P corresponding to the tile types in {T1 , .
.
.
, Tk }: (1) exactly one tile is placed at each node (ph1 (x)) i=k  i=1  x [?]
Pi  fi  !
(x [?]
Pi [?]
x [?]
Pj );  1i<j k  (2) colors match going right (ph2 (x))  x [?]
Pi [?]
[?
]1(x) [?]
Pj ; right(Ti )=left(Tj )  (3) colors match going up (ph3 (x))  x [?]
Pi [?]
|1 (x) [?]
Pj .
!T 0 (x) - up(Ti )=down(Tj )  178  M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  We define phT = [?
]x(grid(x) - ph1 (x) [?]
ph2 (x) [?]
ph3 (x)).
It is not difficult to show that T tiles O if and only if phT is satisfiable over the binary UULS.
2 We do not know whether the addition of +1 or T to FOP [<, (|i )k-1 i=0 ] produces the same effect.
The decidability problems for both FOP [<, (|i )k-1 , +1] and FOP [<, (|i )k-1 i=0 i=0 , T ] over the UULS are indeed open.
k-1 The following theorem shows that both MSO[<, (|i )k-1 i=0 , +1] and MSO[<, (|i )i=0 , T ] are undecidable.
The proof reduces the decidability problem for MSO[<, adj]N+ , <	 (the set of positive natural numbers), which has been shown to be undecidable in [22], to + the decidability problem for MSO[<, (|i )k-1 i=0 , +1].
The predicate adj over N , <	 is defined as follows: adj(x, y) if and only if x = 2kn + 2kn-1 + * * * + 2k0 , with kn > kn-1 > * * * > k0 > 0, and y = x + 2k0 + 2k0 -1 .
For instance, if x = 12 = 23 + 22 , then k0 = 2 and y = 12 + 22 + 21 = 18, while if x = 13 = 23 + 22 + 20 , then k0 = 0 and thus there is no y such that adj(13, y).
k-1 Theorem 4.2.
Both MSO[<, (|i )k-1 i=0 , +1] and MSO[<, (|i )i=0 , T ] over the k-ary UULS are undecidable.
Proof.
We prove the thesis for the binary UULS; the generalization to the k-ary UULS is straightforward.
To show that MSO[<, (|i )k-1 i=0 , +1] is undecidable, we embed MSO[<, adj] over N+ , <	 into MSO[<, |0 , |1 , +1] over the binary UULS.
Since T and +1 are inter-definable, the undecidability result holds for MSO[<, |0 , |1 , T ] as well.
We define the binary predicate adj over the UULS as follows (we are overloading the symbol adj): for every nr [?]
U , we have adj(nr , ms ) if and only if r > 0, s = r - 1, and m = 2(n + 1).
It is easy to check that adj(x, y) if and only if y is the adoptive son of x, that is, y is the horizontal successor of the right son of x.
As an example, we have that adj(12 , 41 ) (cf.
Fig.
2).
The predicate adj is thus definable in MSO[<, |0 , |1 , +1] over the 2-refinable UULS as follows: adj(x, y) = [?
]z(|1 (x) = z [?]
+1(z, y)).
Consider now the bijection t : U - N+ defined as follows: for every nr [?]
U , t (nr ) = 2r + n2r+1 (t is graphically depicted in Fig.
7).
It is easy to see that t is an isomorphism between U, <, adj	 and N+ , <, adj	.
From the undecidability of MSO[<, adj] over N+ , <	, it follows that MSO[<, adj] over the UULS is undecidable.
Since MSO[<, adj] - MSO[<, |0 , |1 , +1], we have the thesis.
2 From Theorem 4.1, it immediately follows that MSO[<, (|i )k-1 i=0 ] extended with either [?
]1 or D is undecidable.
Hence, putting together Theorems 4.1 and 4.2, we obtain the following corollary.
Corollary 4.3.
Global predicates cannot be defined in MSO[<, (|i )k-1 i=0 ] over the k-ary k-1 UULS and the extension of MSO[<, (|i )i=0 ] with any global predicate is undecidable.
M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  179  Fig.
7.
The 2-refinable UULS over the natural numbers.
The following theorem and its corollary provide information about the relationships between horizontal and vertical predicates over the UULS (we shall take advantage of such relationships in subsequent theorems).
More precisely, Theorem 4.4 shows that +1 is first-order definable in terms of D over the binary UULS.
Theorem 4.4.
FO[<, |0 , |1 , +1] is embedable in FO[<, |0 , |1 , D] over the binary UULS.
Proof.
First, the horizontal successor +1 can be defined in terms of the predicate adj over the UULS as follows: +1(x, y) = [?
]z((|0 (z) = x [?]
|1 (z) = y) [?]
(|1 (z) = x [?]
adj(z, y))).
Next, we encode the predicate adj in FO[<, |0 , |1 , D].
We claim that adj(x, y) if and only if ph(x, y), where ph(x, y) = !T 0 (x) [?]
[?
]z1 [?
]z2 [?
]z3 [?
]z4 [?
]z5 (T 0 (z1 ) [?]
D(z1 , x) [?]
+0 1(z1 , z2 ) [?]
[?
]1(z2 , z3 ) [?]
|0 (z3 ) = z4 [?]
D(z4 , z5 ) [?]
z5  x [?]
[?
]w(D(z4 , w) [?]
x  w - z5  w) [?]
(D 0 (x) [?]
x = 01 - [?
]1(z5 , y)) [?]
((!D 0 (x) [?]
x = 01 ) - z5 = y)).
We prove that the above definition captures the predicate adj.
Let x = nr , y = ms , and x does not belong to T 0 (that is, r  1).
Suppose that ph(x, y) holds.
Then, there exist z1 , .
.
.
, z5 , such that z1 = n0 , z2 = (n + 1)0 , z3 = (n + 1)1 , z4 = (2(n + 1))0 , and z5 = min{w | w = (2(n + 1))i [?]
i  0 [?]
nr  w}.
We show that z5 = y = (2(n + 1))r-1 , and thus adj(x, y) holds, whenever !D 0 (x) or x = 01 , and z5 = (2(n + 1))r-2 , y = (2(n + 1))r-1 , and thus adj(x, y) holds, whenever D 0 (x) and x = 01 (remind that adj(x, y) if and only if r  1, s = r - 1 and m = 2(n + 1)).
Suppose !D 0 (x), that is, n  1.
Since, for every i, j  0, ij < ij +1 , we only have to prove that (2(n + 1))r-2 < nr < (2(n + 1))r-1 .
To conclude that (2(n + 1))r-2 < nr , it suffices to prove that (2(n + 1))r-2  (4n)r-2 , and this follows from the fact that 2(n+1)  4n whenever n  1.
Since (4n)r-2 =|0 (|0 (nr )), and, for every point v, |0 (v) < v, we can conclude that (4n)r-2 < nr .
To complete the argument for the !D 0 (x) case, we must prove that nr < (2(n + 1))r-1 .
It immediately follows from the fact that (2(n + 1))r-1 = +1(|1 (nr )), and, for every v, v <|1 (v) and v < +1(v).
The other two cases (x = 01 and D 0 (x) [?]
x = 01 ) are easier, and thus left to  180  M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  the reader.
Similarly, we can prove that if adj(x, y) holds, then ph(x, y) holds.
Hence the thesis.
2 Since +1 and T are inter-definable in the MSO language over the (binary) UULS, and the same holds for [?]
and D, we have the following corollary.
Corollary 4.5.
Let o [?]
{+1, T } and v [?]
{[?
]1, D}.
MSO[<, |0 , |1 , o] is embedable into MSO[<, |0 , |1 , v] over the binary UULS.
To complete the picture, we consider the decidability problem for the extensions of MSO[<, (|i )k-1 i=0 ] fragments with global predicates.
Surprisingly, it turns out that the addition of global predicates to the chain fragment MCL[<, (|i )k-1 i=0 ] preserves decidability (global predicates are obviously not definable in such a fragment).
More precisely, we prove that the decidability problem for both MCL[<, (|i )k-1 i=0 , T , +1, [?
]1] and MCL[<, k-1 (|i )i=0 , D, +1, [?
]1] can be reduced to the decidability problem for MSO[<] over natural numbers by exploiting two different encodings.
As a matter of fact, we do not know whether the same holds for MCL[<, (|i )k-1 i=0 , T , D, +1, [?
]1] or not.
Theorem 4.6.
MCL[<, (|i )k-1 i=0 , T , +1, [?
]1] over the k-ary UULS is decidable.
Proof.
The proof is given for k = 2, and it can be easily extended to the general case of an arbitrary k. As a preliminary result, we prove that MCL[<, |0 , |1 , T , +1, [?
]1] - MCL[|0 , |1 , T , [?]1].
First of all, the horizontal successor +1 is first-order definable in terms of T and <.
Next, we prove that < can be removed.
We have that x < y can be defined as follows: x < y = x = y [?]
(x [?]
t|0 (y) [?]
y [?]
t|1 (x) [?]
[?
]z(x [?]
t|0 (z) [?]
y [?]
t|1 (z) )), where x [?]
t|i (y) stands for 'x belongs to the tree rooted at the ith son of y (x P |i (y) for short)'.
In its turn, the formula x <P y can be defined as follows:  x <P y = x = y [?]
[?
]X dcPath(X) [?]
x [?]
X [?]
y [?]
X [?]
   |i (z) = y [?]
z [?]
/X , [?
]z i[?
]{0,1}  where dcPath(X) is the MCL[|0 , |1 , T , [?
]1] formula that constrains the chain X to be a downward closed path: dcPath(X) = [?
]x((x [?]
X [?]
x [?]
/ T 0 ) - (|0 (x) [?]
X [?]
|1 (x) [?]
X)).
Finally, it is not difficult to show that MCL[|0 , |1 , T , [?
]1] is equivalent to a version of chain logic in which only second-order variables occur and atomic formulas are of the forms X1 [?]
X2 (chain X1 is included in chain X2 ), Sing(X) (chain X is a singleton), proji (X1 , X2 ) (chain X1 = {x1 }, chain X2 = {x2 } and |i (x) = y), equiL(X1 , X2 ) (chain X1 = {x1 }, chain X2 = {x2 }, and T (x, y)), and vsucc(X1 , X2 ) (chain X1 = {x1 }, chain X2 = {x2 }, and [?
]1(x, y)).
M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  181  It is possible to prove that every formula of the resulting chain logic can be encoded into an equi-satisfiable formula of the decidable theory MSO[<] over natural numbers.
The proof is by induction on the structure of the formulas of the chain logic (the idea is partly borrowed from [24]).
Any second-order variable X interpreted as a chain is encoded by a pair of set variables ChX and LvX over the natural numbers.
ChX is interpreted as a set of natural numbers encoding the leftmost upward unbounded path (starting from the first layer) containing the chain X, i.e., i [?]
ChX if and only if the element of the ith layer of the mentioned path is a right-hand side son.
LvX is interpreted as a set of natural numbers describing the elements of the path actually belonging to the chain, i.e., i [?]
LvX if and only if the element of the ith layer of the path belongs to the chain X.
To guarantee that a chain X corresponds to a unique pair (ChX , LvX ), we impose the condition unique(ChX , LvX ) = [?
]y(y [?]
ChX - min(LvX )  y), where min(X) is the minimum of the set X of natural numbers with respect to the usual ordering relation <.
As for atomic formulas, X1 [?]
X2 is encoded as ChX1 [?]
ChX2 [?]
LvX1 [?]
LvX2 ; Sing(X) in encoded as 'LvX is a singleton', that is, [?
]Y (Y [?]
LvX [?]
LvX = Y [?]
![?
]Z(Z [?]
LvX [?]
Z = LvX [?]
Z = Y )); proj0 (X1 , X2 ) is encoded as ChX1 = ChX2 , 'LvX1 is a singleton {x1 }', 'LvX2 is a singleton {x2 }', and x1 = x2 + 1; proj1 (X1 , X2 ) is encoded as 'LvX1 is a singleton {x1 }', 'LvX2 is a singleton {x2 }', x1 = x2 + 1, and ChX1 = ChX2 [?]
{x2 }; equiL(X1 , X2 ) is encoded as 'LvX1 is a singleton {x1 }', 'LvX2 is a singleton {x2 }', and x1 = x2 ; vsucc(X1 , X2 ) is encoded as 'LvX1 is a singleton {x1 }', 'LvX2 is a singleton {x2 }', x2 = x1 + 1, and ChX2 = {n + 1 | n [?]
ChX1 }.
The inductive cases [?]
and !
are trivial.
The second-order existentially quantified chain formula [?
]Xph(X) is translated into the formula [?
]ChX [?
]LvX (unique(ChX , LvX ) [?]
ph t (ChX , LvX )), where ph t is the translation of ph.
2 Theorem 4.7.
MCL[<, (|i )k-1 i=0 , D, +1, [?
]1] over the k-ary UULS is decidable.
Proof.
The proof is given for k = 2, and it can be easily extended to any k. Moreover, since [?
]1 is first-order definable in terms of D, from Theorem 4.4 it follows that MCL[<,|0 , |1 , D, +1, [?
]1] - MCL[<, |0 , |1 , D], thus allowing us to focus on the decidability of the latter.
We prove the decidability of MCL[<, |0 , |1 , D] by encoding any formula ph of MCL[<, |0 , |1 , D] into an equi-satisfiable formula of MSO[<] over natural numbers.
We start by showing the encoding of individual variables and set variables (interpreted as chains).
Any individual variable x is mapped into a pair of individual variables sx (shift) and lx (length), and a set variable Chx , which satisfy the constraint Pointx = lx  sx [?]
[?
]z(z [?]
Chx - 0 < z  lx ) [?]
(lx > 0 - 1 [?]
Chx ).
Such a triplet can be viewed as the specification of a point in the UULS as follows: it identifies the point of layer sx - lx which can be reached from the point of layer sx belonging to the leftmost branch of the tree by following the path of length lx codified in Chx (i [?]
Chx if and only if the ith / Chx if and only if step of the path leads from a point z to the point |1 (z), and thus i [?]
the ith step of the path leads from a point z to the point |0 (z)).
Notice that the points belonging to the leftmost branch of the tree are characterized by lx = 0 and thus Chx = [?].
Any set variable X is mapped into an individual variable sX and three set variables ChX , UpX , and DownX which satisfy the constraint ChainX = [?
]z(z [?]
ChX - 0 < z  sX ) [?]
[?
]z(z [?]
DownX - z  sX ) [?]
[?
]z(z [?]
UpX - z > sX ) [?]
(sX > 0 - 1 [?]
ChX ).
Such a tuple  182  M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  determines a chain in the UULS as follows: sX and ChX identify the full path lying on the leftmost branch of the structure until layer sX and then following the path specified by ChX from the layer sX to layer 0; UpX (respectively DownX ) identifies the subset of layers greater than (respectively less than or equal to) sX to which the elements of the chain belong.
On the basis of the given correspondence of variables, we inductively define the translation t of MSO[<, |0 , |1 , D] formulas into MSO[<] formulas as follows: t (x = y)  is Chx = Chy [?]
lx = ly [?]
sx = sy ;  t (x < y)  / Chx [?]
is sx < sy [?]
(sx = sy [?]
([?
]k(k [?]
Chy [?]
k [?]
[?
]k  (k  < k - (k  [?]
Chy - k  [?]
Chx ))) [?]
/ Chx [?]
[?
]k(k [?]
Chy - k [?]
Chx [?]
(ly < lx [?]
ly + 1 [?]
(k  ly [?]
k [?]
Chx ) - k [?]
Chy ))));  t (|0 (x) = y) is sx  lx + 1 [?]
Chx = Chy [?]
lx + 1 = ly [?]
sx = sy ; t (|1 (x) = y) is sx  lx + 1 [?]
Chx [?]
{lx + 1} = Chy [?]
lx + 1 = ly [?]
sx = sy ; t (D(x, y))  is Chx = Chy [?]
lx = ly ;  t (x [?]
Y )  is (sY = sx [?]
lx [?]
DownY [?]
[?
]z(0 < z  lx - (z [?]
Chx  t (ph [?]
ps)  is t (ph) [?]
t (ps);  t (!ph)  is !t (ph);  t ([?
]xph)  is [?
]Chx , lx , sx (Pointx [?]
t (ph));  t ([?
]Xph)  is [?
]sX , ChX , DownX , UpX (ChainX [?]
t (ph)).
- z [?]
ChY ))) [?]
(sY < sx [?]
lx = 0 [?]
sx [?]
UpY );  The equi-satisfiability of ph and t (ph) can be easily proved by induction on the structure of ph.
2 The decidability results for the UULS are summarized in Table 1 (a question mark stands for an open problem).
Such results allow us to connect MSO languages over the binary UULS (Fig.
8, right column) to both MSO languages over N+ (Fig.
8, middle column) and systolic o-languages over binary trees, Y-trees, and trellis [21,22] (Fig.
8, left Table 1 Decidability results for the UULS  FO MPL MCL FOP MPLP MCLP MSO = MSOP  T  +1  D  [?
]1  Decidable Decidable Decidable ?
?
?
Undecidable  Decidable Decidable Decidable ?
?
?
Undecidable  Decidable Decidable Decidable Undecidable Undecidable Undecidable Undecidable  Decidable Decidable Decidable Undecidable Undecidable Undecidable Undecidable  M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  183  SLo (Trellis) [?]
MSO[<, 2x] = MSO[<, |0 , |1 , D]  [?]
[?]
SLo (Y-Trees)  MSO[<, adj] = MSO[<, |0 , |1 , T ]    SLo (B-Trees) = MSO[<, flip] = MSO[<, |0 , |1 ] Fig.
8.
Systolic o-languages and monadic second-order theories.
column).1 They establish a connection between MSO[<, 2x] (respectively MSO[<, adj]) over N+ and MSO[<, |0 , |1 , D] (respectively MSO[<, |0 , |1 , T ]) over the binary UULS.
Moreover, we have that MSO[<, |0 , |1 , T ] is a proper extension of MSO[<, |0 , |1 ], and that it can be embedded into MSO[<, |0 , |1 , D].
One advantage of such a connection is a different and more intuitive characterization of Y-tree o-automata: every Y-tree automaton A can be associated with an MSO[<, |0 , |1 , T ]-formula phA interpreted over the binary UULS such that the models of phA are, modulo an isomorphism, all and only the o-words accepted by A.
The opposite embedding does not hold, since Y-tree automata are not closed under complementation.
Similarly, trellis o-automata, whose expressive power is greater than that of Y -tree automata, can be embedded into MSO[<, |0 , |1 , D]-formulas.
In this case, the opposite embedding is an open problem interestingly related to the closure under complementation of the well-known computational complexity class NP [22].
5.
Definability and decidability over the n-LS In this section, we investigate the definability and decidability of local and global binary predicates in monadic languages interpreted over the n-LS.
We start with the ith equi-level predicate T i which can be inductively defined as follows: T 0 (x, y) = ![?
]z1 (| (z1 ) = x) [?]
![?
]z2 (| (z2 ) = y); T i+1 (x, y) = [?
]z1 [?
]z2 (T i (z1 , z2 ) [?]
| (z1 ) = x [?]
| (z2 ) = y),  where | (x) = y is a shorthand for k-1 j =0 |j (x) = y.
 i The equi-level predicate T (x, y) can be defined as n-1 i=0 (T (x, y)).
Horizontal successors +i 1 and +1 are definable in terms of T i and T , respectively.
Consider now the equi-column predicate D i .
Let +i j (x, y) be a shorthand for (+i 1)j (x) = y and 00 be the first-order definable origin of T 0 .
D 0 (x, y) can be defined as follows: D 0 (x, y) =  n-1  i=0  (|0i (00 ) = x) [?]
n-1   (|0i (00 ) = y).
i=0  1 A survey on systolic computations can be found in [11].
184  M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  Then, for i > 0, we define D i (x, y) as follows: D i (x, y) =  n-1   [?
]z(T j (z) [?]
D 0 (z) [?]
+j i(z, x)) [?]
j =0 n-1   [?
]z(T j (z) [?]
D 0 (z) [?]
+j i(z, y)).
j =0  Once more, the vertical successor predicate [?
]i 1 can be defined in terms of D i .
Since all the above definitions do not exploit second-order quantification, we can conclude that all local predicates and the global predicates T and +1 are definable in FO[<, (|i )k-1 i=0 ] over the n-LS.
We now turn our attention to the global predicates equi-column D and vertical successor [?]1.
We show that D is not definable in MSO[<, |0 , |1 ] over the binary 2-layered structure, and, even worse, the addition of D to MSO[<, |0 , |1 ] yields undecidability.
Since D and [?
]1 are inter-definable, the same holds for [?]1.
Moreover, it is easy to show that MSO[<, |0 , |1 ] over the binary 2-layered structure can be embedded in MSO[<, (|i )k-1 i=0 ] over the k-ary n-layered structures (for any k and n), and thus all the above results generalize to MSO[<, (|i )k-1 i=0 ] over the k-ary n-layered structure.
We begin with an auxiliary lemma.
Let us define the predicate D over natural numbers as the reflexive and symmetric closure of the following set:         3k + 1 		 3k + 2 		 k even [?]
3k, k odd .
3k, 2 2 The following lemma proves that MSO[<] over the natural numbers cannot be extended with such a predicate preserving decidability.
Lemma 5.1.
MSO[<, D] over N, <	 is undecidable.
Proof.
Let P0 = {3n | n  0}, P1 = {3n + 1 | n  0} and P2 = {3n + 2 | n  0} be three unary predicates over natural numbers representing the congruence classes modulo 3.
They can be easily defined in MSO[<].
For instance, P0 (x) is defined as follows: P0 (x) = [?
]X(x [?]
X [?]
0 [?]
X [?]
[?
]y, v, z, w(y [?]
X - ((+1(y, v) - v [?]
/ X) [?]
(+2(y, z) - z [?]
/ X) [?]
(+3(y, w) - w [?]
X))), where 0 is the first-order definable constant representing the natural number 0 and +1, +2 and +3 are the first-order definable predicates defining the first, the second, and the third successor of a point, respectively.
By exploiting P0 (x), P1 (x), and P2 (x) and the relation D, we are able to define the relation 2x such that 2 x (x, y) if and only if y = 2x as follows: 2 x (x, y) = (x = 0 - y = 0) [?]
[?
]z, w( (P0 (x) [?]
+1(x, w) [?]
D(z, w) [?]
w = z) - y = z [?]
M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  185  Fig.
9.
The binary 2-layered structure over the natural numbers.
(P1 (x) [?]
+2(z, w) [?]
D(z, x) [?]
x = z) - y = w [?]
(P2 (x) [?]
+1(z, w) [?]
D(z, x) [?]
x = z) - y = w).
It is well known that MSO[<, 2x] over natural numbers is undecidable, since it allows one to interpret full first-order arithmetic.
This allows us to conclude that MSO[<, D] over the natural numbers is undecidable.
2 To prove our thesis, it suffices to show that MSO[<, D] over natural numbers can be embedded into MSO[<, |0 , |1 , D] over the binary 2-LS.
Theorem 5.2.
The predicate D (respectively [?
]1) is not definable in MSO[<, (|i )k-1 i=0 ] k-1 over the k-ary n-LS and the extension of MSO[<, (|i )i=0 ] with D (respectively [?
]1) is undecidable.
Proof.
We first show that MSO[<, D] over natural numbers can be embedded into MSO[<, |0 , |1 , D] over 2-layered binary structures (for notational simplicity, we are overloading the symbols < and D).
Let us consider the bijection t : U - N (depicted in Fig.
9) defined as follows: t (n0 ) = 3n, t (n1 ) = (3n + 2)/2 if n is even, and t (n1 ) = (3n + 1)/2 if n is odd.
It is easy to see that t is an isomorphism between U, <, D	 and N, <, D	.
It follows that, for every ph [?]
MSO[<, D], ph is satisfiable over N, <, D	 if and only if ph is satisfiable over U, <, D	.
From Lemma 5.1, it immediately follows that MSO[<, |0 , |1 , D] is undecidable.
Moreover, it is easy to show that MSO[<, |0 , |1 ] over the binary 2-LS k-1 is embedable in MSO[<, (|i )k-1 i=0 ] over the k-ary n-LS.
Hence, MSO[<, (|i )i=0 , D] and, k-1 k-1 thus, MSO[<, (|i )i=0 , [?]]
are undecidable.
Since MSO[<, (|i )i=0 ] over the k-ary n-LS is decidable (Theorem 2.2), we have that D and [?]
are not definable in MSO[<, (|i )k-1 i=0 ].
2 Positive results can be achieved in the case of MSO[<, (|i )k-1 i=0 ] fragments: it is possible to show that the extensions of its chain, path, and first-order fragments with the undefinable predicate D are decidable.
The decidability of MCL[<, (|)k-1 i=0 , D] is a consequence of Theorem 4.7, since the n-LS can be easily embedded into the UULS.
The decidabilk-1 ity of both MPL[<, (|)k-1 i=0 , D] and FO[<, (|)i=0 , D] immediately follows.
Since [?
]1 is first-order definable in terms of D, it follows that the extensions of the chain, path, and first-order fragments of MSO[<, (|i )k-1 i=0 ] with [?
]1 are decidable as well.
The decidability results for the n-layered structure are summarized in Table 2.
186  M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  Table 2 Decidability results for the n-LS  FO MPL MCL FOP MPLP MCLP MSO = MSOP  T  +1  D  [?
]1  Decidable Decidable Decidable Decidable Decidable Decidable Decidable  Decidable Decidable Decidable Decidable Decidable Decidable Decidable  Decidable Decidable Decidable ?
?
?
Undecidable  Decidable Decidable Decidable ?
?
?
Undecidable  6.
Definability and decidability over the DULS We conclude the paper by investigating the definability and decidability of the given binary predicates in monadic languages interpreted over the DULS.
The local predicates T i and +i 1 can be expressed as in the case of the n-LS.
On the contrary, the definition of the local predicate D i given in the case of the n-LS does not work anymore since we have to cope with an infinite number of layers.
We first define D0 (x, y) as follows:  0 D (x, y) = [?
]X x [?]
X [?]
y [?]
X [?]
00 [?]
X [?]
[?
]z(T 0 (z) [?]
z = 00 -  z[?]
/ X) [?]
[?
]z  z[?]
/X-  k-1 fi   z [?]
X - |0 (z) [?]
X [?]
 |i (z) [?]
/X ,  k-1 fi   |i (z) [?]
/X  [?]
i=1  i=0  where 00 is the first-order definable origin of layer T 0 .
For i > 0, let an k n + * * * + a0 k 0 be the k-ary representation of i.
We define D i (x, y) as follows: D (x, y) = i  log k (i)  [?
]z(D 0 (z) [?]
T j (z) [?]
+j i(z) = x) [?]
[?
]z(D 0 (z) [?]
j =0  |a0 ,...,an   log k (i)  (z) = x) [?]
[?
]z(D 0 (z) [?]
T j (z) [?]
j =0   +j i(z) = y) [?]
[?
]z(D (z) [?]
|a0 ,...,an (z) = y) .
0  As we have already shown, [?
]i 1 can be defined in terms of D i .
Moreover, as in the case of the UULS, second-order quantification is needed to define D 0 only, and the semantics of D 0 does not change if we interpret the second-order variable X as a path.
Hence, both the ith equi-column D i and the ith vertical successor [?
]i 1 can be encoded in MPL[<, i (|i )k-1 i=0 ], while the ith equi-level T and the ith horizontal successor +i 1 can be encoded in FO[<, (|i )k-1 i=0 ].
M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  187  Let us consider now the global predicates.
As in the case of the UULS, the addition of the vertical predicates [?
]1 or D to FOP [<, (|i )k-1 i=0 ] leads to undecidability.
The proof takes advantage of a reduction of the N x N tiling problem to the satisfiability problem for FOP [<, |0 , |1 , [?
]1] (as a matter of fact, the proof of Theorem 6.1 does not exploit the whole DULS, but only its first tree).
k-1 Theorem 6.1.
Both FOP [<, (|i )k-1 i=0 , D] and FOP [<, (|i )i=0 , [?
]1] over the k-ary DULS are undecidable.
Proof.
We show that both theories are undecidable over the binary infinite tree.
Since the binary infinite tree is embedable into the k-ary DULS, we have the thesis.
We show that FOP [<, |0 , |1 , [?
]1] over the binary infinite tree is undecidable by embedding the N x N tiling problem into it [2].
Since FOP [<, |0 , |1 , [?
]1] - FOP [<, |0 , |1 , D], it follows that FOP [<, |0 , |1 , D] is undecidable as well.
The N x N tiling problem is the problem of establishing whether, given a finite set of tile types T , T can tile N x N. For every tile type t [?]
T , let right(t), left(t), up(t), and down(t) be the colors of the corresponding sides of t .
We must find a function f : N x N - T such that right(f (n, m)) = left(f (n + 1, m)) and up(f (n, m)) = down(f (n, m + 1)).
The embedding is accomplished as follows.
Let T = {T1 , .
.
.
, Tk } be the set of tile types.
We construct a formula phT [?]
FOP [<, |0 , |1 , [?
]1] such that T tiles N x N if and only if phT is satisfiable over the binary infinite tree.
The first step consists in the construction of the grid over the binary infinite tree {0, 1}* , <	.
The grid is given by the domain {0* 1* }, and the horizontal (respectively vertical) successor s0 (respectively s1 ) is such that s0 (x) = x1 (respectively s1 (x) = 0x).
For every x [?]
{0* 1* }, it holds that s0 (s1 (x)) = s1 (s0 (x)).
In FOP [<, |0 , |1 , [?
]1], we can define a monadic predicate grid suchthat grid(x) if and only if x belongs to the grid domain {0* 1* }.
Notice that {0* 1* } = i0 {0i 1* }, and thus grid(x) if and only if x is reachable through a rightmost path rooted at some point in {0* }.
Let Plp , Qgrid [?]
P. For every x, we have that grid(x) if and only if / Plp ) [?]
x [?]
Qgrid [?]
 [?]
Plp [?]
[?
]y((y [?]
Plp - |0 (y) [?]
Plp [?]
|1 (y) [?]
/ Plp [?]
|1 (y) [?]
/ Plp )) [?]
[?
]y((y [?]
Plp - y [?]
Qgrid ) [?]
(y [?]
/ Plp - |0 (y) [?]
(y [?]
Qgrid [?]
y [?]
Plp - |0 (y) [?]
Qgrid [?]
|1 (y) [?]
Qgrid ) [?]
(y [?]
Qgrid [?]
/ Qgrid [?]
|1 (y) [?]
Qgrid ) [?]
(y [?]
/ Qgrid - |0 (y) [?]
/ Qgrid [?]
y[?]
/ Plp - |0 (y) [?]
/ Qgrid )).
|1 (y) [?]
Once we have shaped the grid, we can encode the horizontal and vertical successors as |1 and [?
]1, respectively, and we can write the tiling constraints on the grid.
To this end, we make use of monadic predicates in {P1 , .
.
.
, Pk } [?]
P corresponding to the tile types in {T1 , .
.
.
, Tk }: (1) exactly one tile is placed at each node (ph1 (x)) i=k  i=1  x [?]
Pi  fi 1i<j k  !
(x [?]
Pi [?]
x [?]
Pj );  188  M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  (2) colors match going right (ph2 (x))  x [?]
Pi [?]
|1 (x) [?]
Pj ; right(Ti )=left(Tj )  (3) colors match going up (ph3 (x))  x [?]
Pi [?]
[?
]1(x) [?]
Pj .
up(Ti )=down(Tj )  We define phT = [?
]x(grid(x) - ph1 (x) [?]
ph2 (x) [?]
ph3 (x)).
It is not difficult to see that T tiles N x N if and only if phT is satisfiable over the binary infinite tree.
2 As for the equi-level predicate T , it is possible to show that its addition to MPLP [<, (|i )k-1 i=0 ] does not preserve decidability.
Once more, the proof exploits an embedding of the N x N tiling problem.
Theorem 6.2.
MPLP [<, (|i )k-1 i=0 , T ] over the k-ary DULS is undecidable.
Proof.
We prove the theorem for the binary DULS; the generalization to the k-ary DULS is straightforward.
We show that MPLP [<, |0 , |1 , T ] over the binary DULS is undecidable by reducing to it the N x N tiling problem.
Suppose that T = {T1 , .
.
.
, Tk } is the given set of tile types.
We shall construct an MPLP [<, |0 , |1 , T ]-formula phT such that T tiles N x N if and only if phT is satisfiable over the binary DULS.
The first step consists in forcing the  grid over the binary DULS U, |0 , |1 , <	.
We define the grid domain as the set G = i0 {(i2j )j | j  0} [?]
U , the horizontal successor s0 (nr ) as (n + 2r )r , and the vertical successor s1 (nr ) as (2n)r+1 .
Note that, for every nr [?]
G, s0 (s1 (nr )) = s1 (s0 (nr )).
Moreover, it is easy to define in MPLP [<, |0 , |1 , T ] a monadic predicate grid such that grid(x) if and only if x belongs to the grid domain G. This predicate is true over x if and only if x is reachable along a leftmost path rooted at some point belonging to layer T 0 .
We have grid(x) = [?
]y(T 0 (y) [?]
LP(y, x)), where LP(y, x) if and only if [?
]X(x [?]
X [?]
y [?]
X [?]
[?
]z(z [?]
X -|0 (z) [?]
X)) (x and y belongs to the same leftmost path).
Moreover, the vertical successor can be defined as |0 and the horizontal successor as -, where - (x, y) = [?
]v, w(T (x, y) [?]
LP(v, x) [?]
T 0 (v) [?]
+0 (v, w) [?]
LP(w, y)).
The rest of the proof proceeds as the proof of Theorem 6.1, and thus it is omitted.
2  Unlike the proof of Theorem 6.1, the proof of Theorem 6.2 involves the whole DULS.
We do not know whether the addition of the horizontal successor +1 to MPLP [<, (|i )k-1 i=0 ] has the same effect.
However, since T and +1 are inter-definable in the MSO language,  M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  189  it follows that MSO[<, (|i )k-1 i=0 , +1] is undecidable.
Summing up, we have the following corollary.
Corollary 6.3.
Global predicates cannot be defined in MSO[<, (|i )k-1 i=0 ] over the k-ary k-1 DULS and the extension of MSO[<, (|i )i=0 ] with any global predicate is undecidable.
The following theorem and its corollary provide information about the relationships between horizontal and vertical predicates over the DULS.
More precisely, Theorem 6.4 shows that +1 is first-order definable in terms of D over the binary DULS.
Theorem 6.4.
FO[<, |0 , |1 , +1] is embedable in FO[<, |0 , |1 , D] over the binary DULS.
Proof.
First, the horizontal successor +1 can be defined in terms of the predicate adj over the DULS as follows: +1(x, y) iff  [?
]z((|0 (z) = x[?]
|1 (z) = y) [?]
(|1 (z) = x [?]
adj(z, y))) [?]
(T 0 (x) [?]
+0 1(x, y)).
Next, we show how to encode the predicate adj into FO[<, |0 , |1 , D].
We claim that adj(x, y) if and only if ph(x, y), where ph(x, y) iff  [?
]z1 [?
]z2 [?
]z3 [?
]z4 (T 0 (z1 ) [?]
D(z1 , x) [?]
+0 1(z1 , z2 )[?]
|0 (z2 ) = z3 [?]
D(z3 , z4 ) [?]
z4  x [?]
[?
]w(D(z3 , w) [?]
x  w - z4  w) [?]
((D 0 (x) [?]
D 1 (x)) - [?
]1(y, z4 )) [?]
(!
(D 0 (x) [?]
D 1 (x)) - z4 = y)).
We prove that the above definition captures the predicate adj.
Let x = nr and y = ms .
Note that adj(x, y) if and only if s = r + 1 and m = 2(n + 1).
Suppose that ph(x, y) holds.
Then, there exist z1 , .
.
.
, z4 such that z1 = n0 , z2 = (n + 1)0 , z3 = (2(n + 1))1 , and z4 = min{w | w = (2(n + 1))i [?]
i  0 and nr  w}.
We claim that z4 = y = (2(n + 1))r+1 , and thus adj(x, y) holds, whenever neither D 0 (x) nor D 1 (x), and z4 = (2(n + 1))r+2 and y = (2(n + 1))r+1 , and thus adj(x, y) holds, whenever (D 0 (x) or D 1 (x)).
Suppose that neither D 0 (x) nor D 1 (x), that is, n > 1.
Since, for every i, j  0, ij < ij +1 , we only have to prove that (2(n + 1))r+2 < nr < (2(n + 1))r+1 .
To show that (2(n + 1))r+2 < nr , consider the set {ir+2 | i  0}.
It is easy to verify that, for every i  4n, nr < ir+2 , and, for every i < 4n, ir+2 < nr .
Hence, it suffice to prove that 2(n + 1) < 4n, which is true for n > 1.
Since, for every v, v <|1 (v) and v < +1(v), the inequality nr < (2(n + 1))r+1 follows from the fact that (2(n + 1))r+1 = +1(|1 (nr )).
The case (D 0 (x) or D 1 (x)) is easier, and thus left to the reader.
Similarly, we can prove that if adj(x, y) holds, then ph(x, y) holds.
Hence the thesis.
2 Since +1 and T are inter-definable in the MSO language over the (binary) DULS, and the same holds for [?]
and D, we have the following corollary.
Corollary 6.5.
Let o [?]
{+1, T } and v [?]
{[?
]1, D}.
MSO[<, |0 , |1 , o] is embedable in MSO[<, |0 , |1 , v] over the binary DULS.
190  M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  Table 3 Decidability results for the DULS  FO MPL MCL FOP MPLP MCLP MSO = MSOP  T  +1  D  [?
]1  Decidable Decidable Decidable ?
Undecidable Undecidable Undecidable  Decidable Decidable Decidable ?
?
?
Undecidable  ?
?
?
Undecidable Undecidable Undecidable Undecidable  ?
?
?
Undecidable Undecidable Undecidable Undecidable  The only positive result is the decidability of MCL[<, (|i )k-1 i=0 , T , +1] over the k-ary DULS.
Its proof is similar to that of Theorem 4.6, and thus omitted.
Theorem 6.6.
MCL[<, (|i )k-1 i=0 , T , +1] over the k-ary DULS is decidable.
The decidability results for the DULS are summarized in Table 3.
7.
Conclusions The outcomes of the research work presented in this paper can be summarized as follows.
We first showed that all the considered binary predicates are not definable in the MSO language over the DULS and the UULS, and that their addition immediately leads the MSO theories of such structures to undecidability.
As for the n-LS, we pointed out the different status of the horizontal (equi-level and horizontal successor) and vertical (equicolumn and vertical successor) predicates: while horizontal predicates are easily definable, vertical ones are undefinable and their addition yields undecidability.
Then, we studied the effects of adding the above predicates to suitable fragments of the MSO language, such as its first-order, path, and chain fragments, possibly admitting free set variables.
We systematically explored all the possibilities, and gave a number of positive and negative results.
From a technical point of view, (un)definability and (un)decidability results are obtained by reduction from/to a wide spectrum of undecidable/decidable problems.
We are still missing the complete picture, because some decidability problems are open.
However, the achieved results suffice to formulate some general statements.
We proved that all predicates can be added to first-order, path, and chain fragments, devoid of free set variables, over the n-LS and the UULS preserving decidability.
In the case of the DULS, we proved the same result for the equi-level and horizontal successor predicates, while we do not know yet whether the same holds for the equi-column and vertical successor predicates.
Moreover, we proved that the addition of the equi-column or vertical successor predicates to first-order fragments over the o-layered structures, with free set variables, makes the resulting theories undecidable.
The effect of such additions to the n-layered structure is not known yet.
As for the equi-level predicate, we only proved that adding it to the monadic path fragment over the DULS, with free set variables, leads to undecidability.
Finally, as far as the MSO language over the UULS is concerned, we established an interesting con-  M. Franceschet et al.
/ Journal of Applied Logic 4 (2006) 168-191  191  nection between its extension with the equi-level (respectively equi-column) predicate and systolic o-languages over Y -trees (respectively trellis) [11].
References [1] C. Bettini, S. Jajodia, X. Wang, Time Granularities in Databases, Data Mining, and Temporal Reasoning, Springer, Berlin, 2000.
[2] E. Borger, E. Gradel, Y. Gurevich, The Classical Decision Problem, Springer, Berlin, 1997.
[3] C.C.
Elgot, M.O.
Rabin, Decidability and undecidability of second (first) order theory of generalized successor, J.
Symbolic Logic 31 (1966) 169-181.
[4] C. Dyreson, R. Snodgrass, Temporal granularity, in: R.T. Snodgrass (Ed.
), The TSQL2 Temporal Query Language, Kluwer Academic, Dordrecht, 1995, pp.
347-385.
[5] J. Euzenat, A. Montanari, Time granularity, in: M. Fisher, D. Gabbay, L. Vila (Eds.
), Handbook of Temporal Reasoning in Artificial Intelligence, in: B. Nebel, J. Hendler, H. Kitano (Eds.
), Foundation of AI, vol.
1, Elsevier Science, Amsterdam, 2005, pp.
59-118.
[6] J. Fiadeiro, T. Maibaum, Sometimes "tomorrow" is "sometimes"--action refinement in a temporal logic of objects, in: Proc.
of the 1st International Conference on Temporal Logic (ICTL), in: Lecture Notes in Artif.
Intell., vol.
827, Springer, Berlin, 1994, pp.
48-66.
[7] M. Franceschet, Dividing and conquering the layered land, PhD thesis, Department of Mathematics and Computer Science, University of Udine, Italy, 2001.
[8] M. Franceschet, A. Montanari, Branching within time: An expressively complete and elementarily decidable temporal logic for time granularity, Res.
Language Comput.
1 (3-4) (2003) 229-263.
[9] M. Franceschet, A. Montanari, Temporalized logics and automata for time granularity, Theory Practice Logic Programm.
4 (5-6) (2004) 621-658.
[10] M. Franceschet, A. Montanari, M. de Rijke, Model checking for combined logics with an application to mobile systems, Autom.
Software Engrg.
11 (3) (2004) 289-321.
[11] J. Gruska, Synthesis, structure and power of systolic computations, Theoret.
Comput.
Sci.
71 (1) (1990) 47-77.
[12] D. Harel, Effective transformations on infinite trees, with applications to high undecidability, dominoes, and fairness, J. ACM 33 (1) (1986) 224-248.
[13] P. Ladkin, Time representation: a taxonomy of interval relations, In: Proc.
of the 5th National Conference on Artificial Intelligence (AAAI), 1986, pp.
360-366.
[14] L. Lamport, On interprocess communication, Technical Report 8, SRC, Palo Alto, CA, 1985.
[15] H. Lauchli, C. Savoiz, Monadic second-order definable relations on the binary tree, J.
Symbolic Logic 52 (1987) 219-226.
[16] A. Montanari, Metric and layered temporal logic for time granularity, ILLC Dissertation Series 1996-02, ILLC, University of Amsterdam, 1996.
[17] A. Montanari, A. Peron, A. Policriti, Decidable theories of o-layered metric temporal structures, Logic J. IGPL 7 (1) (1999) 79-102.
[18] A. Montanari, A. Peron, A. Policriti, The taming (timing) of the states, Logic J. IGPL 8 (5) (2000) 681-699.
[19] A. Montanari, A. Peron, A. Policriti, Extending Kamp's theorem to model time granularity, J.
Logic Comput.
12 (4) (2002) 641-678.
[20] A. Montanari, A. Policriti, Decidability results for metric and layered temporal logics, Notre Dame J.
Formal Logic 37 (2) (1996) 260-282.
[21] A. Monti, A. Peron, Systolic tree o-languages: The operational and the logical view, Theoret.
Comput.
Sci.
23 (2000) 1-17.
[22] A. Monti, A. Peron, Logical definability of y-tree and trellis systolic o-languages, Acta Cybernetica 15 (2001) 75-100.
[23] W. Thomas, Automata on infinite objects, in: J. van Leeuwen (Ed.
), Handbook of Theoretical Computer Science, vol.
B, Elsevier Science, Amsterdam, 1990, pp.
133-191.
[24] W. Thomas, Infinite trees and automaton definable relations over o-words, in: Proc.
of the 7th Annual Symposium on Theoretical Aspects of Computer Science (STACS), in: Lecture Notes in Comput.
Sci., vol.
415, Springer, Berlin, 1990, pp.
263-277.