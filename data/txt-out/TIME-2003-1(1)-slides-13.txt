Web Services for Time Granularity Reasoning  Claudio Bettini Data, Knowledge and Web Engineering Laboratory University of Milan, Italy  TIME-ICTL 03 Invited Talk  (1/38)  Overview  * Time granularities * Current approaches to time granularities * Time granularity web services * GSTP: the Granularity Simple Temporal Problem * The GSTP web service  (2/38)  Time granularities  (3/38)  What is a time granularity?
* A granularity can be viewed as the partitioning of a temporal domain in groups of elements, where each group is perceived as an indivisible unit (a granule).
(4/38)  What is a time granularity?
* A granularity can be viewed as the partitioning of a temporal domain in groups of elements, where each group is perceived as an indivisible unit (a granule).
* The set of granules can be used for temporal qualification of statements (e.g., It has been raining for two weeks or Revenues in July 2003 are $500.000 ) and for specifying temporal relationships (e.g., The merchandise should reach its destination in 3 business days from the date of its order.)
(4/38)  What is a time granularity?
* A granularity can be viewed as the partitioning of a temporal domain in groups of elements, where each group is perceived as an indivisible unit (a granule).
* The set of granules can be used for temporal qualification of statements (e.g., It has been raining for two weeks or Revenues in July 2003 are $500.000 ) and for specifying temporal relationships (e.g., The merchandise should reach its destination in 3 business days from the date of its order.)
* It is a powerful abstraction tool  (4/38)  Which time granularities should we model?
Not only the usual ones: hour, day, week, month, year, .
.
.
(5/38)  Which time granularities should we model?
Not only the usual ones: hour, day, week, month, year, .
.
.
* From Ameritrade policies: GTC orders are only open for the traditional trading session each trading day.
(5/38)  Which time granularities should we model?
Not only the usual ones: hour, day, week, month, year, .
.
.
* From Ameritrade policies: GTC orders are only open for the traditional trading session each trading day.
* From UC Berkeley: Students wanting to do a part-time internship during an academic semester must be enrolled at UC Berkeley for the semester of their internship  (5/38)  Which time granularities should we model?
Not only the usual ones: hour, day, week, month, year, .
.
.
* From Ameritrade policies: GTC orders are only open for the traditional trading session each trading day.
* From UC Berkeley: Students wanting to do a part-time internship during an academic semester must be enrolled at UC Berkeley for the semester of their internship * From Morgan Stanley Mutual Fund Prospects: By business day we mean any day in which Banks are open in Luxemburg, New York and Tokyo depending on the specific case.
(5/38)  Time granularities can have complex definitions  Trading, banking and business days are examples of granularities that may depend on local holidays (e.g., California Admission Day).
(6/38)  Time granularities can have complex definitions  Trading, banking and business days are examples of granularities that may depend on local holidays (e.g., California Admission Day).
From NYSE web site: "If an observable holiday occurs on a Sunday it is observed on Monday, If on Saturday, it is observed on Friday.
The exception to this rule is New Years.
If it falls on a Saturday, the Market will be open on Friday, as the NYSE is ALWAYS open on the last trading day of the year."
(6/38)  Time granularity research issues  * Modeling time granularities * Granule conversions * Conversion of information in terms of different granularities * Time granularity constraint reasoning  (7/38)  Current approaches to time granularities  (8/38)  Current approaches to time granularities  * The multilayered logic approach.
Goal: a full-fledged logic to reason about multi-granularity temporally qualified statements.
(9/38)  Current approaches to time granularities  * The multilayered logic approach.
Goal: a full-fledged logic to reason about multi-granularity temporally qualified statements.
* The set-theoretic approach.
Goal: a mathematical model for arbitrary granularities and an associated algebra to manipulate them, plus a set of domain-specific reasoning tools.
(9/38)  The multilayered logic approach * Extensions of topological temporal logic * Temporal universe consisting of a (possibly infinite) set of inter-related differently-grained temporal domains * Logical tools are provided to qualify temporal statements with respect to the temporal universe and to switch temporal statements across temporal domains.
* Main application: real time systems specification and verification  (10/38)  The multilayered logic approach * Extensions of topological temporal logic * Temporal universe consisting of a (possibly infinite) set of inter-related differently-grained temporal domains * Logical tools are provided to qualify temporal statements with respect to the temporal universe and to switch temporal statements across temporal domains.
* Main application: real time systems specification and verification Angelo Montanari.
Metric and layered temporal logic for time granularity.
PhD thesis, University of Amsterdam.
ILLC DIssertation Series 1996-02.
(10/38)  Time granularities in the set-theoretic approach  A granularity is a mapping G from the positive integers to 2T (i.e., all subsets of a lineraly ordered temporal domain) such that for all positive integers i and j with i < j, the following two conditions are satisfied: * G(i) 6= [?]
and G(j) 6= [?]
imply that each element in G(i) precedes all elements in G(j), and * G(i) = [?]
implies G(j) = [?].
(11/38)  Examples of time granularities  day business-day business-week business-month  Example of granules: day(1) = 0001/01/01 day(731405) = 2003/07/09  (12/38)  The set theoretic approach  * Many granularity relationships formally defined (groups-into, finer-than, periodically groups-into, sub-granularity, shifting equivalent, .
.
. )
* Different time granularity systems have been investigated identifying systems with nice properties (e.g., lattices).
(13/38)  The set theoretic approach  * Many granularity relationships formally defined (groups-into, finer-than, periodically groups-into, sub-granularity, shifting equivalent, .
.
. )
* Different time granularity systems have been investigated identifying systems with nice properties (e.g., lattices).
C. Bettini, S. Jajodia, and X. Wang.
Time Granularities in Databases, Temporal Reasoning, and Data Mining.
Springer, 2000  (13/38)  System representations of time granularities  Assume hour is the bottom granularity with hour(1) mapped to the instants corresponding to 2001/1/1:01, then: * monday can be represented in terms of hour by: Period P = 168; Description of one of the periods: {[1, 24]} Bounds: none.
(14/38)  System representations of time granularities  Assume hour is the bottom granularity with hour(1) mapped to the instants corresponding to 2001/1/1:01, then: * monday can be represented in terms of hour by: Period P = 168; Description of one of the periods: {[1, 24]} Bounds: none.
* business-day-until-2003 can be represented by: Period P = 168; Description of one of the periods: {[1,24][25,48][49,72][73,96][97,120]} Bounds: Up=775 (number of business days from 2001 to 2003).
(14/38)  Primitive granule conversion operations  If day(1) is January 1st 2001, then: * d33emonth day = 2 since Feb. 2nd 2001, represented in the system as day(33), is contained in Feb. 2001, the second month, represented in the system as month(2).
(15/38)  Primitive granule conversion operations  If day(1) is January 1st 2001, then: * d33emonth day = 2 since Feb. 2nd 2001, represented in the system as day(33), is contained in Feb. 2001, the second month, represented in the system as month(2).
* b2cmonth day = {[32, 59]} since February 2001 contains the 28 days indexed from 32 to 59 in the granularity system.
(15/38)  Primitive granule conversion operations  If day(1) is January 1st 2001, then: * d33emonth day = 2 since Feb. 2nd 2001, represented in the system as day(33), is contained in Feb. 2001, the second month, represented in the system as month(2).
* b2cmonth day = {[32, 59]} since February 2001 contains the 28 days indexed from 32 to 59 in the granularity system.
* b2cb-month = {[32, 33][36, 40][43, 47][50, 54][57, 59]} since the day second business month includes only the days of February 2001 which are not Saturday nor Sunday.
(15/38)  Investigated applications * Databases: temporal query processing and temporal database interoperability, temporal database design, multiple granularity integrity constraint checking; * Data mining: discovering frequent temporal patterns, discovering temporal relationships; * Artificial Intelligence: multi-granularity constraint processing, scheduling in inter-organizational workflows.
The set-theoretic model and its basic services were a common basis in the proposed solutions (but different techniques were applied).
(16/38)  Time granularity web services  (17/38)  Web services  * A technology to enable distributed Web applications * Based on: HTTP, SOAP, WSDL, UDDI * Language and platform independent  (18/38)  Why time granularity web services?
* Managing distributed repositories of XML time granularity specifications * Offering processing services to web applications.
For example: - Specification of new granularities (using common algebra operators) - Search for equivalent specifications (name clash problem) - Conversion of granules - Constraint processing - ...  (19/38)  Which applications  Essentially all applications requiring multi-granularity time-management.
Focus on some of them: * Inter-organizational workflows * Personal (or group) Information Management (e.g., different views in Outlook-like apps, appointment scheduling) * Medical applications (e.g., monitoring) * ...  (20/38)  Granularity specification web services  Screenshot of a client-server application developed at GMU.
(21/38)  Granule conversion web services Find the month that contains the 27th week in 2003.
Screenshot of a client-server application developed at GMU.
(22/38)  Granule conversion web services (2) Find all the Wednesdays in July 2003.
P. Ning, X. Wang, S. Jajodia.
An Algebraic Representation of Calendars.
Annals of Mathematics and Artificial Intelligence 36(1-2): 5-38, 2002.
(23/38)  GSTP: the Granularity Simple Temporal Problem (The theory underlying a constraint processing web service)  (24/38)  Temporal constraint networks X1 [-1,1]  [2,2]  X0  X3  [1,6]  [0,3] X2  A Simple Temporal Problem (STP).
(25/38)  Temporal constraint networks X1 [-1,1]  [2,2]  X0  X3  [1,6]  [0,3] X2  A Simple Temporal Problem (STP).
Main tasks: consistency, constraint refinement, solution  (25/38)  Temporal constraint networks with granularities  X1 [-1,1]b-day  [2,2]b-week  X0  X3 [0,3]day  [1,6]b-day X2  Variables take values in Z+ .
(x0 , x1 ) satisfies [-1, 1]bday iff (1) dx0 ebday and dx1 ebday are both defined, and (2) -1 <= (dx1 ebday - dx0 ebday ) <= 1  (26/38)  The intuitive approach  Convert the network constraints in terms of a single granularity, and apply known (polynomial time) algorithms for STP.
(27/38)  The intuitive approach  Convert the network constraints in terms of a single granularity, and apply known (polynomial time) algorithms for STP.
Unfortunately, there is no straightforward reduction.
Consistency is NP-hard in terms of the involved granularities [Bettini et al.
TIME96 and AMAI98].
(27/38)  An approximate algorithm: Conversion+PC  * Compute the tightest implied constraints in terms of each granularity, generating a set of networks * Process each network with known algorithms * Rejoin the networks and repeat from step 1 until a fixpoint is reached  (28/38)  The conversion problem [1, 1] bday - [?, ?]
day  [1, 1] bday - [?, ?]
hour  (29/38)  The conversion problem [1, 1] bday - [?, ?]
day  [1, 1] bday - [?, ?]
hour  Why not [1, 1] day?
What about one event on Friday and the other on Monday?
(29/38)  The conversion problem [1, 1] bday - [?, ?]
day  [1, 1] bday - [?, ?]
hour  Why not [1, 1] day?
What about one event on Friday and the other on Monday?
Why not [1, 100] hour?
It is implied but a tighter implied constraint exists: [1, 95] hour.
(29/38)  The conversion problem (2) [1, 1] bday  -  [1, 95] hour  Can [1, 95] hour substitute [1, 1] bday?
(2003/7/9:14,2003/7/12:14) satisfies [1, 95] hour but violates [1, 1] bday  (30/38)  The conversion problem (2) [1, 1] bday  -  [1, 95] hour  Can [1, 95] hour substitute [1, 1] bday?
(2003/7/9:14,2003/7/12:14) satisfies [1, 95] hour but violates [1, 1] bday  Converting constraints is tricky!
New algorithms presented in [Bettini, Ruffini AAAI-WS02 and JUCS].
(30/38)  Why incomplete?
Consider this example with only "standard" granularities: [0,0]year [11,11]month  X1  X0  X3  [1,1]month X2  [30,30]day [0,0]month  (31/38)  Why incomplete?
Consider this example with only "standard" granularities: [0,0]year [11,11]month  X1  X0  X3  [1,1]month X2  [30,30]day [0,0]month  Intuition: We have to take into account the domain of involved variables  (31/38)  A minimal network in terms of month  (32/38)  A minimal network in terms of day  (33/38)  A sound and complete algorithm: AC-G Q := {(Xi , Xj ) | (Xi , Xj ) [?]
A} while Q 6= [?]
do 1. select and delete an arc (Xl , Xk ) from Q 2. if Dom(Xl ) 6=M AX Dom(Xl ) [?]
(Dom(Xk ) ] G(Xk , Xl )) then 2.1.
Q := Q [?]
{(Xi , Xl ) | (Xi , Xl ) [?]
A, i 6= k} 2.2.
Dom(Xl ) := Dom(Xl ) [?]
(Dom(Xk ) ] G(Xk , Xl )) 3. if Dom(Xl ) =M AX [?]
then Q := [?]
; Dom(Xl ) := [?]
end while  [Bettini et al.
CP97 and AIJ02].
Key theorem: a solution exists iff there is one with all values lower than a network-dependent constant M AX.
(34/38)  The GSTP algorithm Repeat 1.
Conversion+PC 2.
AC-G 3.
RefineEdgesFromNodes() Until no change is observed Return Inconsistent or NewNetwork+solution  (35/38)  The GSTP web service * Definition of an XML schema for constraint networks ... <xsd:complexType name = "ArcType"> <xsd:sequence> <xsd:element name="constraint" type="ConstrType" minOccurs="1"/> </xsd:sequence> <xsd:attribute name="sourceNodeID" use="required" type= .../> <xsd:attribute name="targetNodeID" use="required" type= .../> </xsd:complexType> ...  * WSDL service description made available to external applications.
(Services: consistency, refinement, solution, ...)  (36/38)  The GSTP web service architecture  (37/38)  References * C.Bettini, S.Mascetti, V.Pupillo, GSTP: A Temporal Reasoning System Supporting Multi-Granularity Temporal Constraints, In Proc.
IJCAI 2003 (Intelligent System Demonstration), Acapulco, Mexico.
* C. Bettini, X. Wang, S. Jajodia, Solving Multi-Granularity Constraint Networks, Artificial Intelligence, 140(1-2):107-152, 2002.
* C. Bettini, S. Jajodia, X. Wang, Time Granularities in Databases, Temporal Reasoning, and Data Mining.
Springer, 2000.
Thank you for your attention http://webmind.dico.unimi.it/gstp (38/38)