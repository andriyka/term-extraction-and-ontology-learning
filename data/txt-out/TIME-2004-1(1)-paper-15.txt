The SOL Time Theory: A Formalization of Structured Temporal Objects and Repetition Diana R. Cukierman and James P. Delgrande Simon Fraser University, Burnaby, B.C., V5A1S6, Canada {diana,jim}@cs.sfu.ca Abstract We propose to formally represent time with structured temporal objects.
Structured temporal objects denote related time intervals (and recursively, related temporal objects) which are conceived as structured objects, rather than relations among such intervals.
The major emphasis in this approach is on temporal repetition.
To that effect, a new temporal object, the time loop, is defined.
The intent of a time loop is to capture a structured notion of repetition.
We propose a first order theory formalizing these objects.
The building blocks of this formalism are time intervals and Allen's qualitative interval relations.
We prove a number of key desirable results including the consistency of the theory, and extensively compare expressions in this theory with previous related work.
We argue that this theory presents temporality and temporal repetition in a simple, commonsense manner.
Furthermore, we argue that it presents an alternative, succinct and more general view than previous proposals to represent temporal repetition.
1.
Introduction Temporal repetition is pervasive in nature and human activities.
Researchers in a wide variety of areas related to Artificial Intelligence (AI) and Databases (DB) need to deal with temporal information.
In particular, much work is devoted to dealing with time, where the intent is to formalize temporal objects, such as time intervals or points, and how they relate, often independent from what occurs during the temporal objects themselves.
In the last few years there have been several proposals to formalize reasoning about temporal repetition.
Influential proposals of modelings for temporal objects include [1, 27, 19, 22].
Proposals of temporal repetitive objects dealing with only qualitative (i.e.
not metric) information include [19, 22]; reasoners developed based on these objects include [24].
Repetition and metric information deal-  ing with calendric information and granularity systems include [21, 25, 11, 5, 26].
However, there remains a need to define a general coherent and well-founded formalism that represents and abstracts temporality and temporal repetition in a simple, commonsense manner.
The theory in this paper presents such a formalism; it presents an alternative and more succinct view than previous proposals and we argue that it subsumes their expressive power.
In our approach temporal objects can be thought of, and hence be representable, as structured objects.
Structured temporal objects denote related time intervals (and recursively, related temporal objects) which are conceived as structured objects, rather than relations among such intervals.
This corresponds to the intuition that such temporal objects are composite entities, akin to physical objects which are made up of different components.
For example, coffee after meeting is considered a temporal object: a related pair of intervals, one occurring after the other.
A major emphasis in this approach is on temporal repetition.
To that effect, a new temporal object is introduced: a time loop essentially allows to succinctly represent structured repeated patterns.
A time loop is determined by four parameters.
A loop cycle is a temporal object, which gives the structure of each instance of the repetition, a repetitions number gives the number of instances, a relation holding between instances and an identifying index further determine the loop.
For example, the loop O(x, coffee after meeting, before, 5) represents 5 instances of coffee after meeting, where each instance (considered as a whole, containing the interrelated intervals coffee and meeting) is before the next; x is an identifying index of the loop.
Additional parameters would be included in a metric version of a loop; this is not dealt with in this article.
An important idea behind a time loop is that it can represent a repeating pattern involving several inter-related activities within one structured cycle, possibly including the nesting of loops.
In contrast, previous proposals such as [20] by Ladkin would represent such situation with several "non-convex intervals".
The previous example would be represented with two separate  Proceedings of the 11th International Symposium on Temporal Representation and Reasoning (TIME'04) 1530-1311/04 $20.00 (c) 2004 IEEE  "non-convex intervals", one representing "5 coffees" and another one representing "5 meetings".
These two would then be related via a non-convex interval relation "all after".
We argue that the expressive power of the presented system subsumes Ladkin's proposal (and others based on nonconvex-intervals) in their repetitive temporal qualitative relations expressibility.
In the full theory [10] unbounded intervals, forever loops and atemporal assertions holding during the temporal terms are also defined.
These topics are not developed in the present article but only briefly mentioned.
The expressive power of the whole theory thus allows to represent not only structured repetition, but also such that a structured temporal object can be repeated "forever", towards the past, towards the future or in any other qualitative way.
On the other hand, atemporal assertions allow to represent activities or properties holding during the defined temporal objects.
We call this theory the SOL time theory; this name is an acronym of Structured Objects and Loops.
But also, "sol" means "sun" in Spanish, which not only is a fundamental temporal repetitive event in our lives but also a natural beauty1 .
This article is organized as follows.
The next section includes related background.
Section 3 presents the SOL time theory, the objects therein and some results.
The adequacy of the theory is reflected in the examples presented and theorems and metatheorems proved, including the consistency of the theory.
Section 4 describes relations between time loops; importantly this includes a comparison of our theory with previous work.
We finish with a brief discussion and future work.
Due to space limitations we only include some of the axioms, definitions and results and only outline some proofs of theorems and metatheorems.
Full detailed proofs of all the results included in this paper are developed in [10].
2.
Related work Allen's qualitative interval algebra [1] considers intervals as the primitive temporal entity and interval relations as the basic elements of the algebra.
Allen and Hayes [3] reformulate Allen's calculus as a theory in first order logic.
This axiomatization is proven to totally capture the behaviour of the temporal reasoner in Allen's work.
Non-convex intervals and generalized intervals have been proposed for temporal repetitive objects dealing with only qualitative (i.e.
not metric) information.
The term non-convex interval (or union of convex intervals) was coined by Ladkin [18]; "[it] consists intuitively of some (maximal) convex subintervals with convex gaps in between them".
Qualitative binary relations between non-convex intervals extending those in the 1  The name "SOL" should not be confused with the acronym for second order logic.
Interval Algebra are suggested.
A logic-based axiomatization for a system covering the convex and non-convex intervals calculi is proposed in [17].
[24] defines N-intervals as a subclass of Ladkin's non-convex intervals.
[22] generalizes further the non-convex interval concept to generalized intervals, where intervals are defined by either an even or odd number of points.
[28] proposes a framework to model recurring events extending the Point Algebra.
[4] proposes a further generalization to represent a repetitive interval as the tuple (of specific intervals) which is the solution of some consistent interval network; our work has been developed independently but this perspective has certain similarity with respect to our temporal objects interpretation.
Repetition and metric information dealing with calendric information and granularity systems include [21, 25, 11, 5, 26].
3.
The SOL time theory We introduce temporal objects with a new perspective: temporal objects can be thought of, and hence be representable, as structured objects.
Time loops represent structured temporal repetition.
For example, the occurrence of a university course of 3 hours per week and for 13 weeks can be thought of as a loop with 13 repetitions wherein the cycle is composed of 3 intervals representing the lecture hours.
Based on convex intervals and relations between them, we define temporal objects which may be recursively composed of further temporal terms.
Our language has the following entities.
We use intervals as primitive temporal objects.
Related pairs are the basic structured temporal object allowing one to represent two related temporal terms, such as coffee after seminar.
Rets are sets of related pairs, thus allowing one to express a set of interrelated temporal objects.
Temporal repetition is represented with time loops.
A loop cycle can be any temporal term and it provides the structure of each instance of the repetition.
In particular a ret cycle provides a "complex" structure for each repetition instance and a loop in a cycle provides nested repetition.
The university course example above is representable by a nested loop.
In the full theory [10] (see also [12]) we also define unbounded intervals and specify how they relate as an extension of "normal" (convex, non-limit) intervals and the temporal relations between them.
We also extend our theory to consider forever temporal repetition with what we call infinite or forever loops.
Thus we can have unbounded temporal terms in general.
Unbounded intervals play an important role with respect to forever loops; unbounded intervals constitute the convexification of (i.e.
they minimally cover) certain kind of such loops.
Furthermore, we develop a parallel with concepts from Mathematical Analysis [7]; we prove that forever loops and their convexifications can be respectively paralleled to infinite number series and their limit.
Proceedings of the 11th International Symposium on Temporal Representation and Reasoning (TIME'04) 1530-1311/04 $20.00 (c) 2004 IEEE  Thus we make a connection to an area with a wealth of results which are potencially applicable to our domain.
The representation formalism used is first order logic (FOL) with equality; sorts are identified with unary predicates (referred to as sortal predicates).
We include in our theory reified relations [2, 23, 6].
Syntactically this implies that a relation can be an argument to a predicate and that it can be quantified.
Results are formally proven with pure first order logic derivations or schemas of first order derivations.
Some derivations also rely on the pre-existing implemented Allen's [1] constraint propagation algorithm [15]; the usage of such algorithm as a rule of inference is equivalent to using first order logic inference rules [3].
Such algorithm is not complete for some cases when there are more than 3 intervals involved, as already acknowledged [1].
However, when we use this algorithm in our proofs, if it involves more than 3 intervals we graphically depict the scenario resulting from the algorithm, thus the correctness of the proofs is corroborated for those cases.
3.1.
Objects in the theory The objects in this theory include temporal terms, (reified) temporal relations and numbers 2 .
These sorts are disjoint.
3.1.1.
Temporal relations The basic Allen's convex interval relations are written .b.,.m.,.s.,.d.,.o.,.f.
and .eq.
for before, meets, starts, during, overlaps, finishes and equals respectively; inverse relations are written for example .b -1 .
for the inverse of before (i.e.
after).
Reified temporal relations such as before (.b.)
are arguments to the predicate related.
For example, related(i, i  , .b.)
expresses that the interval i is before i .
The temporal relations are axiomatized based on Allen and Hayes' axiomatization [3] translated to our reified notation.
3.1.2.
Temporal terms, generalities Essentially temporal terms represent sets of intervals with a certain structure.
Intervals are primitive.
The simplest structured temporal object we define is a related pair, consisting of two temporal objects with some (interval) relation holding between them.
Rets represent sets of related pairs and time loops are used to represent temporal repetition.
We avoid circular terms; this is imposed axiomatically for those temporal terms which are "constructed" with functors and may have arguments of the same sort, i.e.
related pairs, rets and loops, with an occur check axiom schema 2  The axiomatization of natural numbers and order relations in FOL is assumed.
This axiomatization accepts non-standard models, which we accept as a "math fact of life".
based on one of Clark's equality axioms schemas [9].
Associated with a temporal term t is an interval, its convexification: cvx(t).
Intuitively, the convexification of a temporal term is the least interval that contains all intervals in the temporal term.
Two axioms define the convexification functor, where subc(t , t) denotes that t is a subcomponent of t. Convexification for non-convex intervals was introduced in [17].
cvx.1 convexification of an interval [?]i.
interval(i) [?]
cvx(i) = i. cvx.2 convexification of other temporal terms [?]t.
tt(t) [?]
  ([?]i.
interval(i) i = cvx(t))   ), i, .in.))
([?
]t .
(subc(t , t) [?]
related(cvx(t  ([?]j.
[?
]t .
((subc(t , t) related(cvx(t ), j, .in.))
[?]
related(i, j, .in.)))
3.1.3.
Related-pairs A related-pair is the simplest structured temporal object.
A related-pair is defined with the three-ary functor  , , , where the three arguments are two temporal terms (the related-pair components) and a (reified) Allen temporal relation (the inter-component relation).
Intuitively, a related-pair t 1 , u, t2  represents the object in which temporal terms t 1 and t2 (more accurately their convexifications) are related by the interval relation u.
A related-pair can also be seen as a reified instance of an Allen binary temporal relation.
We use an abbreviated notation borrowed from programming languages and express the first component of a related pair p as p.1.
Similarly p.2 and p.rel represent the second component and the inter-component relation of p respectively; the sortal predicates tt( ) and relp( ) respectively identify temporal terms and related-pairs.
Axiom rp.1 establishes the parameters.
rp.1 related pair parameters     [?]p.
relp(p) = [?
]t, t , u. tt(t) tt(t ) allen(u)   (p = t, u, t  t = p.1 t = p.2 u = p.rel).
The first and second component in a related pair, as well as the related pair itself, are the related pair subcomponents; the related pair's immediate subcomponents are the first and second components.
Example 1 The related pair  music, {.b.,.o.
}, tea , .d., relax  has a related pair and an interval as its immediate subcomponents.
It represents three inter-related intervals: music, tea and relax.
Listening to music occurs before or overlapping the drinking of some tea.
These two activities occur while relaxing The convexified immediate subcomponents in the pair are related with the inter-components relation.
Two temporal objects are related with a temporal relation via the related predicate, where the relation is reified.
Proceedings of the 11th International Symposium on Temporal Representation and Reasoning (TIME'04) 1530-1311/04 $20.00 (c) 2004 IEEE  rp.2 inter-components relation [?]p.
relp(p) [?]
related(cvx(p.1), cvx(p.2), p.rel).
The next axiom schema is included to avoid circular related pairs following Clark's equality axiom schema (occur check).
We use the meta-notation T(x) (with T possibly subscripted) to stand for a temporal term where x is a (temporal term) variable.
Since temporal terms do not admit quantifiers within, we do not have to define this axiom schema imposing that x be a free variable (such is done in the case of Clark's axiom).
rp.3 related pairs  occur-check schema   [?
]t, u.
[(tt(t) allen(u)) [?]
 [?
]r, s. (tt(r) tt(s) t = r, u, s !
(r = T1 (t) s = T2 (t))], where T1 (t) and T2 (t) are temporal terms containing the (temporal term) variable t. 3.1.4.
Rets - sets of related pairs Rets represent sets of related pairs3 .
Here we consider rets as non-empty finite lists of related-pairs to simplify the presentation 4.
We avoid circular rets with an axiom schema analogously to that for related pairs.
For convenience we use the same notation for rets as lists in Prolog, Edinburgh notation.
An important use for rets is to express a "complex" temporal term as the cycle of a loop; the cycle of a loop is the "representative" of what is repeated.
Example 2 Consider the situation "every morning I get up and have breakfast with my family, then I take my child to daycare, then I work with the computer and drink a tea while I work".
The structure of an instance of this loop can be represented by the ret: [get up, .b., bf ast,bf ast, .b., dayc, dayc, .b., work, tea, .d., work] 3.1.5.
Temporal repetition: Loops A loop implicitly represents a certain number of temporal terms related by some qualitative relation and with structural similarity among them.
Four parameters specify a loop: an index, a cycle, an (Allen) interval relation and a repetitions number.
l.1 loop parameters   [?]l.
loop(l) = [?
]x, t, u, n.(number(x) tt(t) allen(u) number(n)    l = (x, t,u, n) x = index(l) t = cycle(l) u = rel(l) n = rep num(l)) Each instance of a cycle is called a repeat; that is, corresponding to a loop with repetitions number n, there are n objects representing each cycle instance 5 .
Repeats have 3  4  Notice that the order among the related pairs in a ret is not affecting the temporal order among the intervals that these related pairs represent; such is given by the inter-component relations included within the related pairs and recursively by the relations among the objects within.
We acknowledge that we cannot exactly axiomatize lists to be finite (nor infinite) within FOL; there exist non-intended models.
the same (temporal qualitative) shape as the cycle, determined by the predicate same shape.
Briefly, two (finite) intervals have the same shape (unbounded or infinite intervals are not dealt with in the present article), two related pairs have the same shape if corresponding arguments are equal or of the same shape and so on.
The first repeat of a loop coincides with its cycle.
l.2 repeat existence   [?
]l, n. (loop(l) number(n) n <= rep num(l)) [?]
 ([?]r.
tt(r) r = repeat(l, n) same shape(r, cycle(l))).
l.3 the cycle: first repeat [?]l.
loop(l) [?]
(cycle(l) = repeat(l, 1)).
Repeats are related among them according to the interrepeat relation: any (convexified) repeat is related with such relation with its subsequent (convexified) repeat.
Any of the 213 Allen's intervals relations are possible as inter-repeat relation.
l.4 inter-repeat relation   [?
]l, n. (loop(l) number(n) n < rep num(l)) [?]
related(cvx(repeat(l, n)), cvx(repeat(l, n + 1)), rel(l)).
The index is essentially used to distinguish loops which have the same structure (determined by the other three parameters).
Similarly to related pairs and rets we include an axiom schema to avoid circular loops following Clark's equality axiom schema.
Example 3 Let i be an interval, n be a number; 1.
(x, i, .b., n) represents a loop with n repeats (intervals), one before the next.
This corresponds to a finite non-convex interval with n "max-con-subints" (maximal convex subintervals) as defined in [18].
The infinite analogous case is represented (in the full theory) with the forever loop (x, i, .b., 0 ) 2.
(x, i, .in., n) represents a sequence of n intervals, such that one interval is inside the next.
This is not expressible with non-convex intervals [18]  3.2.
Some results about temporal objects We obtain the following results.
Before presenting results some clarifications are pertinent.
Restricted temporal terms exclude unbounded or infinite temporal objects [10]; we are not dealing with infinite temporal terms in this article, therefore those results referring to restricted temporal 5  A forever loop has a special constant as a repetitions number, 0 and additional characteristics and constraints, such as not admitting an unbounded cycle.
Proceedings of the 11th International Symposium on Temporal Representation and Reasoning (TIME'04) 1530-1311/04 $20.00 (c) 2004 IEEE  terms should be taken as applicable to all the terms defined here.
We keep this distinction for compatibility with the full theory and to illustrate some of the properties differentiating restricted temporal terms from infinite terms.
Proofs are only outlined due to lack of space.
The next theorem states that for any (restricted) temporal term there exists a subcomponent whose convexification starts or equals the temporal term's convexification and there exists a subcomponent whose convexification finishes or equals the temporal term's convexification.
Theorem 1 [?]t.
(tt(t) restricted(t))   [?]
  ( [?
]t1 , t2 .
tt(t1 ) tt(t2 ) subc(t1 , t) subc(t2 , t) related(cvx(t1 ), cvx(t), {.s., .eq.})
related(cvx(t2 ), cvx(t), {.f., .eq.}))
Proof Outline Figure 1 illustrates the proof outline as it applies to related pairs.
Let p be a related pair.
Given Axiom cvx.2, cvx(p.1) and cvx(p.2) should be .in.
cvx(p), where .in.= {.d.,.s.,.eq.,.f.}.
Without loss of generality assume cvx(p.1) is not head (.not-ahead.)
cvx(p.2), (.not-ahead.= {.b., .m., .o., .s., .s-1 ., .d-1 ., .f -1 ., .eq.}).
(a) Assume to reach a contradiction that cvx(p.1) is during cvx(p).
Exists cno , an interval containing cvx(p.1) and finishing (hence contained in) cvx(p).
But c no should contain cvx(p) given the minimality with respect to containment of the convexification (Axiom cvx.2).
(b) Analogous contradiction, assuming cvx(p.1) finishes cvx(p).
Hence cvx(p.1) is .in.
cvx(p) but it cannot be during nor finishing cvx(p).
Hence cvx(p.1) starts or equals cvx(p).
Symmetrically, the component whose convexification is not behind the other component's convexification finishes or equals the convexified related pair  cvx  (b)  The next example illustrates the proof of Theorem 3.a.
Example 4 Let i, j, k, t be bounded intervals, u an Allen relation and x a number.
Then struct equiv([i, u, j, j, u, k, k, u, t], (x, i, u, 4)) The proof outline of Theorems 3.2 and 3.3 follows: Proof outline The case of forever loops (repetitions number being  0 ) clearly can not be expressed in the language with a ret.
Indeed, elements in rets are explicitly specified in the language, with only formulas of finite length.
On the other hand, rets can include pairs of temporal terms which are not of the same shape at all (nor structurally equivalent) and the inter-component relations in the related pairs in rets can be any, not necessarily all equal.
Such is not representable with loops.
Importantly, we show that the full axiomatization is consistent.
.
(a)  arguments.
For example an interval is structurally equivalent to a loop whose cycle is an interval and its repetitions number is equal to 1.
In particular, we analyze structural equivalences between loops and rets and conclude that there are certain cases which do not have corresponding structurally equivalent counterparts.
This allows us to conclude that both loops and rets are needed for expressivity reasons.
This is summarized in the next theorem, where the predicate struct equiv corresponds to the relation structural equivalence.
 Theorem 3 a.[?]l.
(loop(l) restricted(l)) [?]
([?]r.
ret(r) struct equiv(l, r))  b.
[?]l.
(loop(l)  !restricted(l)) [?]
(![?]r.
(ret(r) struct equiv(l, r)))  c.
[?]r.
(ret(r) ([?]l.
(loop(l) [?]
!struct equiv(l, r))))  cvx  Theorem 4 The SOL time theory is consistent  p.1  p.1 cno  cno  p.2  p.2  Figure 1.
Proof of Theorem 1, as it applies to related pairs.
The next theorem states that the convexification of any restricted temporal term is a restricted interval.
Theorem 2 [?]t.
tt(t) [?]
(restricted(t) [?]
restricted(cvx(t))) In [10] we define the structural equivalence relation between temporal terms.
Intuitively two terms are structurally equivalent if they have the same structure at the interval level regardless of the types of temporal terms or specific  Proof outline We prove the consistency of the theory in two parts.
First we prove the consistency of the set of all axioms based on the PC-transform method [14].
The PC-transform method applies to us in the following way: a PC-transformed formula is obtained from the original formula by eliminating quantifiers and predicate arguments.
The classic first order inference rules are already proven to be preserved with the transformation in [14].
By proving that the PC-transformed axioms are consistent, we prove that our (original) axioms (and therefore the theory) is consistent.
The proof uses a propositional satisfiability solver [13].
Second we prove the consistency of those axioms involving reified propositions.
The PC-transformation eliminates predicate arguments and so reified relations need to be checked separately.
We use an interval constraint propagation algorithm [15] based on Allen's propagation algorithm  Proceedings of the 11th International Symposium on Temporal Representation and Reasoning (TIME'04) 1530-1311/04 $20.00 (c) 2004 IEEE  [1] to do this.
We input the intervals and relations involved in those axioms.
Allen's (polynomial run time) propagation algorithm is not complete for the full interval algebra if relations involve more than three intervals [1].
However, since the problem size is very small, we graphically represent a consistent scenario given the results from the propagation algorithm, and indeed find a consistent scenario, thus corroborating the correctness of the result The second part of the proof involving Allen's propagation algorithm is mostly relevant for the full theory.
A brief comment is included here for the sake of a complete presentation.
This proof is necessary for those axioms including the related predicate and thus containing reified temporal relations.
Such axioms are those defining the unbounded intervals.
We do not claim that this problem belongs to any specific tractable sub-algebra, but again, this is not affecting us given the size of the problem.
For example, one consistent (and not trivial) scenario, making the unbounded interval axioms true, involves 13 intervals, where for example 1 interval represents a generic bounded interval, 3 intervals represent since intervals (which are unbounded intervals that have a finite starting point and extend to the future) and so on.
A note concerning models of the theory The axioms characterizing Allen's temporal relations here are a direct translation from the axioms in [3]; as such they allow for both discrete and continuous models.
In choosing this axiomatization and having both discrete and dense models, our theory inherits the non-completeness of Allen's and Hayes axiomatization.
Ladkin [19] extensively deals with this issue and proposes a complete theory for interval relations as well as a completion of Allen and Hayes' theory having only continuous models.
We have chosen to extend Allen and Hayes for expressivity reasons, and leave for possible future work extending a complete theory such as the one proposed by Ladkin.
4.
Relations between time loops In this section we study relations between loops.
This study includes a comparison with the work in [18, 24, 26].
A brief analysis of Ladkin's non-convex intervals Ladkin [18] presents non-convex intervals to represent repetition, and proposes a number of binary relations between them, extending Allen's relations.
The following comments also apply to theories based on, or relying on, Ladkin's nonconvex intervals such as [24, 26].
Non-convex intervals are composed of collections of unstructured intervals related by the before relation.
Binary non-convex intervals relations are subsequently defined to express structure between non-convex intervals.
Non-convex intervals can be related as a whole (via their  convexification) and/or also via their subcomponents relations.
For example, if I and J are non-convex intervals "I begins in J" holds when the leftmost subcomponent of I is overlapped by a subcomponent of J; "sometimes I meets J" holds when at least one subcomponent of I meets one subcomponent of J [18].
Expressive power comparison Non-convex intervals can be expressed in the SOL time theory via loops whose cycle is an interval; notably any interval relation (and not just before) can be used in SOL.
Binary relations resembling non-convex interval relations are definable in our theory.
Such definitions can be based on relations between the convexified loops and/or certain or all repeats associated to the loops.
Below we present the relation ALLu paralleling the "always" relation by Ladkin.
Therefore, the expressivity that non-convex intervals provide together with the non-convex relations is attainable in our theory.
Recall also that our full theory includes both, finite and forever loops thus we also represent non-convex intervals containing infinite intervals.
But on the other hand, there are situations which our theory expresses more succinctly and naturally than with non-convex intervals.
Most notably, such is the case when there are a number of inter-related activities that get repeated, making our proposal more appropriate.
Furthermore, there are situations that our theory can represent and such expressivity is not attainable with non-convex intervals.
Such is the case of nested repetition possibly combined with additional structure, inter-repeat relations other than before and parametric values for the repetitions numbers.
We argue, therefore, that our theory subsumes the expressive power of the mentioned works.
The relation ALL u We define the ALL u relation between two loops resembling the always u relation as defined by Ladkin.
ALL u holds between two loops if and only if for every repeat of the first loop there exists a repeat of the second loop such that the (convexification of) the former relates u with the (convexification of) the latter.
Reciprocally, for every repeat in the second loop there exists a repeat in the first loop such that their convexifications relate u -1 , the inverse relation of u.
An example includes Lunches are always and only before afternoon teas.
In a similar and straightforward way, other relations can be defined in our theory similarly to how ALL u is, akin to Ladkin's sometimes and so on.
However, the succinctness and expressive power of our language is made evident when representing repetitive situations relying on loops with inner structure, rather than on relations paralleling non-convex interval relations.
The following comparative examples should provide a flavour of this expressive power; they support our argument that the SOL time theory is more succinct in many cases and that it is more general.
The next example involves two repetitive events so that  Proceedings of the 11th International Symposium on Temporal Representation and Reasoning (TIME'04) 1530-1311/04 $20.00 (c) 2004 IEEE  each repetition always includes both events and so that the qualitative relation between them (in each repetition) may vary.
Example 5 Sometimes lunches meet seminars, sometimes lunches are beforeseminars can be expressed with the loop (x, lunch {.m.
.b.}
seminar ,.b.,n).
This example is taken from [24], where is it is represented with two separate non-convex  intervals related with the relation always and only {.m.
.b.}.
The next two examples, also adapted from [24], illustrate other cases of uncertainty in the repetition.
These examples would be expressed in Morris et al.
's work as follows.
Example 6 1.
John sometimes calls Phyllis before going to work and some (other) times he calls her after going to work: Phoning sometimes a,b before Going to work.
Going to work sometimes c,d before Phoning.
2.
John sometimes goes to work before calling Phyllis.
Then (in that case) the calling overlaps his meeting: Going to work sometimes a,b before Phoning.
Phoning sometimes b,c overlaps Meeting.
Phoning, Going to work and Meeting denote nonconvex intervals.
The sub-indexes a, b, c, d express the co-designation relations required to express the temporal relations.
There is also a correlation relation implicitly assumed in the sometimes relation; sub-intervals from the two non-convex intervals which are "closest" are correlated.
In contrast, we propose an alternative style of expressing these relations.
The first situation (Example 5.1) is represented with only one loop (Example 6.1).
The second situation (Example 5.2) is represented with a disjoint union of loops (Example 6.2).
This naturally reflects that there are two alternative situations that can occur.
The co-relation and co-designation relations "come for free" in our representation.
Example 7 1.
(x, phone, {.b., .b-1 .
}, work, .b., n1 ) 2. l1 = (x, [work1 , .b., phone1 , phone1 , .o., meeting1], .b., n1 ) l2 = (y, [work2 , not[.b.
], phone2 , phone 2 , not[.o.
], meeting2 ], .b., n2 ) l = union(l1 , l2 ) disjoint(l1 , l2 ) Work, phone, etc.
denote intervals; n and n 1 denote repetitions numbers.
Other cases expressible both with nonconvex intervals and our formalism are discussed in [10].
Examples of situations not expressible in Ladkin's nor Morris et.
al.
's nor Terenziani's formalisms The next example includes nested repetition, where the inner loop is related to some other temporal object.
Example 8 "30 sets of 6 chemistry experiments each have to be done.
Each 6 experiments within one set should be done one after the other.
A special light should be on while the experiments take place."
This is expressed as one loop: l = (x, (y, experiment, .b., 6), .in., light on., .b., 30) A slight variation from this situation is also easily expressible, where the number of repetitions of the inner and outer loops are parametric and connected, as in n chemistry experiments and n * 5 trials.
Example 3.2 above also shows a situation not expressible in the mentioned formalisms.
5.
Discussion Our work proposes an original view to abstract and represent time and particularly temporal repetition.
We study and represent this domain with a first-order theory.
One key contribution of our research is that we propose a theory that abstracts temporality with structured temporal objects.
Importantly, the theory is proven consistent.
The theory proposed is not only a detailed study about temporal repetition; we provide an alternative view to represent temporal repetition with respect to previous work.
Given our studies, we claim that our language subsumes those of [18, 24] with respect to expressive power.
[10] also includes a detailed comparative analysis with the formalism in [26]; we conclude that, considering the qualitative counterpart only, our system subsumes the expressive power of this formalism as well.
As far as computational efficiency, we suggest that repetitive temporal reasoning can profit if represented in this theory; a constraint satisfaction solver could check consistency of only a loop cycle as a first stage, and then incorporate the constraints posed by the loop inter-repeat relation.
This is part of future research.
The main ideas that we suggest about structured repetition in a previous version of our work have proven to be of use in a specific application in medical informatics involving repetitive temporal data abstraction [8].
From this case, we foresee that other applications would benefit from the perspective proposed.
In the full theory [10] unbounded (or infinite) intervals and forever (or infinite) loops are also defined (this is however only briefly mentioned in this article).
Forever loops and unbounded intervals are proven to present a strong parallel with numerous concepts from Mathematical Analysis [7], including a notion of limit of infinite temporal repetition akin to the limit of infinite number sequences and series.
In particular, the sub-theory extending "normal" intervals (and qualitative relations) with unbounded (or infinite) intervals is presented in [12].
The full theory [10] also develops the representation of atemporal assertions holding during the temporal terms.
A proposition holding during a  Proceedings of the 11th International Symposium on Temporal Representation and Reasoning (TIME'04) 1530-1311/04 $20.00 (c) 2004 IEEE  temporal term inherits the temporal structure that the latter has.
We show that properties, events, or any atemporal assertion as well as causality rules can be nicely expressed indexed by the temporal terms we define; a comparison is made with the theory proposed in [6], where propositions are indexed by non-convex intervals.
In the full theory (and briefly in this article) we also define and analyze a structural equivalence relation between temporal objects.
This study allows us to compare expressiveness between the different temporal objects and would constitute a basis to define canonical terms in the theory.
We consider that the SOL time theory, as presented, is already a robust and consistent body of axioms with a very rich expressive and potential reasoning power.
Still, interesting results could be obtained by further research.
For example, it would be interesting to develop a minimal independent set of axioms, as well as obtaining a minimal set of temporal canonical temporal terms.
Other future work includes studying the suitability of this formalism to address practical applications, adding or integrating quantitative or calendric information to the SOL time theory and defining calendars based on a quantitatively extended theory.
It would be worth while exploring formalisms to develop analogous concepts to those in this theory, such as modal logics and higher order logics.
[9] [10]  [11]  [12]  [13]  [14] [15]  [16]  [17] [18]  References [19] [1] J. F. Allen.
Maintaining knowledge about temporal intervals.
Communications of the ACM, 26(11):832-843, 1983.
[2] J. F. Allen.
Towards a general theory of action and time.
Artificial Intelligence, 23:123-154, 1984.
[3] J. F. Allen and P. J. Hayes.
Moments and points in an interval-based temporal logic.
Computational Intelligence, 5:225-238, 1989.
[4] P. Balbiani, J. F. Condotta, L. F. del Cerro, and A. Osmani.
Reasoning about generalized intervals.
Artificial Intelligence: Methodology , Systems and Applications; 8th International Conference, AIMSA'98, pages 50-61, September 1998.
[5] C. Bettini and R. DeSibi.
Symbolic representation of userdefined time granularities.
Annals of Mathematics and Artificial Intelligence, 30(1-4):53-92, 2000.
Special issue on Temporal Representation and Reasoning.
[6] M. Bouzid and P. Ladkin.
Simple reasoning with timedependent propositions.
Logic Journal of the IGPL, 10(4):379-399, July 2002.
[7] I. N. Bronshtein and K. A. Semendyayev.
A guide-book to mathematics for technologists and engineers.
Pergamon Press Ltd., The Macmillan Company, New York, 1964.
Translated by J. Jaworowski and M. N. Bleicher.
[8] S. Chakravarty and Y. Shahar.
Capsul: A constraint-based specification of repeating patterns in time-oriented data.
Annals of Mathematics and Artificial Intelligence, 30(1-4):3-  [20] [21]  [22] [23] [24]  [25]  [26] [27]  [28]  22, 2000.
Special issue on Temporal Representation and Reasoning.
K. L. Clark.
Negation as Failure, pages 293-322.
Plenum Press, New York, 1978.
D. Cukierman.
A Formalization of Structured Temporal Objects and Repetition.
Ph.D. Thesis.
Simon Fraser University, Vancouver, Canada, 2003.
D. Cukierman and J. Delgrande.
Expressing time intervals and repetition within a formalization of calendars.
Computational Intelligence, 14(4):563-597, November 1998.
D. Cukierman and J. Delgrande.
A theory for convex interval relations including unbounded intervals.
2004.
To appear in the Proceedings of FLAIRS'2004, Florida Artificial Intelligence Research Society conference.
J. Happe.
The modprof theorem prover.
In Proceedings of the International Joint Conference on Automated Reasoning, IJCAR'2001, pages 459-463.
Springer, LNAI, 2001.
G. E. Hughes and M. J. Cresswell.
An Introduction to Modal Logics.
Methuen and Co Ltd., London, Great Britain, 1968.
H. Kautz.
MATS, The Metric/Allen Time System.
1991.
Common Lisp program which solves temporal constraint problems, Copyright AT&T 1991, based on [16].
H. A. Kautz and P. B. Ladkin.
Integrating metric and qualitative temporal reasoning.
In Proc.
of AAAI-91, pages 241- 246, 1991.
P. B. Ladkin.
Primitives and units for time specification.
In Proc.
of the AAAI-86, pages 354-359, 1986.
P. B. Ladkin.
Time representation: a taxonomy of interval relations.
In Proc.
of the AAAI-86, pages 360-366, 1986.
P. B. Ladkin.
The Logic of Time Representation.
PhD thesis, University of California, Berkeley, Nov. 1987.
Kestrel Institute report KES.U.87.13.
P. B. Ladkin.
Models of axioms for time intervals.
In Proc.
of the AAAI-87, pages 234-239, 1987.
B. Leban, D. D. McDonald, and D. R. Forster.
A representation for collections of temporal intervals.
In Proc.
of the AAAI-86, pages 367-371, 1986.
G. Ligozat.
On generalized interval calculi.
In Proc.
of the AAAI-91, pages 234-240, 1991.
J. Ma and B. Knight.
Reified temporal logics: An overview.
Artificial Intelligence Review, 15:189-217, 2001.
R. A. Morris, W. D. Shoaff, and L. Khatib.
Path consistency in a network of non-convex intervals.
In Proc.
of the IJCAI93, pages 655-660, 1993.
P. Terenziani.
Qualitative and quantitative constraints about numerically quantified periodic events.
In International Workshop on Temporal Representation and Reasoning, TIME'97, pages 94-101, FL, USA, 1997.
P. Terenziani.
Integrated temporal reasoning with periodic events.
Computational Intelligence, 16(2):210-256, 2000.
M. Vilain and H. Kautz.
Constraint propagation algorithms for temporal reasoning.
In Proc.
of the AAAI-86, pages 377- 382, 1986.
R. Wetprasit, A. Sattar, and L. Khatib.
Representation and reasoning with multi-point events.
Constraints, 5(3):211- 249, 2000.
Proceedings of the 11th International Symposium on Temporal Representation and Reasoning (TIME'04) 1530-1311/04 $20.00 (c) 2004 IEEE