Engineering Time in Medical Knowledge-Based Systems through Time-Axes and Time-Objects E.T.
Keravnou Department of Computer Science, University of Cyprus Kallipoleos 75, P.O.Box 537, CY-1678 Nicosia, Cyprus email: elpida@turing.cs.ucy .ac.cy  Abstract  'natural ' granularities are lunar months, calendar months, years, etc, respectively.
Starting from the premise that time representation and temporal reasoning must constitute integral aspects of a competent, knowledge-based, medical system, the paper presents the relevant requirements and discusses their realisation in terms of a generic temporal kernel to be embedded in such a system.
The kernel has a layered architecture where the bottom laver gives the ontological primitives and their associated axioms, and rhe higher layers implement the required temporal reasoning.
The principal primitives of the ontology are the time-axis and the time-object.
1.2 Model of occurrences An appropriate model for occurrences must support the following: a Absolute and relative occurrences.
"No ossification of knee epiphyses at birth" expresses an occurrence in absolute terms, ie with respect to some fixed point, while "narrow thorax until kyphoscoliosis" expresses an occurrence, "narrow thorax", relative to another occurrence, "kyphoscoliosis".
e Absolute and relative vagueness.
"Wide triradiate cartilage upto about the age of 11 years" exprcsses absolute vagueness while "nausea precedes or coincides with the headache" expresses relative vagueness.
a Absolute and relative duration.
"Two days of headache" expresses the duration of headache in absolute terms while "headache during the nausea" does so in a relative way.
a Incompleteness.
Patient information is often expressed in a temporally discrete and thus temporally incomplete fashion, eg the record of some patient could include statements like "mild scoliosis at the age of 2 years" and "severe scoliosis at the age of 7 years" without any mention of the status of scoliosis (absent or present and of what severity) at any other points in time.
a Point and interval occurrences.
The same occurrence can be expressed with respect to different temporal granularities, thus giving it point or interval status (in a conceptual rather than real-life sense) depending on the temporal context of reference.
For example "I had flu for most of January 1995" expresses an interval occurrence at the granularity of days but a point occurrence at the granularity of months.
With respect to interval occurrences the issue of convexity, or nonconvexity [ 131, arises (convexity implies that the  1 Time representation requirements for medical problem solving Time is intrinsically relevant to medical problem solving.
Time representation requirements for medical tasks such as diagnosis, prognosis, monitoring, therapy planning, ctc.
dcmand more variety in expression and higher levels of abstraction than appears to be supported by well known, general theories of time proposed in the AI literature [1],[3],[ 121.
There are two basic issues here: how to model time per se and how to model time-varying situations or occurrences.
1.1 Model of time Real time is infinite and dense.
An abstraction of reality which models time as a single time-line (either in dense or discrete terms), a model often adopted in temporal databases and other applications, does not provide the appropriate abstraction for medical applications where a richer model providing a multidimensional structure to time, through a number of interrelated, conceptual temporal contexts, and niultQle granularities, is often required.
Examples of conceptual temporal contexts are the various developmental periods, eg fetal-period, infancy, early-childhood, etc whose  160 0-8186-7528196$5.00 0 1996 IEEE  ~  unfolding of the Occurrence entails some sort of activity throughout the particular period of time that defines its lifetime).
Compound occurrences.
Disease processes and therapeutic interventions define compound occurrences.
Compound occurrences are categorised into: periodic occurrences (eg "headache every morning for about two hours over a period of one week which worsens each day", "administration of drug x every four hours until the pain stops but not for more than two days", etc); temporal trends that describe changes and their direction and rate of change, eg "low pressure increasing slowly", which in turn indicate whether a situation is normal or whether it is converging towards, or diverging away from, normality and at what rate; and general temporal patterns, eg a sequence of meeting trends, a set of relative occurrences, a set of causally related occurrences, etc.
The modelling of compound occurrences requires mechanisms for abstraction and refinement.
Cuusulity.
Changes are explained through causal relations and hence time is directly relevant to causality.
The temporal principle underlying causality is that an effect cannot precede its cause.
unintentionally cultivate the treatment of time as an accessory.
To achieve the above, an ontology must force time to be an integral aspect of the domain entities that constitute the processing elements of the problem solver.
This the proposed ontology aims to achieve through its time-object primitive, which in addition results in the simple integration and uniform representation of structural, causal, and temporal knowledge.
Furthermore, the ontology aims to provide the necessary temporal abstraction through multiple temporal granularities.
The principal ontological classes are the time-axis and the time-object that respectively provide a model of time and a model of occurrences.
Time-axes provide conceptual contexts for the definition of time-objects and hence they result in organising time-objects in meaningful (temporal) clusters.
A time-axis is expressed at the granularity relevant to its semantics and multiple granularities are therefore appropriately modelled by confining their usage to relevant, conceptual, temporal contexts.
The notion of an (anonymous) time-axis is not original per se.
However, the notion of multiple, conceptual (ie named), interrelated, time-axes is.
Multiplicity of time-axes is necessary for the natural representation of some problem.
For example the ossification process for the first cervical vertebra of the spine begins at the second lunar month and terminates at the 25th year of age.
The initiation of this process is expressed at the granularity of lunar months and its terrnination at the granularity of years.
The time-values concerned refer to conceptual periods of time, namely fetal-period and maturity respectively.
The lifetime of the particular ossification process extends over fetalperiiod, infancy, childhood, puberty and part of maturity.
This process is temporally decomposed into a number of subprocesses.
A process and its subprocesses are modelled as time-objects.
Time-objects are dynamic entities.
The existence of some time-object could be expressed with respect to multiple temporal contexts (ie time-axes) and hence granularities, either in absolute or relative terms.
In addition, the existence of a time-object, in some context, can be expressed with a degree of vagueness.
Three important types of relations are defined for time-objects: structural, causal, and temporal relations.
The ontological classes are: Tunits,the set of time-units.
Axes, the set of discrete time-axes.
Times(a), the sequence of literal time-vulues on time-axis a. Tobjects, the set of time-objects.
Tobjects(a) (cTobjects), the set of time-objects that have a valid existence on time-axis a. Pobjects(a) (G Tobjects(a)), the set of time-objects that have a point existence on time-axis a. Zobjects(a) (E Tobjects(a)), the set of time-objects that have an interval existence on time-axis a.
2 Ontological primitives The relative simplicity and crimness of the Drimitives and reasoning of most widely adopted general t'heories of time which in fact justify the wide interest in them, unfortunately do not render their expressive power sufficient enough for a number of real-life medical problems where happenings are not as simple and as orderly as someone walking on a street or getting a promotion.
Such theories do not provide an adequate level of abstraction for knowledge engineering purposes in that their primitives, often the time-point, the timeinterval, or the event, are too 'primitive' and not at a knowledge level from the perspective of modelling complicated, dynamic, domain concepts such as disease processes or therapeutic interventions.
Another indirect limitation is based on the fact that still in many knowledge-based problem solvers temporal reasoning is seen as an accessory rather than as an integral aspect of the problem solver's reasoning.
For example the temporal reasoner could be a background process demoted to the role of preprocessing data (from some temporal database) in order to select or derive the information to be fed to the problem solver; the problem solver, therefore, is not reasoning with time or change in any conscious way.
An ontology of time that in a sense 'forces' time to be treated as an integral aspect of the particular problem solving and hence for temporal reasoning to constitute a very conscious activity on the part of the problem solver has significant advantages over an ontology that does not and which may even  161  0  Props, the set ofproperties.
Props(ji) (cProps), the set of properties of relevance to time-unit p,  certainty.
Thus the duration of a non-closed existence of some time-object can only be shortened, If z does not have a valid existence in the context of time-axis a,then &,(a)= 1.
Hence a time-object can exist as a point-object on some time-axis but as an interval-object on another timeaxis.
In the former case the extent of the time-object is less that the time-unit of the particular time-axis.
A special moving time-object is now which exists as a point-object on any relevant time-axis and functions to partition time-objects into past, hture, or ongoing.
A time-object whose existence is expressed with respect to an abstractkoncrete time-axis is an abstract (generic)/concretetime-object.
Regarding temporal relations between time-objects, Allen's set [l] has been adapted and extended to fit the discrete, multidimensional, and multigranular, model of time.
More specifically a time-axis constitutes an argument of these relations, instances of which may be derived from absolute existence expressions; furthermore new relations based on temporal distance are added and usehl disjunctions are directly defined.
The structural relations between time-objects are isa-component - of, and its inverse contains, and variant-component, and its inverse v a r i a n t - contains; the latter two express conditional containment.
2.1 Time-units and time-axes Time-units define the possible granularities: scale(p,p 'A) gives the scale relation between granularities p and p'.
A time-axis, a, is expressed discretely at a specific granularity, p, in terms of a sequence of timevalues, Times&) = {t,,t, ,..,ti,..,f } , given with respect to the origin of the time-axis.
The origin of an abstract time-axis denotes a generic time-point; when an abstract time-axis is instantiated its origin gets bound to a real time-point.
Hence a concrete time-axis is 'linked' to the universal, real-time, axis.
The basic relation between time-axes is t-link(a,t,a ',t 7 that links a lime-value on one time-axis with a time-value on another time-axis.
Other relations, eg concurrent, includes, intersects-with, etc can be expressed through t-link.
Some of the time-axes are defined as spanning a chaining sequence of other timeaxes.
A spanning time-axis has a hybrid granularity inherited from its components.
For example lifetime could be a spanning time-axis encompassing fetal-period, infancy, etc.
2.2 Time-objects  contains(z ,T ) 1 J C= v a r i a n t - contains(z.,z.,Cs) A  A time-object, z, is a dynamic entity for which time constitutes an integral aspect.
It is viewed as a tight coupling between a propert?, and an existence, where its existence can be expressed with respect to different time-axes.
Its existence with respect to the most appropriate time-axis for it, is called the time-object's main existence.
Thus z = <xT,sT> where T C ~E Props is the property of z (n is a selector function, and the notation TC, stands for function TC applied to argument z), and hnction E~ : Axes -+ Eexps is the existence function of z.
The domain of E, is the set of time-axes and its range is the set of absolute existence expressions.
An absolute existence expression gives the (earliest) initiation and (latest) termination of some existence.
If time-object, 5 , has a valid existence on some time-axis, a, then E,(OI) = < t , , t p ; t,, tf E Times(a); t, I tf; and the status E {closed, open, o p e n - f r o m - l e f t , open-from-right, moving}.
If there is openness in some valid existence of a time-object then its actual initiation and/or termination is not known but approximated through an admissibility margin.
The initiation and termination admissibility  conds-hold(cs) I J A variant component can only be assumed, in some situation (eg a specific patient), if the specified conditions are satisfied.
A compound time-object has a valid existence under any context in which at least one of its components has a valid existence, and a time-object exists within the one that contains it.
Temporal views of a compound time-object, from the perspective of specific temporal contexts, can thus be defined.
Finally, relation causes between a pair of (abstract) time-objects zi and z. specifies various constraints (temporal and other) that need to be satisfied in order for a causality-l i n k to be established to hold between a pair of concrete instances of zi and zj.
A generic constraint, that always needs to be satisfied, is that a potential effect cannot precede its potential cause.
c a u s a l i t y - link(Z.,t.,Cf) I J c causes(zi,zj,Cs,Cf) A conds-hold(cs) A 7s t a r t s -before(?.
Z.)
J' 1 The fourth argument of relation causes denotes a  margins are given by <t ,t > and < tf ,tf > respectively where t,.
= le-fr (a)and %"=ri-fr,(a) (functions le-fr and  certainty factor, ie even if all specified conditions are  satisfied, in some situation, still it may not be definite that the particular c a u s a l i t y - l i n k actually exists in that situation.
The uncertainty is due to knowledge incompleteness.
Trends and periodic occurrences are modelled as compound time-objects, subsuming a number of other time-objects at a lower data and/or temporal level.
A generic periodic time-object is defined through a  ri-fr respectively stand for left-freedom and rightfreedom).
The existence of an open time-object, on a given time-axis, is therefore defined through an intial period of uncertainty, an in between period of certainty and a final period of uncertainty.
If the earliest termination of an open time-object precedes or coincides with its latest initiation then there is no period of  162  repetition element, a repetition pattern, and a progression pattern.
Some of the axioms are treated as deductive rules (eg the causality axioms) and others as integrity constraints (eg the containment axioms), a distinction adopted from [ 151.
A dletailed comparison between the proposed ontology and three widely adopted time ontologies, namely Allen's interval-based temporal logic [I], Kowalski and Sergot's event calculus [12], and Dean and McDermott's time token maps [3] is given in [7].
2.3 Properties Properties (ontology class Props), that constitute the other half of time-objects, are atomic or compound (negations, disjunctions, or conjunctions), passive or active, and some are time-invariant.
Examples of properties are "sex male", "sore throat", "severe coughing", etc.
A property is associated with relevant granularities, eg "headache present" is associated with hours and days, but not months or years.
This way the time-axes meaningful to a property or the subset of properties that can be instantiated in the context of some time-axis, a,AxisP(a), can be defined.
A property, p, either has an infinite persistence, ir&er(p), or a finite persistence, jnper(p).
In the latter case the following are additionally specified: whether the property can reoccur (multiple instantiations of the given property in the same context are possible); maximum and minimum durations (max-dur, min-dur) under any of the relevant granularities, where the default is any duration; and a default admissibility margin for the initiation of any instantiation of the property, under a specific relevant temporal context (earliest-init, latest-init), which if not specified is assumed to be the entire extent of the particular time-axis.
In addition, the proposed ontology adopts the semantnc attributes of properties specified by Shoham, eg downward hereditary, upward hereditary, solid, gestalt, etc [19].
Causality, with explicit temporal constraints, is specified at the level of properties as well, through relation cause - spec which is a 6-place relation where the first two arguments are properties, the third is a granularity, the fourth and fifth are sets of relative and absolute temporal constraints respectively, and the last argument is a certainty factor.
This relation also enables the derivation of the existence of a causality-link between a pair o f (concrete) time-objects through the following axiom.
causality-link(Z.,Z.,Cf) ' J C= cause-spec(pi,pj,p,TRel,Css,cf)A '7t(ti) = p. A '7t(Z.)
= p. A satisfied(Ti,z.,piTRel3 A satisfied(zi,zj,p,Css)A  3 Medical problem solver with integral temporal reasoning 'flie ontological primitives and their associated axioms form the ground layer of the embedded temporal kernel.
This is the layer that provides the interface with the (medical) system's knowledge-base and (patient) datalbase.
The other layers of the temporal kernel provide various temporal reasoning fimctionalities.
3.1 Temporal reasoning requirements 'The required temporal reasoning functionalities are classified, in ascending order of level, into mapping and clipping, derivation, and consistency and querying, functionalities.
These are listed below: Mapping and clipping: -- Determining bounds for absolute existences of occurrences, ie determining admissibility margins for initiations and terminations of occurrences.
-- Mapping occurrences across temporal contexts.
-- Detecting direct conJicts and clipping persistences.
Derivation: There are two types of derivations; deriving new occurrences, or deriving new relations between occurrences.
-- Deriving new occurrences through merging (see section 3.3).
-- Deriving new occurrences through decomposition.
The potential components of compound occurrences are inferred.
-- Deriving new occurrences through temporal data abstraction: a. Persistence derivation (see section 3.3).
b. Deriving temporal trends.
c. Deriving periodic occurrences.
d. Deriving potential clusters of related occurrences.
This is the opposite of the decomposition derivation.
-- Deriving causal antecedentskonsequents of some occurrence.
-- Deriving a relation between a pair of occurrences.
The types of relations are temporal, structural, and causality links.
Consistency and querying:  -starts -betJore(zj,zi)  Other property relations include exclusion, necessitation, etc.
In summary the ontological primitives provide the necessary conceptual abstraction for the adequate modelling of medical concepts (disorders, patient data, therapeutic-actions) [6].
Medical knowledge-bases and patient databases are viewed as collections of abstract and concrete time-objects respectively (and their relevant time-axes) and hence time becomes an integral aspect of the particular applications.
All the ontological classes and their associated axioms are discussed in detail in [7].
--  Estahlishing the overall consistency of some world  of occurrences.
163  occurrences.
A (hypothesised) occurrence, of any degree of complexity is queried against some world.
- Deriving the state of some world at a particular rime.
In an explorative mode, the problem solver may need to be informed about what is believed to be true, at some specific time, in some specific context.
The query may be expressed relative to another point in time which defaults to now, eg at time point t, what was/is/will be believed to be true during some specified period p?
Below we give algorithm for some of the mapping and clipping, and derivation functionalities.
- Querying  a refers to the main existence o f t , and returns a list of direct conflicts.
detect-conflicts obsaxs let conflicts be initialised to the empty list for each (qa)E obsaxs do for each (z ',a')that follows (t,a)in obsaxs do if ITT excludes E , , then let a' be the finest granularity time-axis between U and a' if &$a*) # IA &,.
(a* )#I then If 1 dis jo i n t(a*,T,T ') then enter ( t , z ' , a ' ) into conflicts else let a*be the finest granularity time-axis amongst the remaining relevant time-axes on which both z and z ' have a valid existence if there is such a time-axis and  3.2 Mapping and clipping functionalities First we discuss the mapping of time-objects across time-axes.
In order to map a time-object, z, from timeaxis, a, to time-axis, a',the following conditions must be satisfied: e The property of t, IT,: can be instantiated in the context of time-axis a', le K , E AxisP(a').
e The scale relation between p and p', the respective time-units for a and a', is known.
A linkage between the two time-axes is specified.
This means that an instance of relation t-link involving the relevant pair of time-axes is designated as defining the (basic) linkage between the two.
If any of these conditions is not satisfied then E,(u')= 1.A basic function of the mapping operation, map-Val, is to map a time-value, t E Times(@, from a to a' [7].
If a particular time-value cannot be mapped then map-val returns 1.
The mapping operation essentially involves mapping the base (t,) and limit (tf>time-values of t onto a'.
Further, if the existence of t on U entails uncertainty, then time-values le-frT(a) and ri-frT(a), if applicable, are also mapped.
Overall, there are four cases of mapping: mapping an interval-object to a coarser/finer granularity time-axis; and mapping a point-object to a coarsedfiner granularity time-axis.
Information is lost when the existence of a time-object is mapped onto a coarser granularity time-axis.
It is therefore quite possible that map(map(&,(a),a'),a) # &,(U).
Since every time-object has a main existence, to avoid the above problem, where possible, mappings should be from the main existence.
Next we discuss direct conflict detection and clipping of persistence.
Two time-objects are implicated in a direct conflict, if their existences are not disjoint and their properties are mutually exclusive; they are implicated in an indirect conflict if there is a direct conflict between one of these and a derivative of the other time-object.
A conflict is denoted by a triple ( t , z ' , a ) that gives the pair of time-objects andVhe time-axis in whose context the conflict is established.
Once a conflict is established, the next step is to try and resolve it.
Algorithm .fir detecting direct conflicts: The algorithm where accepts a list of time-object, time-axis pairs, (t,a),  disjoint(d,T,t')  then enter (z,t ',a*) into conflicts end for end for return conflicts end detect-conflicts Algorithm .for resolving Conflicts by clipping persistences: The algorithm uses auxiliary functions apparent-overlap, terminating-relation, and clip-persistence.
Predicate function apparent-overlap accepts a conflict and returns true if the relevant overlap could be apparent.
It is based on the heuristic that two time-objects which are disjoint under some granularity may appear as coinciding (eg if both of them are mapped onto the same point existence) or chaining, under a coarser granularity.
Function terminating-relation accepts a conflict, the relevant domain of time-objects, and an operation mode, reactive (meaning that (therapeutic) actions are only instigated in order to combat some established abnormality, and hence such actions could not have been started prior to what they aimed to terminate), or proactive (where therapeutic actions could also be instigated in order to prevent an anticipated, future, undesired happening; such actions would normally commence prior to what they aim to prevent).
The function returns a triple of values, where either all three values are equal to nil or they denote three time-objects (t. z.,~'), meaning that z' causes z. in order to terminate ti J (t:;nk-object Z' therefore denotes a terminating action for zi); time-objects zI and z. are the two specified in the parameter ofthe function,Jbut not necessarily in the given order.
terminating-relation (z,z',a)tobs mode if the mode is proactive or the initiations of z and t' on a coincide then the following reasoning is repeated for either combination of the two time-objects, ie ( t , , .
~is~set ) both to (z,z') and to (z',t) elsif t begins before z ' on U then zI is set to t and zj is set to z'  164  else ti is set to t' and t. is set to t J end if let relact E tobs such that the property for each of the selected time-objects denotes a potential terminating action for the property of zi repeat for each t' E relact if a c a u s a l i t y - l i n k can be established from t' to t. J and 2' does not begin before tion U (if the reasoning is done in a reactive mode), then 't is the rellevant action until a relevant action is found if a relevant action, t', is found then retum (ti,tj,t*)else return (nilpilpil) end terminating-relation Finally function clip-persistence accepts a pair of time-objects (t,t') and modifies the main existence of z to the minimum necessary so that this is disjoint from the existence of t'.
If in order to do so the whole existence of t is revoked or its duration drops below a specified minimum for the relevant granularity then the hnction returns false else it returns true.
The main algorithm accepts a list of conflicts, the relevant domain of time-objects, and an operation mode (reactive or proactive).
It returns a triple (appoverlaps, unresolvedc, revokedobs) where appoverlaps gives the conflicts that it has not investigated because the relevant overlap may well be apparent, unresolvedc gives the conflicts that it has not managed to resolve, and revokedobs gives the time-objects whose existence is revoked in order to resolve the conflict.
and cl is the cluster of existing time-objects subsumed by it end merging-deriv The relevant subset of time-objects is defined as: relobs(p,u) = { z I t E Tobjects(a); x a p}.
Thus the set of relevant periods of time on a, f(p,a), is given by: I(p,u) = {&,(U)1 t E relobs(p,a)}.
Let int c I(p,u); int conistitutes a conjoined chain iff its elements collectively cover all time-values included in the minimal period of time that spans all elements of int: con-ioined-chain(int) e t, t E extent(int) (3 t p E int such that t is included in tp) where extent(int) is the sequence of time-values  'p'  tb = min,< t, I <tet,,tf > ,< > E int } ,t = max, { tf I < t,,tf ,< > E int } p is the granularity of a Let int 5: Int 5: I(p,u); int constitutes a maximal conjoined chain in Int, iff it is a coinjoined chain and no other subset of Int constitutes a conjoined chain that strictly includes int's chain.
mar;-conj-chain(int,Int) e (conjoined-chain(int) A 1(3 int' Int such that (conjoined-chain(int') A extent(int) c extent(int')))) Let int c I(p,u), where conjoined-chain(int).
The minimal existence that spans all elements of int is given by function chain: cham(int) = <ts,,tf ,p where t,.
= min, {t I <ts-> E int} tf = maxp (if I <-,t+> E int} c1= (<t,.,closed> E int) v (<t,.-,open- from-right> E int) c2 = (<-,tf .,closed> E int) v (<-,t, ,,open-from-left> E int) q = closed, if c1 A c2 ,C = open- f rom-right, if C1 A l C2 <=open-from-left,if-c, A C ~ 5 = o p e n , i f l ~A ~ ~ C ~ Let int c I(p,a).
The minimum set of maximal existences that collectively cover all elements of int is given by function merge: merge(int) = {chain(i) I i E power(int); max-conjchain(i,int)} The refined algorithm is now given.
Algorithmfor deriving time-objects lhrough merging merging-deriv (p,u) let result be initialised to the empty list if p is a concatenable property then do: let relobs = (z I t E Tobjects(u); x, a p} int = (eT(u)I t E relobs} maxexist = merge(int) repeat for each maxe E maxexist let ts = { t I z E relobs ; I  3.3 Derivation functionalities Derivation operations aim to derive, from the specified world of occurrences, new occurrences or new relations between occurrences.
A derivation is nondirected, if only the type is specified, or directed if a derivation pattern or template is specified which is matched against the particular world.
First we discuss the case of a semidirected merging derivation where the property concerned, p, and the time-axis, U,are specified.
The property p is assumed to be concatenable [19], and it may well be a compound property such as a disjunction of related properties, eg p mild-coughinq V moderate-coughing coughing.
The algorithm is outlined below:  V  I  severe-  merging-deriv ( p a ) do the following: 1. select the relevant subset of time-objects from the particular world, relobs(p,a) 2. partition relobs into clusters that constitute maximal, conjoined, chains 3. for each cluster, derive the time-object that subsumes it end return the list of associations (z,cl) where z is a newly derived time-object (xT= p)  165  extent {.$a)) c extent {maxe}} if 3 (maxe',zs) E result then replace this entry of result with the new entry (chain {maxe, maxe'}, zs) else enter the association (maxe,zs) into result end repeat return result end merging-deriv As a side point we define strong and weak chains of time-objects.
Let zs G relobs(p,a), int = {&,(a)1 z E zs) E I(p,a), such that conjoined-chain(int).
A conjoined chain formed by the existences of a set of time-objects is considered strong if the chain is not likely to break due to potential uncertainties regarding its elements: strong-chain(ts) e conjoined-chain(int ') where int' = {< le-frT(a)ji-frT(a),ciosed> I z E zs; le-fr,(a) 5 ri-fr,(a)) Thus, weak-chain(zs) = 7 strong-chain(zs) Next we discuss one form of temporal data abstraction, persistence derivation.
The problem of persistence derivation is explained through an example.
Suppose there is some patient whose record includes two radiographs of the spine, one taken at the age of 2 years and the other at the age of 4 years.
Both radiographs show the presence of abnormality "kyphoscoliosis".
These observations correspond to two point-objects at the granularity of years.
The problem is how to see beyond these two discrete sightings, both forwards and backwards in time, eg what can be inferred about the existence of this condition with regard to the particular patient, before the age of 2 years, between the ages of 2 and 4 years, and after the age of 4 years?
Disorder expectations usually refer to interval occurrences and hence persistence derivation is a necessary fbnctionality for the proper matching of a disorder profile against a patient profile.
The algorithm given below operates in a nondirected fashion; it accepts a time-axis, a, and a collection of time-objects, which have the same property, and exist as point-objects under 01, and returns the interval-objects that represent distinct, maximal occurrences of the particular property, under the given temporal context.
Algorithmfor persistence derivation derive-persistence a tobs let p be the time-unit for cx p be the property shared by the elements of tobs z, ,z2,...,z,, ..., t, be the elements of tobs in ascending temporal order t,,t, ,..., t,, .,..,t, E Times(a) be the respective positions of t,.t2...,zi ,..,z, on cc iobs be initialised to the empty set if p is an infinitely persistent property ;;case 1 then enter into iobs a sin$le interval-object with tf = upper-time(a) ;; termiriation t, = earliest-init(p,a) ;;earliest initiation ts.
= minp{latest-init(p,a),t,)};;lolest initiation  if t, > ts.
then a conflict is noted elsif p IS a finitely persistent, but not a reoccurring, property ;;case 2 then enter into iobs a single interval-object with t, = maxiearliest-init(p,a),(t, -I.I max-dur(p,a))} t,.
= minit,, t, -I.I mindur(p,a),latest-init(p,a)} tf = max{(t, +p min-dur(p,a)), b} t,, = (ts.
+p max-dur(p,a)) ;;earliest termination if ts > t,.
or tf , > tf then a conflict is noted else ;; p is a finitely persisting, reoccurring, ;;property (case 3 ) let uncovered-obs be initialised to the temporal sequence z, ,z2,...,zi,..,z, repeat 1. select the longest initial segment of uncovered-obs that constitutes a nonconflicting instance of case 2 2. enter the interval-object that corresponds to the selected segment into iobs 3. remove selected segment from uncovered-obs until uncovered-obs is the empty sequence return iobs end derive-persistence The clustering of the point-objects performed under case 3 determines significant temporal distances (on the basis of the property concerned) between neighbouring objects which sign@ separate incidents.
The derivation of temporal trends is based on a modification of the above algorithm [7].
4 Validation The original motivation for the ontology came mainly through the SDD system, a diagnostic expert system for the domain of skeletal dysplasias [l 11, although many of the temporal requirements identified for medical problem solving were in parallel detected in the context of other research projects whose scope was the modelling of biochemical and other industrial processes [4],[6].
In all these applications the relevance of temporal notions such as periodicity, trends, delays, prematurity, etc, was quite evident and hence of the notions of temporal distance and absoluteness, as well as the need for different granularities and conceptual temporal contexts.
In addition, through such practical work, it was appreciated that the ontological primitives had to be at a high level of abstraction (knowledge level) to adequately support the knowledge engineering of complex dynamic processes.
The original ideas, which were demonstrated through SDD's temporal reasoner [lo], have been considerably enhanced and consolidated in the context of the CEC AIM Project GAMES I1 whose objective was to develop a theoretical framework and practical tools for the development of medical knowledge-based systems.
The proposed ontology and temporal reasoning mechanisms constitute part of the overall GAMES I1 product [20].
166  Furthermore, the ontology has been applied in building a simple prototype system modelling the normal ossification processes for parts of the human skeleton, and has been utilised in formulating a temporal model for medical diagnostic reasoning [9].
The plan for the immediate future is to filly implement the ontology and associated temporal reasoning algorithms in the form of an efficient and reusable temporal kernel for knowledgebased problem solvers, primarily for medical applications, but for other applications as well.
Time", Artjlkial Intelligence, Vo1.23, pp.123-154, 1984.
L. Chittaro, M. Del Rosso, and M. Dojat M., "Modeling Medical Reasoning with the Event Calculus: an application to the management of mechanical ventilation", Proc AIME 95, Lecture Notes in Artificial Intelligence, Vol.
935, Springer, pp.79-90, 1995.
T. Dean and D. McDermott, "Temporal Data Base Management", Artificial Intelligence, Vo1.32, pp.
1-55, 1987.
G.A.
Dervakos, J.M.
Woodley, E.T.
Keravnou, J. Washbrook and M.D.
Lilly, "Development of a KBS for Biotransformation Process Design, Proc.
I.CHEME.E.
Symposium Series N0.114, pp.283-291, 1989.
LJ.
l-iaimowitz and LS.
Kohane, "Managing Temporal Worlds for Medical Trend Diagnosis", to appear in [8].
E.T.
Keravnou, "Modelling Medical Concepts as TimeObjects", Proc AIME 95, Lecture Notes in Artificial Intelligence, Vol.
935, Springer, pp.67-78, 1995.
E.T.
Keravnou, "An Ontology of Time Using Time-Axes and Time-Objects as Primitives", Technical Report, Department of Computer Science, University of Cyprus, 1995.
E.T.
Keravnou (ed.
), Temporal Reasoning in Medicine, special issue of ArtiJicial Intelligence in Medicine, Vo1.8, No.3, June 1996.
E.T.
Keravnou E.T., "Temporal Diagnostic Reasoning Based on Time-Objects", to appear in [8] E.T.
Keravnou, J. Washbrook, "A Temporal Reasoning Framework Used in the Diagnosis of Skeletal Dysplasias", Artificial Intelligence in Medicine, V01.2, NOS, pp.239-265, 1990.
E.T.
Keravnou, F. Dams, J. Washbrook, C.M.
Hall, R.M.
Dawood and D. Shaw, "Modelling Diagnostic Skills in the Domain of Skeletal Dysplasias", Computer Methods and Programs in Biomedicine, Vo1.45, pp.239-260, 1994.
R. Kowalski and M. Sergot, "A Logic-Based Calculus of Events", New Generaiion Comput, V01.4, pp.67-95, 1986.
P. Ladkin, "Primitives and Units for Time Specification", Proc AAAI-86, pp.354-359, 1986.
W. Long, "Temporal Reasoning for Diagnosis in a Causal Probabilistic Knowledge Base", to appear in [8].
J. Mylopoulos, A. Borgida, M. Jarke and M. Koubarakis, "Telos: A Language for Representing Knowledge About Information Systems (Revised)", Technical Report KRRTR-89-1, Department of Computer Science, University of Toronto, 1990.
A. Riva and R. Bellazzi R., "Learning Temporal Probabilistic Causal Models from Longitudinal Data", to appear in [SI.
B. Rosser, J. Washbrook, J. Campbell, E.T.
Keravnou and D. Long, "A Framework for Time Dependent Reasoning Systems", Product PI 1 1-1, Esprit Project P2409 (EQUATOR), 1989.
Y. Shahar and M.A.
Musen, "Knowledge-Based Temporal Abstraction in Clinical Domains", to appear in  5 Conclusions Time is essential in problem solving.
With regard to medical problem solving time is intrinsically relevant to all medical concepts [6] (disorders, patient data, therapeutic interventions) and hence temporal reasoning ought to constitute an integral aspect of the overall problem solving.
Many of the general theories of time proposed in the AI literature [1],[3],[12] focus on natural language processing, or a specific class of problem solving tasks, usually planning or monitoring, or the management of temporal databases.
Some of these general theories have been effectively adapted in the context of specific medical applications [2].
By and large the work done in temporal reasoning for medical applications focuses on temporal data abstraction and temporal causality [5],[ 14],[ 16],[ 181.
The overall aim of the research presented in this paper is to develop an ontology of time, and associated temporal reasoning, based on a global analysis of time representation requirements for different medical tasks (diagnosis, monitoring, therapy planning) [8] and to effectively implement these through a generic temporal kernel.
The ontology must provide the required level of abstraction for knowledge modelling purposes and its usage must result in treating time as an integral aspect of the application.
The chosen ontological primitives, the timeaxis and the time-object, satisfy these design objectives and in addition the notion of a time-object integrates in a uniform and natural way temporal, structural, and causal knowledge.
However, the high power of expression provided by the proposed ontology is associated with relevant computational overheads.
Acknowledgements The research reported here has been partly supported by the University of Cyprus, the Leverhulme Trust (UK) (under projects SDD and MSD), and the CEC (under AIM Project A2034 GAMES 11).
The development of the ontology has benefit from discussions with other participants on these projects, in particular John Washbrook, Hauke Kindler and Mark Leaning.
In addition Kazem Sadegh-Zadeh, John Mylopoulos, and the three unknown referees have offered useful suggestions.
[W.  Y. Shoham, "Temporal Logics in A I Semantical and Ontological Considerations", Artificial Intelligence, V01.33, pp.89-104, 1987.
G. van Heijst, M. Ramoni, G. Schreiber and M. Stefanelli (eds.
), CEC AIM Project A2034 GAMES-II Final Report, 1995.
References [l]  J.F.
Allen, "Towards a General Theory of Action and  167