2013 20th International Symposium on Temporal Representation and Reasoning  A Labeled Deduction System for the Logic UB Carlos Caleiro SQIG - Instituto de TelecomunicacESSoEes Dep.
Mathematics, IST - TU Lisbon, Portugal ccal@math.ist.utl.pt  Luca ViganoE Marco Volpe Dipartimento di Informatica UniversitaE di Verona, Italy {luca.vigano, marco.volpe}@univr.it  sorts of labels allows for dedZning well-behaved rules for the composed temporal operators of Peircean logics.
Consider, for instance, the path quantidZers a and a, and the linear-time operator .
By introducing not only the labels x, y, .
.
.
for time instants but also the labels R1 , R2 , .
.
.
for representing accessibility relations along the didZerent paths, and by properly tuning the freshness conditions on such labels, we can, e.g., dedZne the following rules for the Peircean operators a and a, which follow the same patterns as the ones seen above for the logic K:  AbstractaWe propose an approach for dedZning labeled natural deduction systems for the class of Peircean branching temporal logics, seen as logics in their own right rather than as sublogics of Ockhamist systems.
In particular, we give a system for the logic UB, i.e., the until-free fragment of CTL, and show that it is sound and complete.
We also study normalization and discuss how derivations may reduce to a normal form using an appropriate management of proof contexts.
Finally, we briedZy discuss how to extend our system in order to capture full CTL.
Keywords-Labeled deduction; branching temporal logics; natural deduction.
[xR1 y] .. .. y:A aI x : aA  I.
Introduction In labeled deduction systems for modal and other nonclassical logics (e.g., [3], [13], [15]), labels are typically used to denote worlds in the underlying Kripke-style semantics.
For example, the following introduction and elimination rules for the modal operators are dedZned in [13], [15] for the modal logic K: [xRy] .. .. y:A I x : A  x : A xRy E y:A y : A xRy I x : A  z:B  [y : A] .. .. z:B E  where x, y are labels, R denotes the accessibility relation, and, in I, y is required to be fresh, i.e., it must be didZerent from x and not occur in any assumption on which y : A depends other than the discharged assumption xRy.
Analogously, y must be fresh in E.
If we consider a logic whose models are dedZned by using more than one accessibility relation and whose language allows for quantifying over relations, then it seems convenient to introduce a second sort of labels for denoting such relations.
This is the case of branching temporal logics.
Depending on the underlying language, we distinguish between Ockhamist branching temporal logics, where any combination of lineartime operators and path quantidZers is allowed, and Peircean branching temporal logics, where the only temporal operators admitted are those obtained as a combination of one single linear-time operator immediately preceded by one single path quantidZer.
In this paper, we will show that having two 1530-1311/13 $26.00 AS 2013 IEEE 1550-1311/13 DOI 10.1109/TIME.2013.14  x : aA  x r(x, A) y aE y:A  [xR1 y] .. .. y : A xR1 z aI x : aA  with y and R1 fresh in aI, and y fresh in aI (but not R1 ).
In the rule aE, the nesting of a auniversala modality inside an aexistentiala quantidZer does not allow for designing a rule that follows the standard pattern of a E.
In our approach, we tackle this problem by introducing Skolem functions for the accessibility relations: in particular, in this case, we use a Skolem function r(x, A) to name a path starting from x and such that A holds in all the points along that path.
Based on this novel idea of aSkolemized accessibility relationsa, in this paper, we build a sound and complete labeled deduction system for the Peircean logic UB, i.e., the until-free fragment of CTL.
As a further contribution, we also study normalization and discuss how derivations in our system may reduce to a normal form using an appropriate management of so-called proof contexts.
Finally, we briedZy discuss how to extend our system to the class of Peircean branching temporal logics, and focus in particular on the extension required in order to capture full CTL.
We proceed as follows.
In Section II, we recall the details of UB.
In Section III, we formalize our deduction system, which we show to be sound and complete in Section IV.
Section V is dedicated to the study of normalization.
In Section VI, we discuss how to extend the approach to the full CTL language and then, in Section VII, we draw conclusions and point towards future work.
[xRy] x : A  x : aA xR1 y aE y:A  38 45  II.
The Logic UB  of inference.
Soundness and weak completeness of this axiomatization have been proven in [1].
We introduce the logic UB, i.e., the until-free fragment of CTL, by briedZy presenting its syntax and semantics, along with a Hilbert-style axiomatization; see [1] for further details.
III.
The System N(UB) A. Syntax and Semantics of N(UB)  DedZnition 1 Given a set P of propositional symbols, the set of (well-formed) UB formulas is dedZned by the grammar  In order to formalize our labeled deduction system N(UB), we extend the syntax and semantics of UB as follows.
First of all, we extend the syntax by introducing labels that represent states and paths in the underlying semantics.
More specidZcally, let us assume given two dZxed denumerable sets of labels LS and LB .
Intuitively, the labels x, y, z, .
.
.
in LS refer to states and the labels , 1 , 2 , .
.
.
in LB refer to path relations.
We also introduce a third kind of labels.
We dedZne L+B = LB aS {r(x, A) | x a LS ,  a {, }, A is a UB formula}, where we will write r(x, A) to denote labels in L+B \ LB , which refer to accessibility relations corresponding to distinct paths of computation.
Further, we will write R, R1 , R2 , .
.
.
to denote generic elements of L+B .
We can then dedZne the formulas of N(UB): if x, y a LS , R a L+B and A is a UB formula, then a aV xRy and xR y are relational well-formed formulas (relational formulas or rwdZs for short), where the superscript a denotes the redZexive and transitive closure, and aV x : A is a labeled well-formed formula (labeled formula or lwdZ for short).
In order to give a semantics for our labeled system, we thus need to dedZne explicitly an interpretation of the labels.
A ::= p |aL| A a A | aA | aA | aA , where p a P. Other propositional connectives and temporal operators can be dedZned as abbreviations in the usual way.
DedZnition 2 A UB model is a triple M = (S, R, V) such that S is a set of states; R a S A S is a serial binary relation, i.e., for all s a S, there exists t a S such that R(s, t), also denoted as sRt; and V : S a 2P is a valuation function assigning a subset of P to each state in S. When sRt holds, we say that t is an immediate successor of s. An R-path is a sequence of states (s0 , s1 , .
.
.
, sn ) such that si Rsi+1 for 0 a$?
i a$?
n a 1.
An s-branch b is an indZnite R-path b = (s0 , s1 , .
.
.)
such that s = s0 .
We write Rb to denote the restriction of R to a given s-branch b, i.e., tRb t  idZ t = si and t  = si+1 for some i, and denote with RB the set of all such Rb .
We denote with Ra (respectively, Rba ) the redZexive and transitive closure of R (respectively, Rb ).
Given a UB model M and a state s a S, truth for a formula A is the relation |=M,s dedZned inductively as follows: M,s aL |=M,s p |=M,s A a B |=M,s aA |=M,s aA  idZ idZ idZ idZ  |=M,s aA  idZ  p a V(s) |=M,s A implies |=M,s B for all t, sRa t implies |=M,t A there exists an s-branch b such that for all t, sRba t implies |=M,t A there exists t such that sRt and |=M,t A  DedZnition 3 Let L = LS aS L+B and let M be a UB model (S, R, V).
An interpretation is a function I : L a S aS RB such that: aV for all x a LS , I(x) a S; + aV for all R a L B , I(R) a RB ; + aV if r(x, A) a L B \ L B , then a I(r(x, A)) = Rb for some I(x)-branch b; a if |=M,I(x) aA, then for all t a S: a if  = , then I(x)I(r(x, A)) t implies |=M,t A; a if  = , then I(x)I(r(x, A))a t implies |=M,t A;  Such a dedZnition can be extended in a standard way to the notions of satisdZability by a model M, denoted by |=M , and validity for all models, denoted by |=.
The Hilbert-style axiomatization H(UB) for the logic UB, taken from [1], consists of the following set of axioms: (CL) (A1) (A2) (A3) (A4) (E1) (E2) (E3) (E4)  Any tautology instance of classical propositional logic a(A a B) a (aA a aB) a(A a B) a (aA a aB) aA a (aA aSS aaA) a(A a aA) a (A a aA) a(A a B) a (aA a aB) aA a (A aSS aaA) aA a aA a(A a aA) a (A a aA)  The notion of interpretation allows us to extend the truth relation of DedZnition 2 to labeled formulas, as well as dedZne truth of relational formulas.
DedZnition 4 Given a UB model M = (S, R, V) and an interpretation I on it, truth for a formula D (labeled or relational) is the relation |=M,I dedZned as follows: |=M,I x : A |=M,I xRy |=M,I xRa y  and of the following two rules of inference: (MP) If A and A a B then B  (Nec) If A then aA  idZ idZ idZ  |=M,I(x) A I(x)I(R)I(y) I(x)I(R)a I(y)  When |=M,I D, we say that D is true in M according to I.
By extension:  The set of theorems of H(UB) is the smallest set containing this set of axioms and closed with respect to these rules  46 39  |=M,I I I |=M,I D |=M D |=M I I |= D  idZ idZ idZ idZ idZ  B.
The Rules of N(UB)  |=M,I D for all D a I |=M,I I implies |=M,I D for every interpretation I, |=M,I D for every interpretation I, |=M,I I for every UB model M and interpretation I, I |=M,I D  R. redZ and trans model redZexivity and transitivity of each relation, respectively, whereas comp states that it is possible to compose two relations, i.e., if xRa1 y and yRa2 z, then there exists a third relation a such that x a z.
Finally, we have two rules capturing two didZerent aspects of the seriality of the relations.
ser captures the fact that, given a state x, there is at least a relation passing through x and a successor along that relation.
sersk says that, given a state x and a Skolem function r(x, B), there exists a successor of x along that relation.
Induction Rules: Finally, we have two rules modeling the induction principle underlying the relation between R and Ra .
Intuitively, inda corresponds to the axiom (A4) of H(UB), whereas inda corresponds to (E4) (cf.
the proof of (E4) in Fig.
2, which makes crucial use of the inda rule).
The rules of N(UB) are given in Fig.
1.
We can classify them into four categories: (i) rules for classical connectives, (ii) rules for temporal operators, (iii) relational rules, and (iv) induction rules.
Rules for Classical Connectives: The rules for the logical connectives mirror those of other labeled natural deduction systems for modal logics, e.g., [13], [15].
The rules aI and aE are the labeled version of the standard [9] natural deduction rules for implication introduction and elimination.
The rule aLE is a labeled version of reductio ad absurdum, where we do not enforce Prawitzas side condition that A fiaL and we do not constrain the world in which we derive a contradiction to be the same as in the assumption.
Rules for Temporal Operators: The rules for the introduction and the elimination of a, a and a follow the same structure as the rules for introduction and elimination of  in labeled systems for modal logics.
Let us consider aI; the idea is that the meaning of x : aA is given by the metalevel implication x a y =a y : A for an arbitrary path denoted by the relation  and an arbitrary y a -accessible from x.
The arbitrariness of both  and y is ensured by the side-conditions of the rule.
Introductions of a and a follow the same principle, but relax the freshness condition on the label denoting the relation, thus allowing us to reason on a single specidZc path.
Note that in this case a further premise (xRz) is required: such a premise works as a awitnessa, in the sense that it ensures that the relation R considered is indeed a relation passing through the state x.
For what concerns the elimination rules, the intuition behind aE is that if aA holds in a state x and y is accessible from x (along some path), then it is possible to conclude that A holds in y.
The case of aE and aE is similar but complicated by the fact that the universal linear-time operator ( or ) is preceded by an existential path quantidZer (a), which prevents us from inferring the conclusion for a successor along an arbitrary relation.
Our solution is based on the novel idea of using Skolem functions as names for particular relations, e.g., r(x, A) denotes a relation passing at x and such that if aA holds in x, then A holds at each successor of x along r(x, A).
Relational Rules: Relational rules allow for modeling properties of the accessibility relations.1 In particular, the rule base expresses the fact that for each relation R, Ra contains  Given the rules in Fig.
1, the notions of derivation, conclusion, open and discharged assumption are the standard ones (see, e.g., [4], pp.
127-129) for natural deduction systems.
We write I N(UB) x : A to say that there exists a derivation of x : A in the system N(UB) whose open assumptions are all contained in the set of formulas I.
A derivation of x : A in N(UB) where all the assumptions are discharged is a proof of x : A in N(UB) and we then say that x : A is a theorem of N(UB) and write N(UB) x : A.
To denote that I  is a derivation of x : A whose set of assumptions may contain the formulas D1 , .
.
.
, Dn , we write D1 .
.
.
Dn I  x:A  As an example, which will also be useful for the proof of completeness later on, in Fig.
2 we give derivations for the labeled versions of the axioms (E2) and (E4), which are obtained simply by predZxing the axioms with the state label x.
For simplicity, in these derivations, we use a rule aSSI, a labeled version of the standard rule for introduction of aSS [10], which is not included in the presentation of the system but is easily derivable from the rules of Fig.
1.
IV.
Soundness and completeness The system N(UB) is sound and (weakly) complete with respect to the semantics of Section II, as can be shown by adapting standard proof techniques for labeled natural deduction systems.
Theorem 5 (Soundness) For every set I of labeled and relational formulas and every labeled formula x : A, it holds that I N(UB) x : A a I |= x : A.
Proof (sketch): The proof proceeds by induction on the structure of the derivation of x : A.
The base case is when x : A a I and is trivial.
There is one step case for every  1 Note that in these rules we use rwdZs as auxiliary formulas in order to derive lwdZs.
Rules treating rwdZs as full-dZedged dZrst class formulas, which can be assumed and derived, could also be dedZned in the style of [15].
47 40  [x : A. aaL] .. .
y :aL aLE x:A  [x :.
A] .. .
x:B aI x:AaB  [xRa y] .. .. y : A xRz aI x : aA  x : aA  [xRy] .. .. y : A xRz aI x : aA  [xR.a x] .. .
xRz y : A redZ y:A [x a1 z]  [z 2 w] [z : A] .. .. w:A inda  xRa y  x:A  x:AaB x:A aE x:B  x r(x, A)a y aE y:A  [xRa y] .. .. xRy z : A base z:A  y:A  [x a y] .. .. y:A aI x : aA  x : aA xRa y aE y:A  x : aA  x r(x, A) y aE y:A  [xR.
a z] .. .
a yR z w : A trans w:A  xRa y  xRa1 y  [x a y] x:A  [x  y] .. .. z:A ser z:A  x r(x, A)a w w:A  [x r(x, B) y] .. .. z : A ser sk z:A  [x .
a z] .. .
a yR2 z w : A comp w:A  [y r(y, A) z] [y : A] .. .. z:A inda  In aI (respectively aI, aI), y is fresh, i.e., it is didZerent from x and does not occur in any assumption on which y : A depends other than the discharged assumption x a y (respectively xRa y, xRy).
Moreover, in aI,  is fresh, i.e., it does not occur in any assumption on which y : A depends other than the discharged assumption x a y.
In ser, y and  are fresh, i.e., they do not occur in any assumption on which z : A depends other than the discharged assumption x  y; y is didZerent from z.
In sersk , y is fresh, i.e., it is didZerent from x and z and does not occur in any assumption on which z : A depends other than the discharged assumption.
In comp,  is fresh, i.e., it is didZerent from R1 and R2 and does not occur in any assumption on which w : A depends other than the discharged assumption x a z.
In inda, z, w, 1 and 2 are fresh, i.e., they are didZerent from each other and from x, y and R, and do not occur in any assumption on which w : A depends other than the discharged assumptions of the rule.
In inda, y, z and  are fresh, i.e., they are didZerent from each other and from x and w, and do not occur in any assumption on which z : A depends other than the discharged assumptions of the rule.
Figure 1.
[x : aA]1 [x r(x, A)a x]3 aE [x r(x, A) w]2 x:A redZ3 x:A sersk 2 x:A  The rules of N(UB)  [x : aA]1 [x r(x, A)a z]8 aE [x r(x, A)a y]7 [y r(x, A)a z]6 z:A trans8 5 [xr(x, A)y] z:A base7 z:A [x r(x, A) w]4 aI 6 y : aA x : aaA sersk 4 x : aaA aSSI x : A aSS aaA aI 1 x : aA a (A aSS aaA) [x : a(A a aA)]1 [x a y]5 aE y : A a aA y : aA  2  [x : A]  a  [x r(x, A) w]  4  [y : A]5 z:A  w:A  aE  [y r(y, A) z]5  aE  inda5  x : aA sersk 3 x : aA aI 2 x : A a aA aI 1 x : a(A a aA) a (A a aA)  Figure 2.
Derivations of the labeled versions of (E2) and (E4)  48 41  [x r(x, A) v]3  aI 4  [x r(x, A) w]4  aI 5  Theorem 6 (Weak completeness) For every UB formula A and x a LS , it holds that |= x : A a N(UB) x : A.  rule; we show here two representative cases as the other ones follow in a similar way.
Consider the case when the last rule applied is aI:  Proof (sketch): We prove the thesis by showing that N(UB) is complete with respect to the axiomatization H(UB), which is known to be sound and complete for the logic UB [1].
In other words, we need to prove that: (i) (the labeled versions) of all of the axioms of H(UB) are provable in N(UB) and (ii) N(UB) is closed under the (labeled equivalent of the) rules of inference of H(UB).
Showing (ii) is straightforward and we omit it here.
As for (i), see the derivations that we have given for the labeled versions of two of the axioms in Fig.
2; the other axioms follow similarly.
[xRa y] I  y : A xRz aI x : aA  where I  is a proof of y : A from hypotheses in I2 = I1 aS {xRa y} for some set I1 of formulas, with y fresh.
By the induction hypothesis, for each model M and interpretation I, if |=M,I I2 then |=M,I y : A.
We consider an I and a M = (S, R, V) such that |=M,I I = I1 aS {xRz}, and show that |=M,I x : aA.
Let I(x) = s and I(R) = Rb .
Since |=M,I I, we have |=M,I xRz, i.e., sRba I(z), b is a branch passing through s. Now let s  be an arbitrary successor of s along the branch b, i.e., sRba s  .
We can dedZne an interpretation I  such that I  (y) = s  and I  (I') = I(I') if I' fi y.
Since y is fresh and I  didZers from I only in the value assigned to     y, we have |=M,I I1 .
Moreover, |=M,I xRz and this implies   M,I  |= I2 .
By the induction hypothesis, |=M,I y : A, which   yields |=M,s A.
But since s  was arbitrary, we can conclude |=M,s aA, i.e., |=M,I(x) aA, and thus |=M,I x : aA.
Consider the case in which the last rule applied is inda: I   x:A  [x a y] a  x r(x, A) w w:A  V. Normalization The presence of rules inda and inda modeling an induction principle suggests an analogy with deduction systems for Peano arithmetic (e.g., [10], [14], [4]).
Although it can be proved that the standard subformula property does not hold for such systems, it is possible to consider forms of (even strong) normalization that allow us to obtain a purely syntactical proof of consistency.
In [6], where a labeled natural deduction system for the logic BCTLaa , i.e.
the until-free version of CTLa with a bundled semantics, is presented, the authors dedZne a normalization procedure based on the use of candidates of reducibility, from which, in analogy with systems for Arithmetic, they infer a proof of the consistency of the system.
We have been working on a full presentation of a normalization procedure for N(UB), which we expect to be able to obtain by imposing some restrictions on the system and by properly adapting the results in [6].
In this paper, we focus on the treatment of the most interesting cases, i.e., those involving the introduction of Skolem functions, which constitute the backbone of the full normalization proof.
Namely, we show how to dedZne a proper reduction rule for the case of a detour, i.e., an introduction immediately followed by an elimination of the same operator, involving the operator a (the case of a is analogous).
As we discussed in the introduction, aexistentiala operators are typically eliminated in an indirect way (see, e.g., the rule E shown in the introduction or the rule for elimination of a in natural deduction systems for dZrst-order logic [9]): a aparallela derivation is started where further assumptions providing a witness for the existential (e.g., the formulas xRy and y : A in E) are available; the conclusion of such a parallel derivation is then used as a conclusion of the elimination rule and we go back to the amaina derivation.
If we wanted to dedZne an elimination rule with a similar structure for a, the universal quantidZcation expressed by the linear-time operator  would require the possibility of assuming a rule (and not just a formula) in the parallel derivation, as allowed in the framework of higher-level natural  [y r(y, A) z] [y : A] I  z:A inda  where I  is a proof of z : A from hypotheses in I2 and I   is a proof of x : A from hypotheses in I1 , with I = I1 aS{x r(x, A)a w} and I2 = I1 aS{xa y, y r(y, A) z, y : A} for some set I1 of formulas.
By applying the induction hypothesis on I  and I   , we have: I2 |= z : A and I1 |= x : A.
We proceed by considering a generic model M = (S, R, V) and a generic interpretation I on it such that |=M,I I and showing that this entails |=M,I w : A.
Let I(x) = s. For   each R-successor s  of s such that |=M,s A, we can dedZne an interpretation I  such that I  (y) = s  and I  (z) is an Rsuccessor s   of s  along a aprivilegeda branch I  (r(y, A)) (that makes A hold in s   if A holds in s  ).
For the other labels, I  behaves as I.
By induction hypothesis on I , we      get |=M,s A and thus |=M,s A.
But s  is just an arbitrary   R-successor of s such that |=M,s A.
By induction, and by using the fact that in UB models it holds in general that if s1 Rb s2 and s2 Rb  s3 then there exists a Rb   such that s1 Rb   s3 , we can prove that |=M,s aA, i.e., |=M,I x : aA.
Since |=M,I I, we also have |=M,I xr(x, A)w. By DedZnition 3, we conclude |=M,I w : A.
The proposed system N(UB) consists of only dZnitary rules; consequently, it cannot be strongly complete for the logic UB, which does not enjoy compactness.
We can prove weak completeness, i.e., that for each valid formula of UB, we can derive in N(UB) the corresponding labeled formula.
49 42  [x : A aaL] .
.
.
.
y :aL, IL aLE N x : A, IL  [x : A] .
.. .
x : B, IL aIN x : A a B, IL  [xRa y] .
.. .
y : A, IL xRz aIN x : aA, IL  x : A a B, IL1 x : A, IL2 aE N x : B, IL1 aS IL2  [x a1 z] x : A, IL1  xRa y y : A, IL1 aS IL2  [z 2 w] .. .. w : A, IL2  [xRa x] .. .
.
xRz y : A, IL redZN y : A, IL  [xRa z] .. .
.
xRa y yRa z w : A, IL transN w : A, IL  [x a z] .. .. xRa1 y yRa2 z w : A, IL  [z : A]  indaN  x : aA, IL xRa y aE N y : A, IL  [xRy] .
.. .
y : A, IL xRz aIN x : aA, IL  x : aA, IL x r(x, A)a y aE N y : A, IL aS {r(x, A), {D1 , .
.
.
, Dn }}  [xRa y] .. .. xRy z : A, IL baseN z : A, IL  [x a y] .
.
.
.
y : A, IL aIN x : aA, IL  w : A, IL  compN  [x  y] .
.. .
z : A, IL serN z : A, IL  x : aA, IL x r(x, A) y aE N y : A, IL aS {r(x, A), {D1 , .
.
.
, Dn }} [x r(x, B) y] .. .. z : A, IL serskN z : A, IL \ ILD  [x a y] [y r(y, A) z] [y : A] .. .. z : A, IL2 x : A, IL1 x r(x, A)a w indaN w : A, IL1 aS IL2 aS {r(x, A), {D1 , .
.
.
, Dn }} \ ILD  In all the rules above, an assumption can be discharged only if the formula in the assumption does not occur in the context of the conclusion.
In aIN (respectively aIN , aIN ), y is fresh, i.e., it is didZerent from x and does not occur in any assumption on which y : A depends other than the discharged assumption x a y (respectively xRa y, xRy).
Moreover, in aIN ,  is fresh, i.e., it does not occur in any assumption on which y : A depends other than the discharged assumption x a y.
In serN , y and  are fresh, i.e., they do not occur in any assumption on which z : A depends other than the discharged assumption x  y; moreover y is didZerent from z.
In aE N (aE N ), D1 , .
.
.
, Dn are the open assumptions on which x : aA, IL (x : aA, IL) depends.
In serskN , y is fresh, i.e., it is didZerent from x and z and does not occur in any assumption on which z : A depends other than the discharged assumption.
If the conclusion of the rule does not depend on any open assumption where r(x, B) occurs, then ILD represents any set of dependences of the form r(x, B), I for I a set of formulas; ILD is empty otherwise.
In indaN , z, w, 1 and 2 are fresh, i.e., they are didZerent from each other and from x, y and R, and do not occur in any assumption on which w : A depends other than the discharged assumptions of the rule.
In compN ,  is fresh, i.e., it is didZerent from R1 and R2 and does not occur in any assumption on which w : A depends other than the discharged assumption x a z.
In indaN , y, z and  are fresh, i.e., they are didZerent from each other and from x and w, and do not occur in any assumption on which z : A depends other than the discharged assumptions of the rule.
D1 , .
.
.
, Dn are the open assumptions on which x : A, IL1 and z : A depend other than the ones discharged by the rule itself.
If the conclusion of the rule does not depend on any open assumption where r(y, A) occurs, then ILD represents any set of dependences of the form r(y, A), I for I a set of formulas; ILD is empty otherwise.
Figure 3.
The rules of N(UBN )  where I a2 is obtained from I 2 by replacing each application xa y of y:A2 by a proper instance of I 1 .
deduction systems introduced in [12]2 , i.e.
a  x : aA z:B  y ] [ x y:A .. .. z:B  Instead of adding such higher-level rules, in N(UB) we rather prefer to instantiateaby means of Skolem functionsa the relations over which we quantify universally and dedZne a adirecta elimination rule for a (and a), because this instantiation allows us to model the induction step in the induction rule inda (which we would not be able to express if a was eliminated indirectly).
aESH  Inside the derivation of z : B, and only there, we are allowed to use a further rule that, given a fresh  and for any y such that x a y, concludes y : A.
A reduction for an aI/aESH detour is the following: [xRa1 w] I 1 w : A xR1 z aI x : aA z:B  [  This makes our normalization procedure a bit more involved.
In reducing a detours, we want to use the same idea seen with the rule aESH but, in order to do that, we need to identify, in our derivation, the subderivation that corresponds to the parallel derivation of the previous example.
In such a subderivation, we will replace the Skolem function involved in the elimination rule by the relation used to introduce a.
Further, as in the previous example, in such a subderivation, we will possibly reuse the derivation  xa2 y ] y:A  I 2 z:B  aESH  fi  I a2 z:B  2 Similarly, we might dedZne an indirect elimination rule for a and a by using Skolemization and the pattern of general elimination rules [8].
50 43  that introduced a (I 1 in the example above) in all the cases where the Skolem function was used in a signidZcant way, i.e., in applications of rules that specidZcally require the presence of a Skolem function.
However, such a replacement is justidZed only if all the assumptions of I 1 are still open in this subderivation.
While this requirement is satisdZed by construction in the case of indirect elimination rules, in our case we need to enforce it by introducing some restrictions on the applicability of rules.3 This leads us to dedZne a variant N(UBN ) of the system N(UB).
Some further terminology is required: aV aV aV  Since N(UBN ) only introduces restrictions on the applicability of the rules of N(UB), the soundness of N(UBN ) is a direct consequence of the soundness of N(UB).
Furthermore, one can show that all the N(UB) derivations of the axioms of H(UB) shown in Section IV are still legal in N(UBN ), thus proving that N(UBN ) is also complete (with respect to formulas with empty contexts).
We say that a derivation I  is pure if for all R a L+B \ LB , R does not occur in the conclusion nor in any open assumption of I .
When normalizing, we restrict to consider pure derivations.
Without loss of generality, we can assume that each pure derivation containing a detour aIN /aE N has the following form:  r(x, A), {D1 , .
.
.
, Dn }, where r(x, A) a L+B \ LB and Di is an lwdZ or a rwdZ for 1 a$?
i a$?
n, is a dependence; {D1 , .
.
.
, Dn }, where Di is a dependence for 1 a$?
i a$?
n, is a context; (D, IL), where D is a lwdZ and IL is a context, is a formula with context (for simplicity, we will often omit the parentheses).
D1 .
.
.
Dn [xRa y] I 1 y : A, IL xRx  aIN x : aA, IL [x r(x, A)a z] aE N z : A, IL aS {r(x, A), {D1 , .
.
.
, Dn }} I 2 w : B, IL  I 3  In N(UBN ), we reason on formulas with contexts, where the dependences in such contexts are used to keep track of which assumptions cannot be discharged along a derivation.
Namely, when eliminating a and a, we add in the context a dependence between the Skolem function introduced and the set of assumptions on which the eliminated formula depends.
Such a dependence will be removed from the context when all the assumptions where the Skolem function occurs have been discharged.
Inference rules are, of course, modidZed to account for contexts.
The full set of rules of the labeled natural deduction system N(UBN ) is given in Fig.
3.
We use aS to denote an operation on the syntax which, given two contexts IL1 and IL2 , corresponding to the sets of dependences I1 and I2 respectively, returns any context IL1 aS IL2 which corresponds to the set union of I1 and I2 .
Similarly, \ operates on contexts as the set-minus operator does on the corresponding sets of dependences.
The sideconditions of Fig.
1 still apply.
Moreover, in all the rules of N(UBN ), an assumption can be discharged only if the formula in the assumption does not occur in the context of the conclusion (and this highlights the main use of contexts).
The rules aE N , aE N and indaN introduce dependences, while serskN and indaN allow one to eliminate dependences from a context.
It is not didZcult to prove that  where I 2 is the smallest subderivation having z : A, IL aS {r(x, A), {D1 , .
.
.
, Dn }} as one of its assumptions and concluding with a formula (w : B, IL  ) such that IL  does not contain the dependence r(x, A), {D1 , .
.
.
, Dn } (such a I 2 exists since we deal with pure derivations).
The derivation above can be reduced to the following one: D1 .
.
.
Dn [xRa z] I 1 [z/y] z : A, IL[z/y] I a2 [R/r(x, A)] w : B, IL  I 3  where the assumption xRa z can be discharged by the application that discharges x r(x, A)z in I 2 (or by its transformation in I a2 , see below).
The idea is that, since R is the relation that made it possible to derive x : aA, we can safely replace any occurrence of r(x, A) by R itself.
However, a blind replacement of each occurrence of r(x, A) by R in I 2 does not necessarily give rise to a well-dedZned N(UBN ) derivation.
In particular, this is not the case if r(x, A) is used in I 2 in a signidZcant way, i.e., in an application of serskN , aIN or indaN .
In such cases, it is necessary to further modify the structure of I 2 by means of an iterative process whose result we denote by I a2 .
Such a process consists in: (i) replacing each application of serskN that uses r(x, A) as follows:  Theorem 7 N(UBN ) and N(UB) are equivalent.
The truth relation for formulas with contexts can be simply dedZned as: |=M,I (x : A, IL) idZ  |=M,I(x) A  [x r(x, A)x   ] I    v : C, IL   serskN v : C, IL   \ ILD  3 This  is similar to what is done in those systems for dZrst-order logic in which a rule of existential instantiation is used instead of existential elimination (see, e.g., [7]).
51 44  fi  xRx  I   a [R/r(x, A), x  /x   ] v : C, IL   [R/r(x, A)]  (ii) replacing each application of aE N that uses r(x, A) by an instance of I 1 as follows: I    x : aA, IL   xr(x, A)a v aE N v : A, IL   aS IL     fi  the use of Skolemization allows us to design proper rules even in the case when the nesting of operators with an existential and a universal nature (like a) makes it impossible to dedZne a standard natural deduction rule.
The treatment of the operator until is notoriously complex from a proof-theoretical point of view (see [5] for a detailed discussion).
In this paper, in order to simplify the presentation of our approach, we decided to focus on the until-free fragment of CTL.
In this section, we just give an insight of how the idea of Skolemization can be used also to express introduction and elimination rules for the temporal operators containing until.
Let us consider the operator aU (the operator aU can be treated similarly).
First, we recall the semantics of the operator:  xRa v I 1 [v/x] v : A, IL  (iii) replacing each application of indaN that uses r(x, A) by an instance of I 1 as in (ii).
Note that the contexts in the conclusions are in some cases didZerent in the derivations on the left and on the right.
However, we can show that such didZerences are not relevant, in the sense that dependences that are present on the left but not on the right cannot contain signidZcant restrictions for the derivation on the right; on the contrary, dependences on the right but not on the left can always be eliminated afterwards in I a2 .
With regard to (ii) and (iii), the fact that I 2 is the smallest subderivation concluding with a formula (w : B, IL  ) such that IL  does not contain r(x, A), {D 1 , .
.
.
, D n } ensures that all the assumptions D1 , .
.
.
, Dn on which the conclusion of I 1 possibly depends are not discharged in I 2 .
Thus I 1 can be safely reused inside I a2 , i.e., all the assumptions D1 , .
.
.
, Dn that were discharged by a rule application in I 3 in the original derivation can be also discharged in any copy of I 1 , in the reduced derivation.
An example of a reduction of a derivation containing an aIN /aE N detour is shown in Fig.
4.
In the derivation above, the aE N application concluding with z : A, IL1 opens a subderivation with a dependence for the Skolem function r(x, A).
Such a subderivation terminates with the application of serskN , which discharges all the assumptions containing r(x, A) and eliminates the corresponding dependences from the context.
The reduction replaces R for r(x, A) all along the subderivation.
The example also shows how the structure of the subderivation needs to be modidZed when it contains rules that use the Skolem function in a signidZcant way.
In particular, as an instance of case (ii) of the description above, the aE N application concluding with z : A, IL2 in the original derivation is replaced by a copy of the derivation concluding y : A (z : A after the substitution); while, as an instance of case (i) above, the application of serskN is removed in the reduced derivation and the assumption that was discharged by serskN is replaced by the assumption xRx  .
The contraction rule dedZned here for the case aIN /aE N can be seen as a key reduction step in the dedZnition of a complete normalization procedure, to be developed along the lines of the one presented in [6].
A full treatment is left for future work.
|=M,s a(AU B) idZ there exist an s-branch b and a t a b such that |=M,t B and for all v, sRba vRb t implies |=M,v A.
As we did in the cases of aE and aE, we can introduce Skolem functions of the form r(x, AU B) to denote a relation passing through x and such that AU B holds over the path represented by that relation.
Moreover, given a state x and a path b starting from x and such that AU B holds on b, we can use a similar mechanism to give a name to a state along b where B actually holds and such that A was always true before.
Such a name will be a function of three arguments: the state x, the relation R corresponding to b and the formula AU B; we will denote it w(x, R, AU B).
Rules for the elimination of aU will have the form: x : a(AU B) aUE1 w(x, r(x, AU B), AU B) : B  x : a(AU B)  x r(x, AU B)a y  y r(x, AU B)a w(x, r(x, AU B), AU B) aUE2 y:A  aUE1 creates a state, denoted w(x, r(x, AU B), AU B), where B holds.
aUE2 expresses the fact that in each state y, placed between x and w(x, r(x, AU B), AU B) along r(x, AU B), A must hold.
The corresponding introduction rule will have the form: [xRa z] xRa y  y:B x : a(AU B)  [zRa y] .
.
.
.
z:A aU I  where z is required to be fresh.
The rules above show that the use of Skolem functions gives us also enough expressivity to capture the semantics of temporal operators based on U.
This paves the way to an extension of the system N(UB) able to cover full CTL.
A complete treatment is left for future work.
VI.
Towards CTL The framework based on the use of path labels and Skolemization, described in the previous sections for the logic UB, can be adapted to cover the whole class of Peircean branching-time logics.
In particular, the use of path labels allows us to reason on path quantidZers in a modular way and  VII.
Conclusions DidZerent labeled natural deduction approaches for Peircean branching-time logics have been proposed, e.g., in [2], [11].
52 45  [x : aA aSS aA]1 aSSE N x : aA y:A  [xRa y]5  aE N  [xRx  ]2  x : aA  aIN5  z : A, IL1  [x : aA aSS aA]1 aSSE N x : aA z:A  [x : aA aSS aA]1 aSSE N x : aA [x r(x, A)a z]4 aE N aE N z : A, IL2 aSSIN z : A aSS A, IL x : a(A aSS A), IL serskN 3 x : a(A aSS A) serN 2 x : a(A aSS A) aIN1 x : (aA aSS aA) a a(A aSS A)  [x r(x, A)a z]4  [xRa z]4  [x r(x, A) x   ]3  aIN4  [x : aA aSS aA]1 aSSE N x : aA [xRa z]4 aE N aE N z:A aSSIN z: AaSSA [xRx  ]2 aIN4 x : a(A aSS A) serN 2 x : a(A aSS A) aIN1 x : (aA aSS aA) a a(A aSS A)  where IL1 = {r(x, A), {x : aA aSS aA, xRx  }}, IL2 = {r(x, A), {x : aA aSS aA}} and IL = IL1 aS IL2 .
Figure 4.
An example of a contraction of a aI/aE detour: the derivation above reduces to the one below  Both focus on the logic CTL, although [11] presents a set of operators didZerent from the standard one.
In [11], normalization is proved for the subsystem obtained by removing rules for induction, while in [2] there is no treatment of normalization.
In our approach, the use of Skolemized accessibility relations has allowed us to give a sound and complete labeled deduction system for the Peircean logic UB, and set up a proof of how derivations in our system may reduce to a normal form using an appropriate management of so-called proof contexts.
Moreover, this approach is open to extensions: we have discussed the extension required to capture full CTL and, consequently, the whole class of Peircean branching temporal logics.
All these issues will be discussed in detail in future work.
[5] A. Masini, L. ViganoE, and M. Volpe.
Back from the future.
JANCL, 20(3):241a277, 2010.
[6] A. Masini, L. ViganoE, and M. Volpe.
Labelled natural deduction for a bundled branching temporal logic.
J. Log.
Comput., 21(6):1093a1163, 2011.
[7] G. Mints.
Existential instantiation and strong normalization.
In LFCS, LNCS 1234, pp.
258a265.
Springer, 1997.
[8] S. Negri and J. von Plato.
Structural proof theory.
Cambridge University Press, 2001.
[9] D. Prawitz.
Natural Deduction: a Proof-Theoretical Study.
Almquist and Wiskell, 1965.
[10] D. Prawitz.
Ideas and results in proof theory.
In Second Scandinavian Logic Symposium, pp.
235a307.
North-Holland, 1971.
Acknowledgments  [11] C. J. RenterAaEa and E. H. Haeusler.
A natural deduction system for CTL.
Bulletin of the Section of Logic, 31:231a240, 2002.
All three authors acknowledge support from the EU FP7 Marie Curie PIRSES-GA-2012-318986 project GeTFun: Generalizing Truth-Functionality; Carlos Caleiro also acknowledges support from FCT and EU FEDER via the project PEst-OE/EEI/LA0008/2013 of Instituto de TelecomunicacESSoEes.
[12] P. Schroeder-Heister.
A natural extension of natural deduction.
J. Symb.
Log., 49(4):1284a1300, 1984.
[13] A. K. Simpson.
The Proof Theory and Semantics of Intuitionistic Modal Logic.
PhD thesis, School of Informatics, University of Edinburgh, 1994.
References [1] M. Ben-Ari, A. Pnueli, and Z.
Manna.
The temporal logic of branching time.
Acta Inf., 20:207a226, 1983.
[14] A. S. Troelstra.
Metamathematical investigation of intuitionistic arithmetic and analysis.
LNM 344.
Springer, 1973.
[2] A. Bolotov, O. Grigoriev, and V. Shangin.
Natural deduction calculus for computation tree logic.
In John Vincent AtanasodZ Symposium, pp.
175a183.
IEEE Computer Society, 2006.
[15] L. ViganoE.
Labelled Non-Classical Logics.
Kluwer, 2000.
[3] D. M. Gabbay.
Labelled Deductive Systems.
Clarendon, 1996.
[4] J.-Y.
Girard.
Proof Theory and Logical Complexity, volume 1.
Bibliopolis, 1987.
53 46