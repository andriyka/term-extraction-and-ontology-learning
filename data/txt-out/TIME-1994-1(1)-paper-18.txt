A temporal structure that distinguishes between the past, present, and future Andre Trudel  Jodrey School of Computer Science Acadia University Wolfville, Nova Scotia, Canada, B0P 1X0  Abstract  We present a two dimensional temporal structure that has an ever changing present.
Relative to each present, there is a past and future.
The main representational advantage our two dimensional structure has over traditional linear temporal structures is the ability to record when knowledge is added or updated.
We dene a rst order logic that has this structure as its temporal ontology.
1 Introduction  Most temporal rst order logics in Articial Intelligence have a linear (i.e., non-branching) temporal ontology.
Examples of logics with a linear structure are those of Allen 1], Kowalski 4], and Shoham 6].
Even the logic of McDermott 5] uses linear time: Note that, contrary to what is often stated, McDermott's system does not use branching time: time itself is represented by the linear ordering of the real numbers branching only occurs with respect to the totality of possible states ordered by date.
(2], p. 1178) Linear time has its drawbacks.
There is no distinguised element in the ontology to represent the present.
Consequently, there is no concept of a past or future.
Another drawback is that a linear time based logic represents the current state of aairs.
There is no record of when knowledge is obtained or updated.
Humans do not view time as being linear.
Instead, we neatly compartmentalize time into the past, present, and future.
As the present changes, so does the past and future.
For example, we are continually learning things about our past and revising our future plans.
We present a two dimensional temporal structure that captures some of our intuitions about the past, present and future.
It has an ever changing present, and a past and future relative to each present.
We then formally dene a rst order logic that has this structure as its temporal ontology.
2 Proposed logic  Each predicate has two temporal arguments.
For example, red(1,1,house) and alive(5,10).
The two temporal arguments do not specify an interval.
For example, alive(5,10) is not used to represent the fact that alive is true over the interval (5,10).
Instead, the two temporal arguments are cartesian coordinates.
The relation alive(5,10) species that alive is true at the point (5,10) on the cartesian plane.
The temporal ontology consists of a cartesian plane.
The line y = x is used to represent the actual state of the world.
Relative to any point (p p) on the line y = x the line segment fy = x x > pg represents the actual future, fy = x x < pg represents the actual past, fy = p x > pg represents the expected future, and fy = p x < pg represents the perceived past (see gure 1).
What an agent observes or experiences at time p is recorded at the point (p p): Any plans or expectations the agent may have about the future at time p is recorded on the line fy = p x > pg: Similarly, any knowledge the agent learns or is given about the past at time p is recorded on the line fy = p x < pg: On the diagonal line y = x we record what actually happens in the world.
For example, in gure 2 the house is red at time 10 (i.e., red(10,10)).
At time 10, we plan to paint the house white at time 20 (i.e., white(20,10)).
But for some unforeseen reason, the house gets painted earlier at time 15 (i.e., white(15,15)).
We also know that at time 2, the house is white (i.e., white(2,2)).
At time 10, we learn that the house was blue at time 5 (i.e., blue(5,10)).
Note that blue(5,10) records two items of information.
The rst is that the house is blue at time 5, and the second is that this fact was recorded (learned) at time 10.
Formulas along a vertical line need not be consistent.
Figure 3 shows a situation where at time 10 we plan to go to the movies at time 15 (i.e., movies(15,10)).
But at time 15, something comes up that prevents us from going to the movies (i.e., not movies(15,15)).
Also, at time 5 we thought the house had been painted red at time 2 (i.e., red(2,5)).
We later learn at time 10 that the house was not red at time 2 (i.e., not red(2,10)).
The x and y axes of the cartesian plane must be linear and of the same type.
No further restrictions  6 y perceived past        past     x      future y=x   expected   (p,p)  future  x  -  Figure 1: The dierent pasts and futures relative to (p,p)  6  white(15,15)x   y blue(5,10)  x    x     x       x   red(10,10)   white(20,10)   white(2,2) x  -  Figure 2: Colors of a house over time  6  not movies(15,15)  y not red(2,10)  x  red(2,5)  x                    x      x  movies(15,10)  x Figure 3: Inconsistent information  -  19  6  15                       .h    .
.
nancing(19,(15,19)) .
.
.h .
.
.
.h  university((19,23),15) 19  23  -  Figure 4: Intervals are placed on the axes.
They can be discrete, dense, points, intervals, points-intervals, etc.
If intervals are allowed, they appear as one of the temporal parameters.
For example, in gure 4 a 15 year old student plans to attend university between the ages of 19 and 23 (i.e., university( (19,23), 15)).
Also, between the ages of 15 and 19 the student believes that nancing will be in place when entering university at age 19 (i.e., nancing(19, (15,19) )).
Although the examples in this paper only use the north-east corner of the cartesian plane, the whole plane can be used to represent information.
We conclude with an outline of the syntax and semantics for the proposed logic.
2.1 Syntax The logic has two disjoint sorts called temporal and non-temporal.
All terms are sorted.
Predicates have 2 temporal arguments followed by m  0 non-temporal arguments.
Terms and well formed formulas are dened in the standard fashion.
2.2 Semantics An interpretation is a tuple hT U i where T is a non-empty temporal universe, U is a non-empty nontemporal universe, and  is an interpretation function which maps each temporal constant to an element of T, each non-temporal constant to an element of U, each n-ary temporal function to an n-ary function from T n to T , each n-ary nontemporal function to an n-ary function from U n to U, and each (2 m)ary predicate to an (2 m)-ary predicate on T 2  U m .
Quantied variables range over the appropriate universe.
Well formed formulas are interpreted in the usual fashion.
3 Examples  3.1 Leave lights on  Information recorded on the line y = x may later be discovered to be false.
For example in gure 5, the driver of the car believes that he shut o the headlights when he left the car at time 5.
Upon returning to the car at time 20, he discovers the battery is dead.
He then checks the light switch and it is in the \on" position.
Therefore, the lights were not shut o at time 5.
3.2 Course  The proposed logic can be used to model an agent's changing expectations or beliefs over time.
For example, assume a course starts at time 5 and ends at the end of the term at time 25.
At the start of the course, the student believes he will pass (see gure 6).
At time 10, the student does very poorly on the rst assignment and thinks he will not pass the course.
The student does very well on the midterm at time 15 and now believes that he has a chance of passing.
But, the student does poorly on the second assignment at time 20 and once again believes he will fail.
The story has a happy ending.
The student aces the nal exam and passes the course.
3.3 Planning  Assume that at time 5, an agent constructs a plan to enter a room.
The plan consists of going to the door over the interval (5,10) (i.e., gtd( (5,10), 5)), opening the door over the interval (10,15) (i.e., od( (10,15), 5)), and then entering the room over the interval (15,20) (i.e., er( (15,20), 5)).
Note that we represent the plan along with the time that it was constructed.
The plan is shown in gure 7.
Over the interval (5,10), the agent excutes the rst action of the plan which is to go to the door.
Once at the  6 y    not lights-o(5,20)  x          x lights-o(5,5)          x  battery(20,20,dead)  x  -  Figure 5: Lights  6 y   nal(25,25) assgn2(20,20) x  midterm(15,15) x assgn1(10,10)  x begin(5,5) x             x pass(25,25) x x x x  not pass(25,20) pass(25,15) not pass(25,10) pass(25,5) x  -  Figure 6: Expectations of passing the course changes over time      6 10 5  .
gtd((5,10),(5,10)) .
.
.
   x door-locked(10,10) .  .x .
.
.
.
x .
.
.
.
x. .
.
.
.x  gtd((5,10),5) od((10,15),5) er((15,20),5)   -  5  10  15  Figure 7: Remembering a plan and re-planning  20  door, the agent observes that the door is locked which is unexpected.
The agent cannot execute the next action which is to open the door.
At this point, the agent must construct another plan which would be stored on the line fy = 10 x > 10g: The old plan constructed at time 5 remains untouched.
It can be used as a guide while re-planning at time 10.
It can also be used to answer queries.
For example, if we ask the agent why he is at the door at time 10 without a key, the agent can examine the old plan and reply that he expected the door to be unlocked at time 10.
3.4 Multi-agents  The proposed temporal structure is two dimensional.
Additional dimensions can be added to the structure to represent and reason about multi-agent problems.
The addition of a third temporal parameter (i.e., (x y z)) allows us to represent individual knowledge of an agent and common knowledge.
Each agent is assigned a plane.
Information about the n'th agent is stored on the plane (x y n): Information that is common to all agents is stored on the plane (x y 0): For example, assume there are three agents, and all three know that block A is on block B at time 5: on(5,5,0, A,B).
Agent 1 also knows that A is on B at time 6: on(6,6,1, A,B).
At time 10, agent 2 plans to move block C on top of A over the interval (15,20): move((15,20),10,2, C,A).
Agent 3 knows that block A is red at time 7: red(7,7,3, A).
We could also have the situation where all three agents know a fact, but don't realize it is common knowledge (i.e., not contained on the 0'th plane).
For example, each agent has local knowledge that block B is blue at time 10: blue(10,10,1, B), blue(10,10,2, B), blue(10,10,3, B).
Each agent does not know that the other 2 agents also have the information that B is blue at time 10.
Instead of assigning a plane to each agent, we can add a fourth temporal parameter to the structure and assign a cube to each agent.
In agent i's cube (i.e., (x y z i)), information agent i has about agent n is stored on the n'th plane (i.e., (x y n i)), and i's personal information is stored on plane i (i.e., (x y i i)).
For example, agent 1 knows that block B is blue at time 10, and also believes that agent 2 has this information: blue(10,10,1,1, B), blue(10,10,2,1, B).
Information common to all agents is stored on the plane (x y 0 0): A fth dimension can be used to represent groups of agents.
Each group consists of one or more agents.
Information about group n is stored using (x y z a n): The rst four parameters are used to store information about a particular agent in group n: For example, information about the third agent in group 2 is stored in (x y z 3 2):  Other dimensions can be added as needed.
4 Persistence  If the house is blue at time 10, is it also blue at time 15?
Given no knowledge of the house changing color, it seems reasonable to assume that the color of the house persists from time 10 to 15, and we conclude the house is blue at time 15.
This is called the persistence problem.
Traditional linear temporal structures only need to deal with persistence along a single axis.
Here, we must consider two dimensional persistence.
In gure 8, the house is blue at time 10 (i.e., blue(10,10)).
As discussed above, persistence should be allowed into the future (i.e., along the line fy = 10 x > 10g).
Using a similar argument, persistence into the past should also be allowed (i.e., along the line fy = 10 x < 10g).
For example, if the house is blue at time 10, it was probably also blue at time 9.
We also need persistence in the upward direction (i.e., along the line fy > 10 x = 10g).
For example, at the point (11,11), we should remember that the house was blue at time 10 (i.e., blue(10,11)).
Upward persistence models the agent's memory.
We do not allow persistence in the downward direction.
The relation blue(10,10) also records the fact that the color of the house was learnt at time 10.
Therefore at time 9, we have no informationabout the color of the house (i.e., the truth value of blue(10,9) is unknown).
To summarize, we have horizontal bi-directional persistence and vertical upward persistence.
Persistence is not allowed in the vertical downward direction.
In either of the three directions where persistence is allowed, standard algorithms can be used.
Problems arise when vertical and horizontal persistence are inconsistent.
For example in gure 9, at time 20 we know the house was not blue at time 5, and at time 15 we know the house was blue at time 10.
At time 20, was the house blue at time 10 (i.e., is blue(10,20) true)?
Using horizontal persistence and not blue(5,20) we can conclude not blue(10,20).
We can also conclude the opposite using vertical persistence and blue(10,15).
Which answer do we prefer?
The preference between vertical and horizontal persistence depends on the particular situation.
In this case, either answer is reasonable.
In the future, we will investigate algorithms for resolving persistence conicts.
5 Conclusions  We presented a general rst order logic that has a unique two dimensional temporal structure.
The structure consists of a cartesian plane.
The present moves along the line y = x: At any point on the line y = x we can record plans or expectations about the future, and information about the past or present.
The proposed temporal structure has the appearance of being a branching one.
But, it is not.
Time  yes  6  6  y yes fi  x  - yes  no x  -  Figure 8: The persistence of blue(10,10)  6 y  not blue(5,20)  x  - x(10,20) 6 x  blue(10,15) x Figure 9: Vertical and horizontal persistence are inconsistent  -  moves along the single line y = x: The branches emanating from each point on the line y = x are used to store information about the past or future obtained at that point in time.
The main representational advantage our two dimensional structure has over traditional linear temporal structures is the ability to record when knowledge is added or updated.
For example, simple English sentences like \Last night I planned to go to the movies tonight, but now I don't feel like going" cannot be represented using a linear structure.
A linear structure can either represent the fact that the person is going to the movies or not.
It cannot represent the fact that going to the movies tonight was true yesterday and false today.
The sentence is easily represented in the proposed logic: movies(tonight yesterday) ^ not movies(tonight tonight): Instead of using the proposed logic, it is possible to extend the syntax and semantics of traditional linear time logics so that they use a two dimensional structure.
For example, RGCH 3] uses the real numbers.
We can easily add another temporal argument to the logic.
Acknowledgements  Thanks to Denis Gagne for discussing the material contained in this paper.
Research supported by Natural Sciences and Engineering Research Council of Canada grant OGP0046773.
References  1] J.F.
Allen.
Towards a general theory of action and time.
Articial Intelligence, 23(2):123{154, 1984.
2] A. Galton.
Reied temporal theories and how to unreify them.
In 12th International Joint Conference on Articial Intelligence, pages 1177{1182, Sydney, Australia, 1991.
3] S.D.
Goodwin, E. Neufeld, and A. Trudel.
Temporal reasoning with real valued functions.
In  Pacic Rim International Conference on Articial Intelligence (PRICAI'92), pages 1266{1271,  Seoul, Korea, Sept 1992.
4] R.A. Kowalski and M. Sergot.
A logic-based calculus of events.
New Generation Computing, 4:67{95, 1986.
5] D.V.
McDermott.
A temporal logic for reasoning about processes and plans.
Cognitive Science, 6:101{155, 1982.
6] Y. Shoham.
Temporal logics in AI: Semantical and ontological considerations.
Articial Intelligence, 33:89{104, 1987.