Ultimately Periodic Simple Temporal Problems (UPSTPs) Jean-FrancESSois Condotta 1  GeErard Ligozat 2  Mahmoud Saade 1  Stavros Tripakis 3  1  CRIL-CNRS, UniversiteE daArtois, Rue de laUniversiteE, 62307 Lens, France 2 LIMSI-CNRS, UniversiteE de Paris-Sud, 91403 Orsay, France 3 VERIMAG, Centre EEquation, 2, avenue de Vignate, 38610 Gieres, France {condotta,saade}@cril.univ-artois.fr, ligozat@limsi.fr, tripakis@imag.fr Abstract  In this paper, we consider quantitative temporal or spatial constraint networks whose constraints evolve over time in an ultimately periodic fashion.
These constraint networks are an extension of STPs (Simple Temporal Problems).
We study some properties of these new types of constraint networks.
We also propose a constraint propagation algorithm.
We show that this algorithm decides the consistency problem in some particular cases.
1 Introduction In many areas of Computer Science, in particular in ArtidZcial Intelligence, it is necessary to reason about temporal information.
Numerous formalisms for representing and reasoning about time with constraints have been proposed.
The constraint networks considered by these formalisms differ, on the one hand, in terms of the temporal entities represented by the variables: these entities can be temporal points, temporal intervals, durations or distances, for example; on the other hand, they differ in terms of the nature of the constraints they use: these constraints can be qualitative [1, 2, 3], metric/quantitative [4, 5] or both [6, 7, 8].
Simple temporal problems (STPs) [5] belong to the class of quantitative constraint networks.
They represent temporal entities by points on the line and allow to constrain the distances/durations between these points using numeric values specidZed by intervals.
It is well known that STPs can be  solved in polynomial time, which is one of the reasons why these constraint networks are very used.
On many occasions the STPs have been extended to dedZne more expressive constraint networks [9, 10, 11].
In this paper, we consider temporal quantitative constraint networks whose constraints evolve over time in a ultimately periodic fashion.
These constraint networks are extensions of the STPs and can be used to represent athe cyclic constraintsa dedZned by Tripakis [12] for example.
We call them ultimately periodic STPs (UPSTPs in short).
These networks, interpreted in a spatial context, can be seen as temporalized STPs.
More precisely, consider a set of punctual objects on the line whose spatial locations change over time.
At each instant, an object has a given location.
Then a UPSTP makes it possible to express constraints on the relative locations of the objects over time, such as constraints which have to be satisdZed at each new occurrence of a particular time (periodic constraints), as well as constraints involving different instants.
In a temporal context, a recurrent activity or event can have a dZnite or indZnite number of occurrences over time.
In some applications these occurrences may have to satisfy a set of quantitative constraints on their relative durations.
A UPSTP allows to specify such constraints.
The goal of this paper is to study various properties of these networks.
We also propose a specidZc constraint propagation algorithm for UPSTPs.
We show that this algorithm decides the consistency problem in polynomial time for interesting particular cases.
The remainder of this paper is organized as follows.
Section 2 recalls some basic facts about  Proceedings of the Thirteenth International Symposium on Temporal Representation and Reasoning (TIMEa06) 1530-1311/06 $20.00 AS 2006  IEEE  STPs.
In Section 3 we introduce the ultimately periodic simple temporal problems (UPSTPs).
In Section 4 we relate the consistency problem for UPSTPs to the consistency problem for classical STPs.
Section 5 is devoted to the study of particular UPSTPs, namely closed UPSTPs.
A constraint propagation algorithm is proposed in Section 6.
Section 7 ends the paper with concluding remarks.
2 Preliminaries on STPs We denote the set of intervals on the line of rational numbers by INTQ .
These intervals can be dZnite or indZnite, and they can include or not their lower and upper bounds, if any.
In particular, this set contains the empty interval, denoted by a in the sequel.
Given two intervals I and J, aI denotes the interval opposite to I, i.e.
the interval deduced from I by the symmetry x a ax w.r.t.
the origin.
I aS J denotes the interval corresponding to the intersection of I and J, I + J is the sum of the intervals I and J, i.e.
the interval which is the union of all translated intervals i+J = {i+x | x a J}, for i a I.
Given an integer number c, c.I is the image of I under the transform x a c.x.
As an illustration, consider the intervals ] a a, 3] and ]1, 5] (this last interval corresponds to the rational numbers strictly greater than 1 and less than 5).
We have a]aa, 3] = [a3, +a[, a]1, 5] = [a5, a1[, ]aa, 3]aS]1, 5] =]1, 3], ]aa, 3]+]1, 5] =]aa, 8] and 2.
]1, 5] =]2, 10].
STPs [5] are binary quantitative constraint networks where the constraints involve distances between points on the line: Each constraint is dedZned by an interval which represents the admissible values for the distance between the two points involved.
All constraints of the STPs considered in this paper will be dedZned by intervals belonging to INTQ : DedZnition 1 A STP S is a pair (V, C) where:  Each variable vi represents a point on the rational line.
An interval C(vi , vj ) gives the admissible values for the distance (vj a vi ) between the two points represented by vi and vj .
A solution of a STP is formally dedZned in the following way: DedZnition 2 Let S = (V, C) be a STP.
aV An instantiation D of S is a map from V to Q associating to each variable vi of V a rational number D(vi ) (also denoted by Di ).
aV An instantiation D of S is a solution iff for all vi , vj a V , Dj a Di a Cij .
A STP is consistent iff it has a solution.
The consistency problem for STPs consists in determining, given a STP, whether it is consistent or not.
This problem is a polynomial problem.
A STP S = (V, C) is a subSTP of S  = (V  , C  ), which is denoted by S a S  , if V = V  and C(vi , vj ) a C  (vi , vj ) for all vi , vj a V (S a S  denotes the case where S a S  and for at least a pair of variables vi , vj a V we have C(vi , vj ) a C  (vi , vj )).
We will say that a STP S = (V, C) is PC-closed iff for all vi , vj , vk a V , C(vi , vj ) a C(vi , vk ) + C(vk , vj ).
It is well known that a PC-closed STP which does not contain the empty interval as a constraint is a consistent STP.
It is also globally consistent (each partial solution on a subset of variables can be extended to a solution).
Given a STP S, there exists a unique equivalent STP which is PC-closed; we denote it by PC(S).
Polynomial methods consisting in iterating the operation of triangulation: Cij a Cij aS (Cik + Ckj ) for each triple of variables vi , vj and vk until a dZx-point is reached are used to obtain this equivalent STP.
For example, we can use the algorithm P C1 [13] which only uses one main loop for STPs and whose complexity is hence 0(|V |3 ) for STPs.
Such a method will be generically called a pathconsistency method in the sequel.
aV V is a dZnite set of variables {v0 , .
.
.
, vna1 }, where n is a positive integer;  3 Ultimately Periodic Simple Temporal Problems  aV C is a map from V A V to INTQ , associating to each (vi , vj ) a V A V an interval C(vi , vj ) belonging to INTQ (also denoted by Cij in the sequel) such that C(vi , vi ) a [0, 0] (actually C(vi , vi ) can be [0, 0] or the empty interval) and C(vj , vi ) = aC(vi , vj ) for all vi , vj a V .
In a temporal context, a STP expresses quantitative constraints between a set of activities or events represented by points.
A STP can also be used in a spatial context to represent constraints on the relative positions of a set of punctual objects on the line.
Now we dedZne the main notion of this paper which  Proceedings of the Thirteenth International Symposium on Temporal Representation and Reasoning (TIMEa06) 1530-1311/06 $20.00 AS 2006  IEEE  we call ultimately periodic simple temporal problems or ultimately periodic STPs (UPSTPs in brief).
This new notion, interpreted in a spatial context, can be seen as a temporalized STP.
More precisely, consider a set of punctual objects on the line whose spatial locations may change over the time.
At each instant, an object has a given location.
With a UPSTP we can express three kinds of constraints: constraints between the locations of the objects at one given instant, constraints between the locations of the objects at different instants, constraints between the locations of the objects which have to be satisdZed at each instant following an initial instant.
We assume that time is modeled by the natural integers.
Hence, each integer t aL 0 corresponds to an instant in time.
In a temporal context, a recurrent activity or event can have a dZnite or indZnite number of occurrences over time.
In some applications these occurrences may have to satisfy a set of quantitative constraints on the durations between two of them.
A UPSTP allows to specify such constraints.
Formally, we dedZne an ultimately periodic STP in the following way: DedZnition 3 A UPSTP is a structure U (V, C, tmin , tmax ) where:  =  aV V = {v0 , .
.
.
, vna1 } is a set of n variables ; aV tmin and tmax are two positive integers such that tmin a$?
tmax ; aV C is a map from V A {0, .
.
.
, tmax } A V A {0, .
.
.
, tmax } to INTQ such that C(vi , ti , vj , tj ) = aC(vj , tj , vi , ti ) and C(vi , ti , vi , ti ) a [0, 0] for all vi , vj a V and ti , tj a {0, .
.
.
, tmax }.
The application C expresses explicitly the constraints between the locations of the different occurrences of the variables of V for the instants belonging to {0, .
.
.
, tmax }.
The map C also expresses constraints which have to be satisdZed at each future instant.
Indeed, the constraints given for the instants {tmin , .
.
.
, tmax } have to be also satisdZed on all future periods, i.e.
on each interval {tmin + i, .
.
.
, tmax + i} with i aL 0.
Intuitively, in a spatial context, each variable vi a V represents a point on the rational line whose location evolves over time.
The pair (vi , ti ), with ti a N, represents this location at time ti .
The constraint C(vi , ti , vj , tj ) constrains the distance between the point vi at time ti and the point vj  at time tj .
In a temporal context, the variable vi no longer represents the punctual spatial component of the object, but instead a recurrent activity or event.
The pair (vi , ti ) a V A N represents then the (ti + 1)th occurrence of the event represented by vi .
In accordance with the preceding interpretations, we dedZne a solution of a UPSTP in the following way: DedZnition 4 A solution D of a UPSTP U = (V, C, tmin , tmax ) is a map from V A N to Q such that, for all vi , vj a V and ti , tj a N : 1. if ti , tj a$?
tmax then D(vj , tj ) a D(vi , ti ) a C(vi , ti , vj , tj ) ; 2. if tmin a$?
ti a$?
tj and tj a ti a$?
tmax a tmin then for all ti , tj such that tmin a$?
ti a$?
min{tmax , ti } and tmin a$?
tj a$?
min{tmax , tj } and tj a ti = tj a ti we have D(vj , tj ) a D(vi , ti ) a C(vi , ti , vj , tj ).
We extend in an obvious way the notions of consistency and equivalence for ordinary constraint networks to the case of UPSTPs.
The following examples illustrate the preceding dedZnitions.
Example 1 In a spatial context, consider three objects O0 , O1 and O2 , whose spatial locations are represented by three variables v0 , v1 and v2 which stand for rational numbers.
Assume that the objects change positions over time with the following constraints: aV At time 0, O0 is left of O1 and is left of O2 at a distance comprised between 3 and 5; aV the location of O2 at time 0 is left of its location at time 1 ; aV at time 1, and for all future instants, O0 is right of O1 at a maximal distance of 10; aV after time 1, O0 moves left, and O1 moves right ; aV after time 2, O2 moves left and stays away O1 at a maximal distance of 4.
These constraints can be expressed by the UPSTP U = (V, C, tmin , tmax ), where V = {v0 , v1 , v2 }, tmin = 1, tmax = 3.
The constraints dedZned by C are represented in Figure 1.
As usual, the following constraints are not given: the constraint  Proceedings of the Thirteenth International Symposium on Temporal Representation and Reasoning (TIMEa06) 1530-1311/06 $20.00 AS 2006  IEEE  between a variable and itself, the universal constraint (] a a, +a[), the opposite constraint of a constraint which is already given.
This UPSTP U is a consistent UPSTP, a solution is depicted in Figure 1.
(d = 1 in the case where all bounds are indZnite).
Let U  = (V, C  , tmin , tmax ) be the UPSTP dedZned by C  (vi , ti , vj , tj ) = d.C(vi , ti , vj , tj ) for all vi , vj a V and ti , tj a {0, .
.
.
, tmax } .
Then U is consistent iff U  is consistent.
Example 2 Consider now two recurrent punctual events E0 and E1 represented by two variables v0 and v1 which stand for rational numbers.
Assume that the different occurrences of these events are constrained in the following way:  Proof Let D be a solution of U.
Let D  be a map from V A N to Q dedZned from D  (vi , ti ) = d(D(vi , ti ) a D(v0 , 0)) for all vi a V and ti a N. We can show that D  is a solution of U  .
Suppose now that a solution D  of U  is given.
By dedZning a map D from V A N to Q with D(vi , ti ) = (D  (vi , ti )aD  (v0 , 0))/d for all vi a V and ti a N we obtain a solution of U.
Because of this fact, we can assume without loss of generality that all UPSTPs have constraints whose dZnite bounds are integers.
aV for all i aL 0, the ith occurrence of E1 is always after the ith occurrence of E0 .
At least one second elapses between these occurrences.
aV For all i aL 0, at least two seconds elapse between the (i + 1)th occurrence and the ithe occurrence of E0 , exactly one second elapses between those of E1 .
These constraints can be expressed by the UPSTP U = (V, C, tmin , tmax ), where V = {v0 , v1 }, tmin = 0, tmax = 1.
The constraints dedZned by C are represented in Figure 2.
We leave it to the reader to check that this UPSTP is not consistent.
4 Implicit constraints versus explicit constraints In this section we relate the consistency problems for UPSTPs a which potentially express an indZnite number of constraints a to the consistency problems for the STPs.
In order to do this we take the following steps : 1.
We associate to each UPSTP a STP corresponding to its periodic constraints.
This STP is called the motif of the UPSTP.
Figure 2.
The constraints C of the UPSTP U of Example 2.
To close this section we show that the consistency problem of any UPSTP can be can be reduced (in polynomial time) to the consistency problem of a UPSTP whose constraints have either indZnite bounds, or bounds dedZned by integers: Proposition 1 Let U = (V, C, tmin , tmax ) be a UPSTP, and d be product of the denominators of the dZnite bounds 1 of the intervals dedZning C 1 We can assume without loss of generality that each value of a dZnite bound of a constraint is dedZned by a fraction p/q, where p is an integer and q is a strictly positive integer  2.
Based on the use of the motif, we dedZne a dZnite sequence of STPs awith increasing temporal supporta.
Each one of these STPs makes explicit the constraints of the UPSTP on a number of initial points in time.
We call them the strengthenings of the UPSTP.
3.
Finally, we relate the consistency problem of the UPSTPs to properties of its strengthenings.
We now proceed to implement these steps in detail.
The dZrst dZnite networks we consider are the motifs of the UPSTPs: DedZnition 5 Let U = (V, C, tmin , tmax ) be a UPSTP.
The motif of U, denoted by motif(U), is the STP Sm = (Vm , Cm ) where Vm = V A {0, .
.
.
, lg} (with lg = tmax a tmin ) and Cm ((vi , ti ), (vj , tj )) = C(vi , ti + tmin , vj , tj + tmin ) for all vi , vj a V and for all ti , tj a {0, .
.
.
, lg}.
Proceedings of the Thirteenth International Symposium on Temporal Representation and Reasoning (TIMEa06) 1530-1311/06 $20.00 AS 2006  IEEE  Figure 1.
The UPSTP U corresponding to Example 1 and a solution of U.
Figure 3.
The motif of the UPSTP U and its 4-strengthening.
In the sequel lg will denote the difference tmax a tmin .
The motif of the UPSTP U in Figure 1 is represented in Figure 3.
Using the notion of motif, we are going to dedZne a STP which, in some way, makes explicit constraints of a UPSTP which must be satisdZed during the (k + 1) dZrst instants (where k aL tmax ).
For such a k, the STP we dedZne is called the k-strengthening of the UPSTP.
Before giving a formal dedZnition, we describe them in an intuitive way.
Consider a picture representing the constraints of the UPSTP over the instants {0, .
.
.
, tmax }.
Imagine that a picture of the motif is drawn independently on a transparent sheet.
Given an integer number k aL tmax , we superpose the transparent sheet on the original picture, then we move this motif with a shift of one, then of two, and so on, until the instant k is reached.
Each time, we add the constraints of the transparent sheet to the existing ones (taking intersections).
Then the k-strengthening is the STP we get when reaching instant k. We now give a formal dedZnition: DedZnition 6 Let U = (V, C, tmin , tmax ) be a UPSTP and Sm = (V A {0, .
.
.
, lg}, Cm ) its motif.
Given an integer number k aL tmax , the kstrengthening of U, denoted by kastrenthening(U),  is the STP S k = (V k , C k ) dedZned recursively 2 by: aV V k = V A {0, .
.
.
, k}; aV C tmax ((vi , ti ), (vj , tj )) = C(vi , ti , vj , tj ) for all vi , vj a V and ti , tj a {0, .
.
.
, tmax }; aV for k aL tmax and for all vi , vj a V and ti , tj a {0, .
.
.
, k + 1} with ti a$?
tj , = aV C k+1 ((vi , ti ), (vj , tj )) C k ((vi , ti ), (vj , tj )), if ti < (k + 1) a lg and tj < k + 1, aV C k+1 ((vi , ti ), (vj , tj )) = C k ((vi , ti ), (vj , tj )) aS Cm ((vi , ti a ((k + 1) a lg)), (vj , tj a ((k + 1) a lg))), if ti aL (k + 1) a lg and tj < k + 1, aV C k+1 ((vi , ti ), (vj , tj )) = Cm ((vi , ti a ((k + 1)alg)), (vj , tj a((k+1)alg))), if tj = k+1 and tj a ti a$?
lg, aV C k+1 ((vi , ti ), (vj , tj )) =] a a, +a[, if tj = k + 1 and tj a ti > lg, aV C k+1 ((vj , tj ), (vi , ti )) C k+1 ((vi , ti ), (vj , tj )).
2 Firstly, we dedZne C k  from  Ck  IEEE  a  for k = tmax then, we dedZne C k+1 for an integer k aL tmax .
Proceedings of the Thirteenth International Symposium on Temporal Representation and Reasoning (TIMEa06) 1530-1311/06 $20.00 AS 2006  =  Figure 3 shows the 4-strengthening of the UPSTP U depicted in Figure 1.
In the sequel we also use the notion of window of a k-strengthening which is a STP capturing its constraints over (lg+1) consecutive time points: DedZnition 7 Let S k = (V A {0, .
.
.
, k}, C k ) the k-strengthening of a UPSTP U = (V, C, tmin , tmax ), with k aL tmax .
The twindow of S k , with tmin a$?
t a$?
k a lg, denoted by t a window(S), is the STP St = (Vt , Ct ) where: Vt = V A {0, .
.
.
, lg} and Ct ((vi , ti ), (vj , tj )) = C k ((vi , ti +t), (vj , tj +t)), for all vi , vj a V and ti , tj a {0, .
.
.
, lg}.
The end of S k corresponds to its last window, i.e.
its (k a lg)-window.
Figure 4 depicts the end of the 4-strengthening of Figure 3.
We give a last dedZnition before beginning the study of the interactions between the various consistency properties of the constraint networks previously introduced.
DedZnition 8 Let U = (V, C, tmin , tmax ) be a UPSTP and S k = (V A {0, .
.
.
, k}, C k ) its kstrengthening for an integer number k aL tmax .
A map D from V AN to Q is a solution of S k iff the restriction of D to V A{0, .
.
.
, k} is a solution of S k , i.e.
iff D(vj , tj ) a D(vi , ti ) a C k ((vi , ti ), (vj , tj )) for all vi , vj a V and ti , tj a {0, .
.
.
, k}.
A solution of a UPSTP provides solutions for its k-strengthenings moreover, a solution of all k-strengthenings corresponds to a solution of the UPSTP: Proposition 2 Let U be an UPSTP and a map D from V A N to Q.
The map D is a solution of the kastrenthening(U) for all k aL tmax iff D is a solution of U.
Notice that the consistency of each kstrengthening of a UPSTP does not imply, in the general case, the consistency of the UPSTP.
An counter-example is provided by the UPSTP represented in Figure 2: despite its non-consistency, we can dedZne a solution for each one of its k-strengthenings.
The dZnal proposition of this section can be straightforwardly proved using the dedZnitions of a k-strengthening and of its end: Proposition 3 Let U be a UPSTP.
For all k aL tmax , the STP end(kastrenthening(U)) is a subnetwork of motif(U).
5 The consistency problem for closed UPSTPs In this section we consider particular UPSTPs, namely, closed UPSTPs.
We have shown that the consistency problem of these constraint networks can be reduced to the consistency problem of its tmax -strengthenings and hence is aeasya to solve.
In the following section we will introduce a constraint propagation algorithm aiming to transform any UPSTP into a closed UPSTP.
Before dedZning the property of closure for a UPSTP we introduce an operation called the translation operation.
From the motif of a UPSTP, the translation operation gives a STP whose constraints are the constraints of the motif on which are superposed the constraints which must be satisdZed on athe next perioda (those that must be satisdZed at the next instant by shifting by one the constraints of the motif).
This operation is used by Tripakis [12] in the framework of periodic constraints which can be expressed by a UPSTP U = (V, C, tmin , tmax ) where tmin = 0 and tmax = 1.
Formally, we dedZne the translation operation in the following way: DedZnition 9 Let S = (V  , C) be a STP with V  = V A {0, .
.
.
, max} (where V is a dZnite set {v0 , .
.
.
, vm } and m, max aL 0).
The translation of S, denoted by translation(S), is the STP Str = (Vtr , Ctr ) where Vtr = V  , and for all vi , vj a V and for all ti , tj a {0, .
.
.
, max}, Ctr ((vi , ti ), (vj , tj )) = C((vi , ti ), (vj , tj )) aS C((vi , ti a 1), (vj , tj a 1)) if ti > 0 and tj > 0, and Ctr ((vi , ti ), (vj , tj )) = C((vi , ti ), (vj , tj )) else.
The translation of the motif depicted in Figure 3 is represented in Figure 4.
We extend the notion of PC-closure and translation to UPSTPs in the following way: DedZnition 10 Let U = (V, C, tmin , tmax ) a UPSTP.
The PC-closure of U (resp.
the translation of U), denoted by PC(U) (resp.
translation(U)), is the UPSTP (V, C  , tmin , tmax ) where C  in the map from V A {0, .
.
.
, tmax } A V A {0, .
.
.
, tmax } to INTQ dedZned by: aV C  (vi , ti , vj , tj ) = C(vi , ti , vj , tj ) for all vi , vj a V and ti , tj a {0, .
.
.
, tmax } such that ti < tmin or tj < tmin , a = Cm ((vi , ti a aV C  (vi , ti , vj , tj )  Proceedings of the Thirteenth International Symposium on Temporal Representation and Reasoning (TIMEa06) 1530-1311/06 $20.00 AS 2006  IEEE  Figure 4.
The end of the 4-strengthening of the UPSTP U and the translation of motif(U).
tmin ), (vj , tj a tmin )) for all vi , vj a V a denotes and ti , tj a {tmin , .
.
.
, tmax }, where Cm the constraints of the PC-closure (resp.
the translation) of the motif of U.
Using these operations we can now dedZne the closure property: DedZnition 11 Let U = (V, C, tmin , tmax ) be a UPSTP.
The UPSTP U (resp.
the motif motif(U)) is closed iff U = PC(translation(U)) (resp.
iff motif(U) = PC(translation(motif(U))).
Concerning the closure property we have the following properties: Proposition 4 Let U be a UPSTP.
We have : U is closed iff motif(U) is closed ; U is closed iff U = translation(U) and U = PC(U) ; motif(U) is closed iff motif(U) = translation(motif(U)) and motif(U) = PC(motif(U)).
of end((k + 1)astrenthening(U)).
end((k + 1)a strenthening(U)) is a subnetwork of the STP motif(U) which is closed and hence PC-closed.
motif(U) is hence also globally consistent.
Hence we can extend the partial solution to a solution of motif(U).
Since the constraints concerning the instant lg are the same constraints for motif(U) and for end((k + 1)astrenthening(R)), this solution is also a solution of end((k + 1)astrenthening(U)).
This solution can be used to complete the solution D to obtain a solution of (k + 1)astrenthening(U).
A corollary of this theorem is the following result: Corollary 1 The consistency problem for closed UPSTPs can be solved in polynomial time; more precisely, it can be solved by applying the pathconsistency method on the tmax -strengthening of the UPSTP, which can be achieved in O((tmax a |V |)3 ).
We also have the following result: Proposition 5 Let U = (V, C, tmin , tmax ) be a closed UPSTP.
Let S k = (V A {0, .
.
.
, k}, Ck ) and N k+1 = (V A {0, .
.
.
, k + 1}, Ck+1 ) be the k-strengthening and the (k + 1)-strengthening of U, respectively, with k aL tmax .
The restriction of the map Ck+1 to V A {0, .
.
.
, k} A V A {0, .
.
.
, k} is the map Ck .
Now, we give a fundamental result about the consistency problem for closed UPSTPs.
Theorem 1 Let U = (V, C, tmin , tmax ) be a closed UPSTP.
Each solution of k a strenthening(U), with k aL tmax , can be extended to a solution of (k + 1)astrenthening(U).
Proof(sketch) Starting from a solution D of ka strenthening(U) we can extract a partial solution  6 The closure method for the UPSTPs In the previous section we have shown that the consistency problem of closed UPSTPs is a polynomial problem.
We will make use of this result, and introduce a constraint propagation algorithm which tries to transform an arbitrary UPSTP into an equivalent UPSTP which is closed.
This algorithm corresponds to the algorithm Closure (see Algorithm 1).
We will see that this algorithm is sound, in the sense that if the algorithm Closure terminates, then the resulting UPSTP is closed and equivalent to the initial UPSTP.
However, this algorithm is not complete; indeed, we will see that there are cases where the algorithm Closure cannot terminate.
In spite of this, we will characterize two particular interesting cases for which the algorithm  Proceedings of the Thirteenth International Symposium on Temporal Representation and Reasoning (TIMEa06) 1530-1311/06 $20.00 AS 2006  IEEE  Algorithm 1 Closure Compute the closure of UPSTP U (V, C, tmin , tmax ) 1: Do 2: U  := U 3: U := translation(U) 4: U := PC(U) 5: While (U = U  ) 6: return U  =  Closure is complete.
This algorithm uses the translation operation and the path-consistency method to compute the closure of a UPSTP.
As a dZrst step, we will show that this algorithm is sound.
The following proposition asserts the equivalence between a UPSTP and its transform under PCclosure and translation and hence allows us to assert that the algorithm Closure computes a UPSTP which is equivalent to the initial UPSTP: Proposition 6 The PC-closure of a UPSTP U and its translation are equivalent to U.
The algorithm Closure does not always terminate.
Indeed, consider the UPSTP represented in Figure 2 and apply the algorithm Closure to it.
We notice that this algorithm does not terminate and loops indedZnitely.
The resulting UPSTP after the ith loop of the algorithm Closure is shown in Figure 5.
Actually, the non termination of the algo-  Figure 5.
The resulting UPSTP after the ith loop of the algorithm Closure.
rithm Closure allows us to decide the consistency problem of the UPSTP, indeed we have the following property: Proposition 7 The non termination of the algorithm Closure on a UPSTP U implies the non consistency of the UPSTP U.
Proof In the case where the algorithm Closure loops indedZnitely, we can assert that there exists one of the intervals dedZning a constraint C(vi , ti , vj , tj ) of U which decreases indedZnitely by intersection.
This interval decreases at least by one (the dZnite bounds of the intervals are integer number) for each intersection.
This interval has necessarily a dZnite bound and an indZnite bound.
Indeed, in the contrary case C(vi , ti , vj , tj ) will become the empty interval.
Using these observations and from the fact that the algorithm Closure is sound, we can assert that it is not possible to dedZne a map D solution of U.
Indeed, for any distance D(vj , tj ) a D(vi , ti ) there exists a loop of the algorithm from which D(vj , tj ) a D(vi , ti ) a C(vi , ti , vj , tj ).
An open question is: in the general case, does exist a way to detect that the algorithm Closure will indedZnitely loop after a particular number of loops?
For particular kinds of constraints we are sure that this algorithm will terminate after a dZnite number of iterations.
For example, we can cite the two following particular cases: 1. the intervals used as constraints have uniquely dZnite bounds ; 2. the intervals used as constraints have indZnite bounds or dZnite bounds (open or closed) associated with the value 0.
For the dZrst kind of constraints, the number of iterations done by the algorithm Closure is bounded by m(|V | a (lg + 1))2 where m is the size of the largest interval.
This is a consequence of the fact that at each loop, at least one constraint decreases at least one unity.
Concerning the second type of constraints we can notice that the number of iterations is bounded by 3(|V | a (lg + 1))2 as each constraint can decrease at most three times.
The second kind of constraints is used to represent qualitative constraints stemming from formalisms such that the Allenas Calculus [1] or the point calculus [2].
Hence, the consistency problem for the UPSTPs with these two kinds of constraints is polynomial in time.
7 Conclusion In this paper, we have introduced the notion of ultimately periodic simple temporal problems (UPSTPs).
This notion allows to express (spatial or temporal) quantitative constraints which, after an initial period, evolve in a periodic way by  Proceedings of the Thirteenth International Symposium on Temporal Representation and Reasoning (TIMEa06) 1530-1311/06 $20.00 AS 2006  IEEE  repeating the same pattern that we called motif.
For this kind of constraint network, we propose a constraint propagation algorithm for deciding the problem of consistency.
In the general case, this algorithm is not complete.
Despite it, we showed that for particular interesting cases.
We are currently developing an implementation of this algorithm3 .
This work also opens new perspectives for future work.
One of them consists in the characterization of new cases where the consistency problem of the UPSTP is polynomial in time.
Another one consists in determining the class of complexity to which the consistency problem for UPSTPs belongs, and to dedZne algorithms allowing to solve it in the general case.
References [1] Allen, a.J.F.
: An interval-based representation of temporal knowledge.
In: Proc.
of the Seventh Int.
Joint Conf.
on ArtidZcial Intelligence (IJCAIa81).
(1981) 221a226 [2] Vilain, M., Kautz, H., Beek, P.V.
: Constraint propagation algorithms for temporal reasoning: A revised report.
Qualitative Reasoning about Physical Systems, Morgan Kaufmann, 1990 (1990) 372a381 [3] Navarrete, I., Marin, R.: Qualitative temporal reasoning with points and durations.
In: Proceedings of the 15th Inter.
Joint Conf.
on Artif.
Intel.
(IJCAIa97), San Francisco (1997) 1454a1459  Int.
Joint Conf.
on Art.
Intel.
(IJCAIa99).
(1999) 1259a1267 [8] Condotta, J.F.
: The augmented interval and rectangle networks.
In: Proceedings of the Seventh International Conference on Principles of Knowledge (KRa2000), Brekenbridge, USA.
(2000) [9] Gerevini, A., Cristani, M.: On dZnding a solution in temporal constraint satisfaction problems.
In: Proc.
of the Fifteenth Int.
Joint Conf.
on Art.
Int.
(IJCAIa97).
(1997) 1460a 1465 [10] Morris, P.H., Muscettola, N.: Managing temporal uncertainty through waypoint controllability.
In Thomas, D., ed.
: Proc.
of the 16th Int.
Joint Conf.
on Art.
Int.
(IJCAI-99-Vol2).
(1999) 1253a1258 [11] Broxvall, M.: A method for metric temporal reasoning.
In: Proc.
of the Eighteenth Nat.
Conf.
on Art.
Int.
(AAAI02).
(2002) 513a 518 [12] Tripakis, S.: Solving cyclic constraints.
In: Workshop on real-Time Constraints (RTCa99), Taipei, Taiwan (1999) [13] Mackworth, A.K., Freuder, E.C.
: The Complexity of Some Polynomial Network Consistency Algorithms for Constraint Satisfaction Problem.
ArtidZcial Intelligence 25 (1985) 65a74  [4] Koubarakis, M.: Dense time and temporal constraints with =.
In: Proc.
of the 3rd Int.
Conf.
on Princ.
of Knowledge Representation and Reasoning (KRa92).
(1992) 24a35 [5] Dechter, R., Meiri, I., Pearl, J.: Temporal Constraint Networks.
Art.
Int.
49 (1991) 61a 95 [6] Meiri, I.: Combining qualitative and quantitative constraints in temporal reasoning.
ArtidZcial Intelligence 87 (1996) 343a385 [7] Pujari, A.K., Sattar, A.: A new framework for reasoning about points, intervals and durations.
In Thomas, D., ed.
: Proc.
of the 16th 3 The  current implementation can be found http://www.cril.univ-artois.fr/azcondotta/upstp/.
at  Proceedings of the Thirteenth International Symposium on Temporal Representation and Reasoning (TIMEa06) 1530-1311/06 $20.00 AS 2006  IEEE