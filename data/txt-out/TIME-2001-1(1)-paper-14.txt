Hybrid Ockhamist Temporal Logic Patrick Blackburn INRIA, Lorraine Campus Scientifique, BP 239 Nancy, France patrick@aplog.org  Abstract We introduce hybrid Ockhamist temporal logic, which combines the mechanisms of hybrid logic with Ockhamist semantics by employing nominals, satisfaction operators, binders, and quantifiers over branches.
We provide a complete (with respect to bundled trees semantics) axiomatic system for the basic hybrid Ockhamist temporal logic (HOT) and for some of its extensions, including the full hybrid Ockhamist temporal logic.
The full system is expressively equivalent to the first-order logic over trees extended with branch quantifiers which was proved decidable by Gurevich and Shelah.
1.
Introduction Hybrid Ockhamist temporal logics combine two ideas well known in temporal logic: Ockhamist semantics and hybrid logic (not to be confused with the ahybrid systemsa which combine discrete transition systems with continuous dynamical systems).
Ockhamist semantics for temporal logic (see [16], [18], [19]) is based on the idea that while the future is nondeterministic (that is, events can take different courses) the actual future, which is bound to happen, is deterministic.
Formally, this means that, although the flow of time is a forward branching tree, when a formula is to be evaluated a possible aactual futurea is fixed (that is, a branch of the tree is selected) and the evaluation is done with respect to that branch.
Thus, a temporal model for Ockhamist semantics is a tree-like structure, the branches of which are the primitive entities with respect to which the formulae are evaluated, and the basic notion of truth of a formula is relative to a branch of the future, rather than an instant of time.
Ockhamist semantics is the underlying semantics of the branching time temporal logics of computation CTL and CTL (see [12], [17]).
Hybrid temporal (and modal) logic dates back to Prior  Valentin Goranko Department of Mathematics Rand Afrikaans University Johannesburg, South Africa vfg@na.rau.ac.za  ([16]) and Bull ([10]) and has been actively developed recently (see [6], Chapter 6 of [8], and www.hylo.net, the hybrid logic homepage, for more information).
Modern hybrid logic extends modal or temporal logic with various mechanisms for naming and quantifying over possible worlds or times, mechanisms such as nominals, satisfaction operators, binders, and quantifiers.
Such mechanisms increase the expressive power of the underlying temporal (or modal) logic in a natural way, and in many interesting cases their introduction does not raise the computational complexity (see [2]).
Moreover, hybrid logic has a number of relatives.
For example, it is closely related to description logic (see [1]).
In addition, a formalism called half-order modal logic, using freeze quantifiers to bind variables to the content of the current instant of evaluation, was independently introduced, developed, and applied to real-time logics by Alur and Henzinger (see [3], [15], [4]).
Freeze quantification is related to the binder used in some strong hybrid logics (we introduce such a system at the end of the present paper).
In a precursor of the present work, [9], Ockhamist temporal logic was extended with special variables (fan variables) ranging over sets of branches sharing the same beginning, and a difference operator on branches.
The idea of hybrid temporal logic with nominals and binders over paths was briefly discussed in [7].
The purpose of the present paper is to introduce, axiomatize, and study the basic hybrid Ockhamist temporal logic.
We first ahybridizea ordinary Ockhamist temporal logic by adding the basic referential tools of hybrid logic: nominals and satisfaction operators.
At the end of the paper we look at stronger systems: logics in which the underlying temporal formalism contains Until and Since operators, logics with the binder, and logics with path quantifiers.
2.
The basic hybrid Ockhamist propositional temporal logic HOT In this section we introduce the hybrid language we shall work with for most of the paper, and discuss two (equiva-  lent) semantics for it: the bundled tree semantics, and Ockhamist frame semantics.
2.1.
Syntax The language of HOT contains propositional logical connectives  ; temporal modalities   ; a modality fi for a possible alternative future; a denumerable set PV=fiAz fiA"    of propositional variables; a denumerable set BN= Az A"    of branch nominals; and a branch retriever (pointer) .
Formulas of HOT are defined recursively as follows:     fi               fi     We make use of the following defined operators:   	       ,  (sometime now or in this future);   	       ,  ( sometime now or in the past);       	 	  , sometime);   	          , path).
(in tree-like structures: (sometime along this time  Furthermore, by 	     and fi we denote the respective duals of    fi and 	   2.2.
Bundled trees and Ockhamist frames Not all branches in a tree are needed in order to give reasonable Ockhamist semantics, but sufficiently many of them must be considered.
Three conditions seem necessary for a family of branches to be regarded as large enough for the purpose (see [12]): (i) Every time instant must belong to a branch from the family; (ii) Every sub-branch of a branch from the family must belong to the family.
(iii) Every extension of a branch from the family must belong to the family.
Such a family of branches will be called a bundle, and the Ockhamist semantics will be defined on such bundles, considering the branches in them as primitive entities.
A complete bundle is a bundle containing all branches in the tree.
Complete bundles are obtained when a bundle is closed under limits of converging sequences of branches.
We now proceed with a formal exposition of Ockhamist semantics.
Definition 2.1 A tree  is a strict partial ordering 	  such that every node    has a linear set of  predecessors..
The least element of a tree, if it exists, is called the root, and then the tree is called rooted.
Definition 2.2 Let     be a tree.
A path in  is a maximal linearly ordered set of nodes.
A branch in  is any set of nodes of the type     and      for some path  and    The least node  of a branch  is the initial node of  denoted by  .
Thus, every branch is an upwards closed part of a path, with an initial node.
When  is rooted, every path is a (maximal) branch in   Definition 2.3 Let   be branches in a tree and    .
Then  is called a sub-branch of , and  is an extension of .
This we shall denote by    Note that  is a partial ordering on branches.
In particular, if    then A is the sub-branch of  with  A   .
If    then  is a proper sub-branch of , and  is a proper extension of , denoted by  fi  Two branches are called siblings if they have the same initial node.
Siblinghood is an equivalence relation on the set of branches in a tree, denoted by  .
We denote the set of all branches in a tree  by  .
Definition 2.4 (See [19]) A bundled tree is a pair    where  is a tree and  is a non-empty set of branches (called a bundle) in  closed under sub-branches and extensions and such that every node of  belongs to some branch from  .
A path in    is a path in  all of whose branches are in  .
Note that if some branch from the path is in the bundle, then all of them are there.
Thus a bundle consists of all branches along paths covering the nodes of the tree.
An equivalent structure to a bundled tree is an Ockhamist frame: a triple 	 fi  where  is a set, fi is a union of irreflexive linear orderings in   is an equivalence relation on  satisfying certain first-order definable conditions (see [19]).
The elements of an Ockhamist frame can be thought as branches in a bundle on a tree obtained by identifying the -equivalent points, defining  as the quotient-relation of fi.
Conversely, with every bundled tree one can associate the Ockhamist frame consisting of the branches in the bundle, with the relations defined as above.
Thus, as Zanardo has shown in [19], bundled trees and Ockhamist frames are interdefinable, hence equivalent as semantic structures.
2.3.
Ockhamist truth and validity in bundled trees We interpret our hybrid language in the following type of model:  Definition 2.5 A valuation on a bundled tree      is any mapping       such that for ,   is a singleton.
Hereafter we will be every  writing    instead of      A model is a pair   where  is a bundled tree and                            is a valuation in  .
Note that this definition is standard, save for the demand that branch nominals be interpreted by singleton sets of branches.
That is, in any model, branch nominals are true at a unique branch.
In effect, they anamea the unique branch they are true at a thus branch nominals are a simple modal mechanism for refering to branches.
We can now define (Ockhamist) truth of a formula in a model relative to a branch  in that model:                                            iff      , for any   for any   fi iff       fi  fi          ;     iff       implies      iff for some        iff for some  fi    fi iff for some         iff                   ;   ;  ;  ;  ;    As promised, the first clause of this definition guarantees that nominals are true at (and hence name) a unique branch in the model.
But note also the last clause.
The meaning  is: go to the branch named and of the construct see if  is true there.
That is, aretrievesa the value of and evaluates  at that branch.
In the hybrid logic literature, operators like are usually called satisfaction operators.
A formula is: (Ockhamist)-valid in a model if it is true at every branch of that model; (Ockhamist)-valid in a bundle tree if it is Ockhamist-valid in every model on that bundle tree; valid if it is Ockhamist-valid in every bundle tree.
2.4.
Ockhamist semantics and Kripke semantics  Apart from this formal analogy, a temporal Kripke frame 	  can be viewed as representing a time flow by regarding  either as a precedence relation between time instants (in which case it must be at least a partial ordering) or as a successor relation between consecutive instants in a discrete flow of time (in which case no assumptions on it need to be made).
The former interpretation is the traditional one in the classical framework of temporal logic, while the latter one is the interpretation in linear or branching time temporal logics of computations prominent in computer science.
The latter interpretation can be transformed into the former by taking the transitive closure of the successor relation as the one representing the precedence relation between instants.
We can therefore concentrate on the classical interpretation.
Given a temporal frame   	  with  being a (strict) partial ordering, a possible future of an instant    is a maximal linearly ordered set in       also called a branch in  stemming from  Now, let   be the set of all branches in   We can introduce a partial ordering on   by defining  fi if  fi (the idea being that the beginning of precedes the one of fi).
It is easy to see that the resulting structure is  bundle on the unwinding of  into a tree.
Thus, Ockhamist semantics can be introduced on any partial ordering, or even on any Kripke frame 	  by regarding the relation as a successor relation and unwinding.
3.
Axiomatic system for HOT 3.1.
Axioms for the modalities: (K) The K axiom for each of     (FP) The temporal axioms for         	  fi      (S5fi) The S5 axioms for fi (S5A) The S5 axioms for the universal modality fi fi  fi   fi  (@) The defining axiom for      Ockhamist semantics can be related to Kripke semantics in several ways.
First of all, one can formally consider bun3.2.
Axioms for the nominals: dle trees or Ockhamist frames just as Kripke frames for a 3modal logic with modalities   fi Save for the fact that the possible worlds in these frames in fact represent par- (NOM1)  ticularly structured sets of points (viz.
branches), the Ockhamist semantics is just a traditional Kripke semantics for (NOM2)       Ockhamist frames.
For detailed treatment of that approach (FUN@) Alternatively to the two above:     see [19].
3.3.
Axioms for the structure: (SI)  fi  	fi fi  fi  (TR)    (LP)   fi  (DP)  fi    fi fi  (DB)  (astronga irreflexivity);      (transitivity);  fi  	 fi  fi  	fi fi  fi  (linearity of paths); (determinacy of the past);  (distinguishability of branches);  For rooted trees we add:  5.
For each equivalence class of A  we select a representative (e.g.
the one with the least index) and let A  be the set of these representatives.
A  presents the generated by 	 submodel of the canonical model.
fi   iff  fifi  	 fi   iff  fi   	 7.
CLAIM 2:  is an equivalence relation.
8.
CLAIM 3:  (RT) 	      (root);    is a strict partial ordering.
fi   iff   Modus Ponens;  Necessitation (NEC) for each of 	        Uniform substitution (SUB) of formulas for variables and nominals for nominals.
   not occurring in   fi   for some nominal fi not occurring in  and   or fi  Theorem 3.2 The logic HOT is sound and complete for the bundle trees semantics.
Proof (sketch): 1.
Soundness is straightforward.
The completeness proof begins with a canonical model construction using special maximal HOT-theories .
These are maximal consistent sets closed under NAME and PASTE .
Standard lemmas, such as the Lindenbaum lemma, are provable for HOT-theories.
2.
Suppose the canonical model is now constructed.
Given a consistent formula  take a maximal HOTtheory 	 containing  .
3.
Define  A  fi if    fi    4.
CLAIM 1: A  is an equivalence relation on    fi   fi fi    fifi     for some fi  fi   for every    Remark 3.1 The following rule schema (PASTE) is derivable.
On A  define  10.
CLAIM 4: The following are equivalent:     for some nominal    Intuition: the elements of A  represents the nodes of a tree, and  is the precedence relation between them.
 NAME:     fifi  A    9.
Now: define A   3.4.
Rules of inference:  where  is     A    6.
Define for any fi  fi             there is a fi      fi  11.
CLAIM 5:  is a strict partial ordering on 	A   is a (rooted) tree.
such that  A   and  12.
Furthermore, with every fi  A  we associate a set  in A  as follows:                A  fi   for some      A  fi      13.
CLAIM 6:       fi  fi  	       is a branch in A      14.
Now we define    ifffifi   and  fi  .
Thus: 	A       fifi fi 15.
CLAIM 7:    fi  AA   A    fifi    fi  iff    is a bundle tree.
16.
Now, the canonical valuation A  on A A  fi    fi  	    A  fi      17.
CLAIM 8: (Truth lemma) for every formula fi    AA      iff  A        and     	  18.
Now the completeness follows immediately.
QED.
A general remark.
As we stated in Step 1 of the proof sketch, the basic idea of the completeness proof is to use a modal canonical model construction.
Nonetheless, note the heavy role played by the branch nominals in this proof a for example at Steps 3, 6, 9, 10, 12, 14 and 16.
In effect, the nominals and satisfaction operators allow us to build the desired model via its diagram (in the sense of first-order model theory).
So it would actually be reasonable to describe the previous proof as a amodal Henkin constructiona, where branch nominals play the role that would be played by constants in first-order logic.
As we shall now see, the fact that we know how to build amodal Henkin modelsa, or anamed modelsa, turns out to make life very simple when we examine what are called locally definable extensions of basic HOT logic.
4.
Some extensions of HOT We now examine three extensions of basic HOT logic.
The most important point to note is that the completeness proof just given extends to all three systems in a simple and uniform way.
Because the basic HOT logic contains all that is need to build amodal Henkin modelsa, the extended systems we shall now discuss get a afree ridea to completeness.
This is very unusual in modal logic, where enriching a logic with (say) Until and Since operators may mean that an entirely new completeness proof strategy has to be used.
given.
For as the canonical model is named, we can apply modus ponens and pull out the definitions of Since and Until, and these will enable the truth lemma to be proved.
Remark 4.1 This is a particular case of a more general phenomenon, viz locally definable operators (see [13]).
A new operator fi  where fi are tuples of variables, resp nominals, is locally definable in the hybrid language if fi such that there is a formula fi   fi  fi fi  This formula, added as an axiom preserves the completeness of the hybrid logic.
Remark 4.2 The full computation tree logic CTL can be considered as a particular case of the extension of the HOT logic with Until considered over -trees (i.e.
trees in which every path has the order type of ).
Indeed, the Nexttime operator is definable as usual by !
  "  and the path quantifier  is simply   4.2.
Adding binders.
So let us now add the standard hybrid binder .
This has the following semantics:      iff     where  is obtained from  by possibly modifying the valuation  in  to   as follows:          fi   fi for every fi    4.1.
Adding Since and Until.
The operators Since and Until have the following Ockhamist semantics:      	   iff for some       for every  such that                    iff for some       for every  such that              and    and  To axiomatize these operators in the HOT logic all we need is to the axioms:  fi  	 fi            	 fi           fi            Note that these axioms in a sense define the Since and Until operators at a named branch fi.
(To use the terminology introduced shortly, they locally define Since and Until).
It follows that the completeness proof remains unchanged, save for the additional clauses in the Truth lemma, corresponding to 	 and   And these are immediate consequences of the inductive hypothesis and the axioms just  fi  That is, binds a nominal to the current branch a so to speak, it creates a new branch name on-the-fly.
The introduction of the binder greatly increases the expressive power at our disposal.
However axiomatizing its logic leads to no extra work, for is locally definable by: ( )  fi  fi#        This formula axiomatizes completely over our basic HOT axiomatic system.
Furthermore, note that in the presence of every operator fi  locally definable by a formula fi fi becomes explicitly definable by  fi     fi  fi  Once again, we remark that the binder is related to the freeze quantifiers used in half-order modal logic, which was introduced, developed, and applied to real-time logics by Alur and Henzinger (see [3], [15], [4]).
The connections between hybrid logics equipped with the binder and halforder modal logic deserve further exploration.
4.3.
Adding branch quantifiers  [5] N. Belnap, Branching Space-time, 1992, 385-434.
If we are prepared to bind branch nominals, why not go the whole way and quantify across them?
In fact, the idea of quantifying over nominals has been around since the late 1960s (see [16, 10]).
Incidentally, [10] discusses a language in which nominals range over branches through time.
The universal quantifier over nominals in hybrid languages has the following semantic definition:  Synthese, 92,  [6] P. Blackburn, Representation, Reasoning, and Relational Structures: a Hybrid logic Manifesto, Logic Journal of IGPL, 8(3), 2000, 339-365.
[7] P. Blackburn and M. Tzakova, Hybrid Languages and Temporal Logic, Logic Journal of IGPL, 7(1), 1999, 27-54.
     iff     for every  obtained from  by possibly re-defining the valuation  in  on   [8] P. Blackburn, M. de Rijke, and Y. Venema, Modal Logic, Cambridge Tracts in Theoretical Computer Science, Cambridge University Press, 2001.
To cope with this addition, we enrich the basic HOT axiomatization as follows.
First we add the standard firstorder quantifier axioms:  [9] M. Brown and V. Goranko, An Extended BranchingTime Ockhamist Temporal Logic, Journal of Logic, Language and Information, 8(2), 1999, 143-166.
( )  ()                  fi#     for  not occurring in    for any nominal fi    We also add the standard first-order rule of generalization: if  is provable, so  .
Then, we add hybrid analogs of Barcanas formula: (Bar)   	  	  [10] R. Bull, An Approach to Tense Logic, Theoria, 36(3), 1970, 282-300.
  for 	    	      These axioms added to HOT+( ) axiomatize completely the full hybrid Ockhamist temporal logic FHOT.
Two remarks.
First we note that FHOT is expressively equivalent to the first-order logic over trees extended with branch quantifiers, proved decidable in [14].
Second, FHOT is also expressively equivalent to the system just discussed.
For in the presence of the sometime modality, the downarrow binder is capable of defining the hybrid quan fi  , where fi does tifers as follows:      not occur in .
References [1] C. Areces, Logic Engineering.
The Case of Description and Hybrid Logics, ILLC Dissertation series DS2000-05, University of Amsterdam.
Available at the hybrid logic homepage, www.hylo.net.
[2] C. Areces, P. Blackburn, and M. Marx, The Computational Complexity of Hybrid Temporal Logics, Logic Journal of IGPL, 8(5), 2000, 653a679.
[3] R. Alur and T. Henzinger, A Really Temporal Logic.
Journal of the ACM, 41, 1994, 181-204; a preliminary version appeared in the Proc.
30th FOCS, 1989.
[4] R. Alur and T. Henzinger, Logics and Models of Real Time: A Survey.
In: Real-Time: Theory in Practice, REX Workshop, LNCS 600, pp.
74-106, 1991.
[11] J. Burgess, Decidability for Branching Time, Studia Logica, 39, 2/3 (1980), 203-218.
[12] E. Emerson, Temporal and Modal Logic, in: Handbook of Theoretical Computer Science, vol.
B, J. van Leeuwen (ed.
), Elsevier, 1990, pp.
995-1072.
[13] V. Goranko, Hierarchies of Modal and Temporal Logics with Reference Pointers, Journal of Logic, Language and Information, 5, 1996, 1-24.
[14] Y. Gurevich and S. Shelah, The Decision Problem for Branching-Time Logic, Journal of Symbolic Logic, 50(3), 1985, 668-681.
[15] T. Henzinger, Half-Order Modal Logic: How to Prove Real-Time Properties, in: Proceedings of the Ninth Annual ACM Symposium on Principles of Distributed Computing (PODC 1990), pp.
281-296.
[16] A.
Prior, Past, Present, and Future, Clarendon Press, Oxford, 1967.
[17] C. Stirling, Modal and Temporal Logics, in: Handbook of Logic in Computer Science, vol.
2: Computational Structures, S. Abramski, D. Gabbay, T. Maibaum (eds.
), Clarendon Press, Oxford, 1992, 478563.
[18] R. Thomason, Combinations of Tense and Modality, in: Handbook of Philosophical Logic, vol.
II, D. Gabbay, F. Guenthner (eds.
), Reidel, Dordrecht, 1984, 135-165.
[19] A. Zanardo, Branching-Time Logic with Quantification Over Branches: The Point of View of Modal Logic, Journal of Symbolic Logic, 61(1), 1996, 1-39.