Probabilistic Temporal Interval Networks Vladimir Ryabov University of Jyvaskyla P.O.
Box 35 Jyvaskyla, FIN-40351, Finland vlad@it.jyu.fi  Abstract A Probabilistic Temporal Interval Network is a constraint satisfaction problem where the nodes are temporal intervals and the edges are uncertain interval relations.
We attach a probability to each of Allen's basic interval relations.
An uncertain relation between two temporal intervals is represented as a disjunction of Allen's probabilistic basic relations.
Using the operations of inversion, composition, and addition, defined for this probabilistic representation, we present a path consistency algorithm.
1.
Introduction A Constraint Satisfaction Problem (CSP) [9] can be represented by a finite set of variables (or nodes), their associated domains, and a set of constraints on these variables.
The domain of a variable is the set over which the variable takes its values.
Each element of the domain is called a label.
Solving a CSP consists of finding assignments of labels to variables that satisfy the given constraints.
A Probabilistic Temporal Interval (PTI) network is a special type of CSP.
A PTI network consists of a set of nodes (temporal intervals) and the edges represent the uncertain relations between them.
An uncertain relation between two intervals is a set of Allen's [1] basic relations, where a probability is attached to each basic relation.
We re-define three reasoning operations: inversion, composition, and addition.
A standard pathconsistency algorithm is modified to deal with uncertain interval relations.
Due to a lack of space, we omit our algorithm for finding consistent scenarios in PTI networks using a backtracking algorithm, heuristic methods for optimizing the algorithm's performance, and methods for computing the probability of a consistent scenario using the probabilities associated with Allen's basic relations on each edge.
A complete  Andre Trudel Jodrey School of Computer Science Acadia University Wolfville, Nova Scotia, B4P 2R6, Canada Andre.Trudel@AcadiaU.ca  version of this paper which includes omitted algorithms appears as a technical report [8].
Our path-consistency algorithm, backtracking algorithm, and ordering heuristics are partially based on van Beek and Manchak's work [3].
Our probabilistic representation is more general than their standard temporal representation.
Our paper can be viewed as an extension of the work presented in [3].
Other formalisms for handling uncertainty, such as possibility theory, have been applied to temporal representation and reasoning.
A fuzzy extension of Allen's Interval Algebra was proposed in [2].
In that paper, a possibility theory was utilized to model uncertain temporal relations by assigning a preference degree to every basic Allen's relation within an uncertain interval relation.
Three reasoning operations, namely, inverse, conjunctive combination (analogous to our operation of addition), and composition were defined for that representation.
A path-consistency algorithm for interval-based networks with fuzzy temporal constraints has been proposed, and a tractable sub-algebra has been identified.
In addition to the above, other related work is: the paper of Ladkin and Reinefeld [5] describes algebraic methods for interval constraint problems; a theoretical evaluation of selected backtracking algorithm was presented in [4]; a description of backtracking algorithms for disjunctions of temporal constraints in [10], and analysis of symbolic and numeric constraint satisfaction techniques for temporal reasoning [6].
In Section 2 we define uncertain interval relations and present reasoning operations.
In Section 3 we define PTI networks, give an example of such a network, and describe the types of input that are accepted by the algorithms presented in this paper.
In Section 4 we define a path consistency algorithm.
Proceedings of the 11th International Symposium on Temporal Representation and Reasoning (TIME'04) 1530-1311/04 $20.00 (c) 2004 IEEE  2.
Uncertain Interval Relations In this section, we define uncertain interval relations and the reasoning operations inversion, composition, and addition.
We denote temporal intervals with capital non-bold letters, i.e.
A, B.
The relation between two intervals is denoted with a subscripted capital letter R. For example, the relation between intervals A and B is written as RA,B.
There are thirteen basic mutually exclusive relations [1] that can hold between two temporal intervals.
The set of these relations is denoted as X={eq, b, bi, d, di, o, oi, m, mi, s, si, f, fi}.
We refer to an element of this set as kh[?]X.
An uncertain relation between two temporal intervals is represented as a set of probabilities of all the basic relations that can hold between them.
The probability of a basic temporal relation between two intervals is further denoted using the letter "e" with a superscript indicating the basic relation and possibly a subscript indicating the intervals, e.g., eAeq, B .
The uncertain relation between intervals A and B is written as RA,B={ekh"kh[?]X}.
The set RA,B has a cardinality of 13, one entry for each of Allen's basic temporal relations.
The probabilities in RA,B sum to 1.
For example, RA,B={eeq=0.5, eb=0.2,ebi=0.3} means that the relationship between intervals A and B is "eq [?]
b [?]
bi" and, "eq" is the sole relationship between intervals A and B with probability 0.5.
Similarly for "b" with probability 0.2 and "bi" with 0.3.
Note that in this and all subsequent examples, zero entries are omitted.
For example, "m" has a probability of 0 of being the relationship between A and B.
The operation of inversion (~) derives the relation ~ RB,A when the relation RA,B is defined, and RB,A = RA , B .
Given the probability values eAkh , B , the probability values eBkh, A are calculated according to the inversion table for Allen's interval relations [1], i.e.
eBoi, A = eAo , B .
For example, the inverted relation for RA,B={eeq=0.05, eb=0.2, ebi=0.1, ed=0.35, edi=0.01, eo=0.2, eoi=0.09}is RB,A={eeq=0.05, eb=0.1, ebi=0.2, ed=0.01, edi=0.35, eo=0.09, eoi=0.2}.
The operation of composition ([?])
derives the relation RA,C, when the relations RA,B and RB,C are defined, and RA,C=RA,B[?]RB,C.
We assume that the probability values  eA,kh B and eB,kh C , where kh[?
]X, are  known.
The probability values  kh  eA ,C are calculated  according to the algorithm for composition (Figure 1) presented in [7].
1. e khA,C =0, where kh[?
]X; 2. for i=1 to 13 do 3. for j=1 to 13 do 4. begin 5.
X'={kh1,kh1,...,khm}, where X' is a set of all Allen's relations which are possible between A and C when e khAi,B and kh  e B,j C are combined; 6.  for k=1 to m do  7.  e khA,kC = e khA,kC +  1 khi khj e A, B e B,C m  //khk[?
]X'; khi,khj [?
]X; 8.  end.
Figure 1.
Composition algorithm [7]  The algorithm in Figure 1 considers all possible combinations of the probability values from RA,B and RB,C.
For example, the result of the standard nonprobabilistic composition of "b" and "d" is {b,d,o,m,s}.
We need to distribute the probability eAb , BeBd ,C between the values from the set {b,d,o,m,s}.
For example, the composition of the two uncertain relations RA,B={eeq=0.3,eb=0.7} and RB,C={ed=0.5,eo=0.5} b d results in RA,C={e =0.42, e =0.22, eo=0.22, em=0.07, es=0.07}.
The operation of addition ([?])
combines the relations RA' ,B and RA'' ,B into a single relation RA,B.
In this case, we write RA,B =  RA' ,B [?]
RA'' ,B .
We use the  algorithm from [7] for performing addition (Figure 2).
For example, the addition of two uncertain relations RA' ,B ={eeq=0.3,eb=0.5,eo=0.2} and RA'' ,B ={eeq=0.05, ed=0.2, eo=0.75} is RA,B={eeq=0.214, eo=0.786}.
1. e khA, B =0, where kh[?
]X; 2. for i=1 to 13 do 3.  e  khi A, B  e'Akh,iB e'A' kh, Bi , //where e'A,khiB from = khi khi e'A, B + e'A' , B // R 'A ,B and e'A' kh, Bi from R 'A' ,B ;  4. for i=1 to 13 do 5.  e  khi A ,B  e khAi ,B = .
| e khA,B kh[?
]X  Figure 2.
Addition algorithm [7]  Proceedings of the 11th International Symposium on Temporal Representation and Reasoning (TIME'04) 1530-1311/04 $20.00 (c) 2004 IEEE  3.
PTI Networks A PTI network N is a directed graph where the nodes represent intervals and the arcs represent the uncertain temporal relations between these intervals.
We represent such a graph as a set of n variables (intervals) V={v1,v2,...,vn} and the relations between them as R v , v ={ekh"kh[?
]X}, where vi,vj[?]V.
The set of all i  j  uncertain temporal relations for the network N is denoted as Ps.
For example, the PTI network N shown in Figure 3 has 4 intervals A, B, C, D, and 5 uncertain relations between them RA,B={eeq=0.3, eb=0.7}, RB,C={eb=0.5, ebi=0.5}, RA,C={eb=1}, RB,D={eb=1}, and RC,D= {eb=0.2, ebi=0.8}.
Note that there is no edge between A and D. In this case, we assume it is a totally uncertain relation with all possible entries having equal probability values.
In later sections, we define a path consistency and a backtracking algorithm for PTI networks.
The algorithms accept three types of input: A PTI network: The interval relations within this network include probabilistic values for Allen's relations (e.g., the network shown in Figure 3).
{eeq=0.3,eb=0.7}  B  {eb=0.5,ebi=0.5}  {eb=1}  A  C  {eb=1}  {eb=0.2,ebi=0.8}  D Figure 3.
The PTI network N A standard qualitative temporal CSP: In this case, the network does not include probability values and needs to be converted to a PTI network.
We assume that the Allen relations contained in the label on an edge are equally likely.
For example, if we have the label {eq,b} on an edge, we convert this to a PTI with {eeq=0.5,eb=0.5}.
In general, each of the n entries in a label are assigned the probability 1/n.
A qualitative temporal CSP with preferences: Assume we have a standard qualitative temporal CSP.
In addition, we are given relation preferences for each edge.
For example, if we have the label {b,m,o} and we also know that b is preferred over m and o.
There is no preference between m and o.
The PTI network label becomes {eb=2/(2+1+1), em=eo=1/(2+1+1)}, i.e.
{eb=0.5, em=0.25, eo=0.25}.
In general, we create a  partial order and rank each element in the order.
The smallest ranked element is assigned a rank of 1.
The probability assigned to an element is its rank over the sum of the ranks.
4.
Path Consistency Algorithm The path consistency algorithm (PC-algorithm) can be used to test an Interval Algebra (IA) network for consistency as was proposed by Allen [1], as well as a part of the backtracking search algorithm ([5] and [3]).
In this section we present a PC-algorithm (shown in Figure 4) adapted to PTI networks.
Note that our PCalgorithm is almost identical to the one in [3].
We use probabilistic versions of inversion, addition, composition, and the test conditions in lines 7 and 14 in Figure 4.
As the name implies, the PC-algorithm repeatedly checks for 3-consistency for every possible three nodes i, j, and k. The values of the uncertain relations Ri,j and Rj,k potentially constrain the value of the relation Ri,k.
Using the operations of composition and addition we compute a possible value for the relation Ri,k using the triangle t=Ri,k[?](Ri,j[?]Rjk).
Analogous to standard qualitative temporal CSPs, Ri,k and t have the following properties: If ekh is zero in Ri,k then the same entry is also zero in t. If ekh is non-zero in t then the same entry is also non-zero in Ri,k.
From the above, t has the same number or fewer zero entries as Ri,k.
Also, all non-zero entries in t are also non-zero in Ri,k.
If the derived relation t is more certain than the initial value of Rik, we update Rik with t. The derived relation is more certain than the initial one if: It has more zero entries (probability values for the basic relations).
Or, the relations are not equal and have the same number of zero entries, but the initial relation is lexicographically smaller than the derived one, when the entries are ordered in descending order.
To illustrate the latter case, let us consider an example: Ri,k = {eeq=0.2,eb=0.5,em=0.3} and t = {eeq=0.25, eb=0.25, em=0.5}.
Ordering the entries in descending order we obtain Ri,k={eb=0.5,em=0.3,eeq=0.2} and t={em=0.5, eeq=0.25, eb=0.25}.
The maximum entries are equal to 0.5; therefore we need to compare the next ones.
The second entry of 0.3 for Ri,k is bigger than 0.25 for t, so we conclude that the relation Ri,k is more certain than t. In this case, Ri,k would not be updated.
Let us underline, that such a lexicographical comparison is utilized only when the two relations are not equal and have the same number of zero entries.
The described procedure is also performed to tighten the relation Rj,k in a similar way.
The motivation for the  Proceedings of the 11th International Symposium on Temporal Representation and Reasoning (TIME'04) 1530-1311/04 $20.00 (c) 2004 IEEE  lexicographic comparison is to favor relations with comparatively larger probabilities.
The computational complexity of the path consistency algorithm is O(n3) when counting composition operations as taking unit time.
As it was pointed out by many authors (e.g., [3] and [5]), for an implementation of the path consistency algorithm to be efficient, the reasoning operations used must be efficient.
Particularly, the time performance of the algorithm in Figure 4 strongly depends on the method of calculating the composition of relations.
1.
L - {(i,j) | 1 <= i < j <= n} 2. while (L [?]
{[?]})
do 3. select and delete an (i,j) from L 4. for k = 1 to n do 5. if (k [?]
i) AND (k [?]
j) do 6. t = Ri,k [?]
(Ri,j [?]
Rjk); 7. if (t has more zero entries than Ri,k) OR ((t [?]
Ri,k) AND (t has the same number of 8. zero entries as Ri,k) AND (Ri,k is lexicographically smaller than t, when entries in Ri,k and t are ordered in descending order)) 9. then do 10.
Ri,k = t; 11.
Rk,i = Inverse (t); 12.
L = L [?]
{(i,k)}; 13. t = Rk,j [?]
(Rk,i [?]
Ri,j); 14 if (t has more zero entries than Rk,j) OR ((t [?]
Rk,j) AND (t has the same number of 15. zero entries as Rk,j) AND (Rk,j is lexicographically smaller than t, when entries in Rk,j and t are ordered in descending order)) 16. then do 17.
Rk,j = t; 18.
Rj,k = Inverse (t); 19.
L = L [?]
{(k,j)}; Figure 4.
Path-consistency algorithm for PTI networks  Our results are theoretical, and experiments will be carried out in the near future.
After implementing the algorithms, we will test them on PTI networks.
The relative speed and the order that the scenarios are generated will be studied.
6.
References [1] Allen, J.: Maintaining Knowledge about Temporal Intervals.
Communications of the ACM 26(11) (1983) 832843.
[2] Badaloni, S., Giacomin, M.: A Fuzzy Extension of Allen's Interval Algebra, In Proceedings of the 6-th Congress of the Italian Association for AI, Lecture Notes in Artificial Intelligence 1792 (2000) 155-165.
[3] van Beek, P., Manchak, D.: The Design and Experimental Analysis of Algorithms for Temporal Reasoning, Journal of Artificial Intelligence Research 4 (1996) 1-18.
[4] Kondrack, G., van Beek, P.: A Theoretical Evaluation of Selected Backtracking Algorithms, Artificial Intelligence 89 (1997) 365-387.
[5] Ladkin, P., Reinefeld, A.: Fast Algebraic Methods for Interval Constraint Problems, Annals of Mathematics and Artificial Intelligence 19(3-4) (1997) 383-411.
[6] Mouhoub, M., Charpillet, F., Haton, J.-P.: Experimental Analysis of Numeric and Symbolic Constraint Satisfaction Techniques for Temporal Reasoning, Constraints: An International Journal 3(2-3) (1998) 151-164.
[7] Ryabov, V.: Handling Uncertain Interval Relations, In Proceedings of the 2-nd IASTED International Conference on AI and Applications, ACTA Press (2002) 291-296.
[8] Ryabov, V., Trudel, A.: Probabilistic Temporal Interval Networks: Extended version, Technical Report TR-2004001, Acadia University (2004).
[9] Schwalb, E., Vila, L.: Temporal Constraints: A Survey, Constraints: An International Journal 3(2-3) (1998) 129-149.
[10] Stergiou, K., Koubarakis, M.: Backtracking Algorithms for Disjunctions of Temporal Constraints, Artificial Intelligence 120 (2000) 81-117.
5.
Conclusions We defined a PTI network whose nodes represent temporal intervals and edges represent the uncertain relations between them.
We then proposed a PTI path consistency algorithm.
Other related algorithms can be found in [8].
Proceedings of the 11th International Symposium on Temporal Representation and Reasoning (TIME'04) 1530-1311/04 $20.00 (c) 2004 IEEE