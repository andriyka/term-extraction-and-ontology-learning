Qualitative and Quantitative Temporal Reasoning with Points and Durations (An Extended Abstract) Rattana Wetprasit and Abdul Sattar Knowledge Representation and Reasoning Unit School of Computing and Information Technology Grith University, Nathan, QLD 4111 Australia frattana,sattarg@cit.gu.edu.au  Abstract  on their way to work.
Since Bob lives close to the of-  This paper extends the point duration network (PDN) [3] to represent both qualitative and quantitative information about point events.
An algorithm to solve reasoning tasks such as nding a consistent scenario with minimal domains is briey described.
We also propose further extension to capture quantitative information about durations.
We would like to deduce that Bob always arrives at work not later than 8.05 a.m.. We also expect our  1.
Introduction Recently, a point based bi-network is proposed to represent qualitative relationships between point events and durations|called point duration network (PDN) [3].
In this framework, a duration represents a time distance between two point events.
The basic relations between two durations are: f<; >; =g.
Let us consider the example proposed in [2] with additional qualitative information about durations and quantitative information about points.
Example 1 John, Fred and Bob work for a company that has local and main oces in Los Angeles.
They usually work at the local oce, in which case it takes John less than 20 minutes and Fred 15-20 minutes to get to work.
Twice a week John works at the main ofce, in which case his commute to work takes at least 60 minutes.
Today John left home between 7:05-7:10 a.m., and Fred arrived at work between 7:50-7:55 a.m. We also know that Fred and John met at a trac light A  full version of this paper will appear in the Proceedings of the Fifteenth National Conference on Articial Intelligence 1998 (AAAI-98), Wiscousin [5].
ce, it takes him less time than Fred to go to work and usually he leaves home before 7:45 a.m.. 2  system to retain the reasoning ability of the existing systems such as deducing that John arrived at the main oce after 8.05 a.m., and he arrives at work at least 10 minutes after Fred.
To handle the above problem, we proposed an augmented point duration network by introducing unary constraints over all point and duration variables.
Our intuition behind constraining point and duration variables with unary constraints is that the quantitative information about when each point event takes place indicates the instance of the corresponding point.
The metric information about each pair of points species the distance between the two points, which is the instance of the corresponding duration.
Therefore, the quantitative temporal information can be naturally represented by constraining the domains of points and durations.
2.
Denitions Denition 1 A qualitative constraint between two  objects Oi and Oj , in which both objects may be a pair of points or durations, is a disjunction of the form (Oir1Oj ) _ ::: _ (Oirk Oj ) where each of the ri 's is a basic relation in the set T (f<; >; =g).
I = fI1 ; :::; Ikg = f[a1; b1]; :::; [ak; bk ]g:   If al 6= bl (1  l  k) and k > 1 then the constraint is classied as multiple-interval.
 If al 6= bl (1  l  k) and k = 1 then the constraint is classied as single-interval.
 If al = bl (1  l  k) and k  1 then the constraint is classied as discrete.
There are two types of quantitative constraints:  1.
A unary constraint quantitatively restricts the domain of a variable, say Oi , to the given set of intervals.
Essentially, it represents the disjunction: (a1  Oi  b1) _ ::: _ (ak  Oi  bk ): The three types of domains: multiple-interval, single-interval, and discrete, correspond to the three classes of constraints.
2.
A binary constraint represents the metric information between durations (for more detail see the further extension section).
2.1.
Augmented Point Duration Network  Denition 3 An augmented point duration network (APDN) is a structure APD = hNP ; ND ; Rel(P; D)i, where  NP is a network consisting of a set (P ) of point variables: fx1; :::; xng; the domains of points: fD1 ; :::; Dng, which are restricted by unary constraints; and a set (Rel(P )) of binary relations over point variables.
Rel(P ) = fRi;j 2 2T j 1  i; j  ng   ND is a network consisting of a set (D) of duration variables: fdij j 1  i < j  ng; the domains of durations: fD12; :::; D(n,1)ng, which are restricted by unary constraints; and a set (Rel(D)) of binary relations over duration variables.
Rel(D) = fRij;km 2 2T j 1  i; j; k; m  ng 1 For simplicity, we assume closed intervals, but the same treatment can be applied to open and semi-open intervals as well.
This is similar to a set of intervals for TCSP dened in [1].
(- ,45) <  J1  J2  <  B1  F1F2  <  B1B2  <  <  F1  (15,20)  <  F2  B2  J1 J2  (50,55) Point Network  (0,20 ),(60,  8  sented by a set of intervals1 :  (5,10)  8  Denition 2 A quantitative constraint is repre-  )  Duration Network  Figure 1.
The graphical representation of Example 1   Rel(P; D) is a set of ternary constraints relating  points and durations, where Rel(P; D) = f4ij  Q3 j 1  i; j  ng such that 4ij = f(Xi ; Xj ; Dij ) 2 Q3 j Dij = jXi , Xj jg: The Rel(P), Rel(D), Rel(P; D), and all unary constraints altogether are referred to as APD -constraints.
A duration variable dij represents time elapsed between points xi and xj in an absolute value form, i.e., only dij (i < j) is represented (not dji).
The set of ternary constraints, Rel(P; D), species instances of points and durations which are related to each other by the distance property dij = jxi , xj j.
Illustration: (Continued from Example 1) (J1; J2), (B1 ; B2 ) and (F1 ; F2) denote the time that John, Bob and Fed respectively leave home and arrive at the ofce.
By representing the quantitative information as domains of points and durations, all given information can be represented in the APDN as shown in Figure 1.
2.2.
Consistency and Minimality  Given an APDN, APD = hNP ; ND ; Rel(P; D)i with n point variables (x1 ; :::; xn), and the domains of points (D1 ; :::; Dn).
An assignment of all variables in NP is the n-tuple of the form: AP = ((x1; X1 ); :::; (xn; Xn)); Xi 2 Di : Similarly, the assignment of all n(n2,1) duration variables in ND (d12; :::; d(n,1)n) with the domain constraints (D12 ; :::; D(n,1)n) is the tuple of the form: AD = ((d12; Y12); :::; (d(n,1)n; Y(n,1)n)); Yij 2 Dij : A pair A(AP ; AD ) is a solution for the APDN i it satises all the APD -constraints.
An APDN is consistent i there is a solution.
A value Xi is a feasible value for a variable xi if there exists a solution in which xi = Xi .
The set of  all feasible values of a variable is called the minimal domain.
We can also say the same for the minimal domain of a duration variable.
A simple APDN, SAPD = hNPS ; NDS ; RelS (P; D)i, is an APDN such that every qualitative constraint is a primitive relation and every quantitative constraint is an element of a single-interval class.
Denition 4 A consistent scenario of an APDN with minimal domains is a consistent simple APDN  where all constraints are minimal.
3.
Reasoning with APDN We propose an algorithm for nding a consistent scenario of an APDN with minimal domains.
This algorithm comprises two functions: nd a consistent scenario of APDN, and if the APDN is consistent then compute single-interval minimal domains with respect to the consistent scenario.
To demonstrate the functioning of our algorithm, the following simple example will be used through out this section:  Example 2 Given an APDN of four points: p ; :::; p , 1  4  qualitative and quantitative constraints as shown below: (1,5) p1  (7,10) <  <=  (4,5)  p2 <   If two durations, ik and jk (i 6= j) are in the same SCC then points i and j must be in the same SCC.
The same statement can also be made for ki and kj.
Illustration: From the above example, points p3 and p4 are in the same SCC.
Therefore, a) duration d34 has null distance, b) the distances from point p1 to p3 and p4 are equal, or d13 and d14 are in the same SCC.
This also applies to d23 and d24.
In the duration network, no further node can be grouped into SCC.
Step 3 Condense PN and DN by collapsing each SCC into a single node.
The domain of each new node will be the intersection of all domains in the SCC, and the relation between a pair of the new nodes will be the intersection of the relations from nodes in an SCC to another SCC.
If any intersection results in empty set, the corresponding network is inconsistent.
Illustration: The point network then is reduced to three nodes: x1 ; x2, and x3, while x3 includes points p3 and p4.
The reduced duration network consists of four nodes: y0 with the null duration d34, and y12 ; y23 and y13 with the durations (d12); (d23; d24) and (d13; d14) respectively.
Relation and domain constraints are shown as follows (the direction of the arrow from node i to j indicates i is less than j): (1,5)  (7,10)  x1  x2  =  <  (12,20)  p4 (15,22)  PN  (4,5) y12  d12 <  x3 p3  (0) y0  d13  y13  y23  d23  (12,15)  (15,20)  (6,10) DN  2 3.1.
Computing Consistent Scenarios  Step 1 Identify all equivalent classes of nodes in the point and duration networks independently.
This is the same as nding the strongly connected components (SCCs) in graph theory and the ecient algorithms by [4] can be applied.
Step 2 From the SCCs in PN and DN, deduce more nodes that can be classied in the SCCs using the following properties:  If two points i and j are in the same SCC then it implies: 1) For every point k 6= i; j, it must be dik = jk , ij = jk , j j = djk (dik and djk must be in the same SCC); and 2) dij = 0 (dij must be in the same SCC as the null duration d0).
(12,15)  (6,10)  Step 4 Find a consistent scenario for PN and DN independently.
To identify a consistent scenario of the APDN, SAPD = hNPS ; NDS ; RelS (P; D)i, each duration in the consistent scenario of DN is instantiated with an integer d corresponding to the ordering of the durations.
Using the distance property xj = xi + dij , the value of each point in PN is then calculated.
If all relations between the point values in PN are satised then a consistent scenario for the APDN is found.
Illustration: We choose consistent scenarios of PN and DN as: x1 < x2 < x3, and y0 < y12 < y23 < y13, y0 < y23, y0 < y13, y12 < y13 .
Then without considering the domains of all nodes, we sequentially assign integers to all durations: y0 = 0, y12 = 1, y23 = 2 and y13 = 3.
By the distance property and the initial value x1 = 0, we have x2 = x1 + y12 = 1 and x3 = 3, which are consistent to their atomic relations in the consistent scenario.
Therefore, the chosen consistent scenario of PN is consistent to the one for DN.
C <   QUAN(C ) (0; 1) [0; 1) [0] (,1; 0) (,1; 0] (,1; 0); (0; 1) (,1; 1)  =  >   6= ?
Table 1.
The QUAN translation  3.2.
Computing Minimal Domains  The minimal domains of the consistent scenario resulting from the previous process are acquired by the following steps2 : Step 1 Apply arc-consistency algorithm to NPS and NDS individually.
The main operation of the arcconsistency algorithm REVISE((i; j)) can be expressed as: D := D   (D , QUAN (C )) Function QUAN(C) transforms qualitative temporal constraints to quantitative constraints [2] (shown in Table 1).
Illustration: Both the consistent scenarios of PN and DN from the previous steps are already arcconsistent.
However, if we consider arc (x1 ; x2), function REVISE((x1 ; x2)) is expressed as: D1 := D1   (D2 , QUAN(C1;2)) := (1; 5)   ((7; 10) , (0; 1)) := (1; 5)   (,1; 10) := (1; 5).
Step 2 Minimize the domains with respect to both NPS and NDS by propagating all the quantitative constraints which can be expressed as follows: D =D ,D (1) D =D +D (2) D =D ,D (3) D =D ,D (4) where 1  i < j  n; 1  k  n; k 6= i; j.
If the domain of a point, Di , is constrained (by Equation 1 or 2), we need to consider all other related domains (Equation 2 and 3, where 1  i < j  n).
If the domain of a duration node, Dij , is updated (by Equation 3 or 4), we examine Equations 1, 2 and 4, where 1  k  n; k 6= i; j.
We introduce three queues: QPD; QPP and QDD.
Elements in QPD represent the domain indices in Equations 1, and 2, while QPP and QDD are for Equations 3 and 4 respectively.
The propagation is repeated until all domains are stable or i  i  j  i;j  i  j  j  i  ij  ij  ij  ij  j  ik  i  jk  2 For simplicity, we will refer to a component in the reduced network of PN as a point node, and a component in the reduced network of DN as a duration node.
become empty, indicating inconsistency.
While propagating, the consistency of the domains among the nodes in the same network needs to be maintained.
Illustration: For this example, initially QP D and QPP each consist of three elements: (1,2),(1,3) and (2,3).
QDD has three elements: (1,3,2),(1,2,3) and (2,1,3).
Considering the element (1,2) of QPD: T emp = D1   (D2 , D12) = (1; 5)   ((7; 10) , (4; 5)) = (2; 5).
This tightens the domain of x1, but the network is still arc-consistent.
The elements ((2,1),(3,1)) and ((1,2),(1,3)) are added to QPD and QPP respectively.
When the algorithm terminates, no further domains are updated.
A consistent scenario of the given APDN with minimal domains is shown below: (2,5)  (7,10)  x1  x2  x3 (15,20)  (0)  (4,5)  y0  y12  y13 (12,15)  y23 (6,10)  Theorem 5 Finding a consistent scenario of APDN  with minimal domains for a simple APDN is solvable in polynomial time, O(nd2), where n; d are the numbers of points and durations respectively.
4.
Further Extensions to APDN In this section, we propose to further extend the APDN to address the problem when quantitative information between durations is allowed.
A fully quantied point duration network is an APDN, as dened earlier, except the binary constraints between durations in the duration network are quantitative constraints.
(Cij;km 2 I).
This restricts the permissible values for the time dierences between durations ij and km.
Example 3 Combining the information from Example 1 and Bob takes 30-45 minutes less than Fred to go to work, the fully quantied point duration network representing this information is shown in Figure 2.
2 A solution and the consistency of a fully quantied point duration network can be dened as in APDN.
Finding a consistent scenario of a fully quantied point duration network with minimal domains can be achieved by similar method as for APDN.
However, as all constraints in the duration network are quantitative, we apply the All-Pairs-Shortest-Paths algorithm to minimize all those single-intervals constraining arcs and nodes of the duration network (detailed in the full paper).
Then minimizing all domains with respect to both point and duration networks is also based on the propagating of those equations proposed in the previous section.
(5,10)  8  (- ,45) <  J2  <  F1F2  (30,45)  B1B2  <  <  F1  B1  <  F2 (50,55) Point Network  B2  J1 J2  (0,20 ),(60,  8  J1  (15,20)  )  Duration Network  Figure 2.
The graphical representation of the fully quantified problem  5.
Conclusion Precisely, the contributions of this paper are:  An augmented point duration network (APDN) which adequately handles both qualitative and quantitative information about point events.
 A further extension of the APDN framework to capture quantitative information about durations.
 The algorithms for nding a consistent scenario with minimal domains for both APDN and the extended frameworks.
References [1] R. Dechter, I. Meiri, and J. Pearl.
Temporal constraint networks.
Articial Intelligence, 49:61{95, 1991.
[2] I. Meiri.
Combining qualitative and quantitative constraints in temporal reasoning.
Articial Intelligence, 87, 1996.
[3] I. Navarrete and R. Marin.
Qualitative temporal reasoning with points and durations.
In Proceedings of the 15th International Joint Conference on Articial Intelligence (IJCAI-97), pages 1454{1459, Nagoya, Japan, 1997.
[4] R. Tarjan.
Depth-rst search and linear graph algorithms.
SIAM J.
Comput., 1:146{160, 1972.
[5] R. Wetprasit and A. Sattar.
Temporal reasoning with qualitative and quantitative information about points and durations.
In Proceeding of the Fifteenth National Conference on Articial Intelligence.
AAAI Press / The MIT Press, 1998.
To appear.