Generating Scenarios from Specications of Repeating Events Robert A. Morris and Lina Khatib Florida Institute of Technology Computer Science Program Melbourne, FL 32901 morris@cs.
t.edu  Abstract  This paper addresses the problem of reasoning about events that recur over time, especially when knowledge about those events may be incomplete or qualitative.
A constraint-based framework is proposed to solve the problem of mapping a speci cation of temporal information about recurring events to a scenario, a qualitative representation of an assignment of times to those events.
The main result of this paper is to reduce the problem of generating recurrence scenarios to the problem of generating a set of scenarios for convex interval relations.
1 Introduction  Many temporal reasoning problem involve a concept of recurrence.
For example, consider the following speci cation: Oce hours (OH) happen twice a week.
Faculty meetings (FM) happen at least once a week.
The CS-1 class (CM) meets twice a week.
Preparation time (PT) only precedes or meets class meetings.
Class meetings, in general, are always before, or 	nished by, lab research meetings (LR), and once a week the class meetings are 	nished by the lab meetings.
Preparation time is always and only during of	ce hours.
Unless otherwise indicated, each occurrence is disjoint from every other.
This speci cation contains qualitative and quantitative knowledge about recurring events.
Gerard Ligozat  LIMSI, Universite Paris-Sud, B.P.
133 91403 Orsay, Cedex, France ligozat@limsi.fr The statements in this speci cation can be classi ed into three kinds, viz., expressing: cardinality constraints (faculty meetings happen at least once) recurring relationships: (preparation time only precedes or meets classes) and global constraints: (every occurrence is disjoint from every other).
A scenario oers a  nite, qualitative abstraction of an in nite set of solutions, assignments of times to events.
A graphical representation of a scenario for the example speci cation is found in Figure 1.
Each event occurrence is indicated by a horizontal line, and the temporal relationships by their relative positions.
The meaning of the rectangles and arrows in the  gure are explained below.
The aim of this paper is to describe a complete framework for representing the temporal information found in speci cations of the kind just illustrated, and to describe a reasoning mechanism which, applied to this knowledge, is capable of generating scenarios for recurring events.
The paper extends the framework found in 5], 6].
2 Recurrence Relationships Relational contexts involving plural noun phrases describing recurring events (e.g.
class meetings) can be interpreted as a form of collective predication (i.e.
predication over collections of elements from some domain).
Thus, the domain of discourse for reasoning about recur-  rence can be viewed as collections of the standard time units, either intervals or points.
For example, if intervals are viewed in the normal way as ordered pairs of minimal time units, then the set  I = fhI1;  I1+i hI2; I2+i : : :  hIn; In+ig is a potential interpretation of a plural noun phrase describing a  nitely recurring event1.
For the sake of completeness, we review the proposed semantics for predicative contexts involving collections of intervals.
Given a temporal relation such as follows, it is possible to express a recurrence relationship by pluralizing: thus, the sentence games follow national anthems expresses a recurring relationship between recurring events.
Contextual knowledge about games and national anthems indicates a one-to-one mapping between occurrences.
In the  rst-order representation, annotations can be added to quanti ers to express this type of mapping.
For example, (8i : games)(9d!j : N:A:)follow(i j ) represents a one-one functional mapping, where 9d!
is read \there exists a unique, distinct".
Other contexts are compatible with dierent mappings for example, the sentence parallel sessions precede lunches suggests a many-to-one mapping between sessions and lunches.
Applying temporal adverbs such as \always", \only" and \sometimes" to these contexts re nes their meaning.
Consider, for example games only follow national anthems.
The truth condition of this sentence implies a notion of \corresponding pairs" of occurrences.
In previous accounts, such an I is called an ninterval.
1  Again following the previous analysis, corresponding components will be said to be correlated.
Formally, correlation is an equivalence relation over its domain.
The sentence Preparation time only precedes or meets classes in the example speci cation can be expressed in  rst-order logic as the following conjunction:2 (8i 2 PT )(9d!j 2 CM )COR(i j )^fp mg(i j )  ^(8i 2 PT )(8j 2 CM )COR(i j ) !
fp mg(i j )]  Here, the variables range over interval components, and the expression \COR(i j )" expresses the correlation of components.
If a time frame is speci ed, relational expressions such as \WEEK (i j )" (i and j happen during the same week) can be added to the representation.
In this paper, we ignore the issue of reasoning with dierent time frames.
This class of  rst order formulas will be abbreviated as second-order relational expressions.
The relations which provide the interpretations of these expressions will be called Q9-relations.
This secondorder representation will be expressed in the form QR(R) where QR stands for a Q9-relation, and R stands for an interval temporal relation (e.g.
an Allen relation between pairs of intervals).
Rather than review the formal semantics of these contexts, illustrative examples are provided in Table 1.
I and J stand for recurring events.
The table translates an English context involving recurrence relations into a second-order formula exThe thirteen atomic interval relations will in this paper be abbreviated as follows: precedes (p), preceded by (pi), meets (m), met by (mi), equals (eq), starts (s), started by (si), nished (f ), nished by (fi), during (d), contains (di), overlaps (o), overlapped by (oi).
Following custom, the set notation is used to abbreviate contexts involving disjunctions of these relations.
2  pressing a 89-relation, and its  rst-order equivalent.
Certain collections of recurrences relations form the domain elements of an interval algebra 7].
In 6], a recurrence algebra RA is de ned based on a set of recurrence relations of the form discussed briey above.
This algebra is closed under the operators inverse, intersection and composition.
Intersection of recurrence relations results in the formation of relations which are best expressed as a form of conjunction.
For example, the sentence meetings always follow  or meet lunches furthermore, they sometimes meet lunches expresses a  relation which can be viewed as the intersection of two recurrence relations: always follow or meet and sometimes meet.
We call the sometimes operator in this context the re	nement operator, and the relations that result the re	ning relations the relation being re ned will be called the leading relation.
Following the earlier notation 5], the symbol  will stand for furthermore.
Furthermore can be generalized to arbitrary  nite conjunctions of simple relations.
We de ne a normal form for recurrence relations in RA as QR(R)  99d!
(S1)  : : :  99d!
(Sn) where 1.
R is one of the 213 atomic interval relations 1] 2.
QR is either 89od!, 89d!oi, 89d!, or 89d!ouoi (see Table 1) 3.
Si  R i = 1 : : : n and 4. each Si is atomic, i.e., consisting of a single temporal relation.
Remark 1 Let RA be the set of recurrence relations in normal form.
For pairs  R S 2 RA, let inverse R;1 , intersection R u S , and composition R 	 S be de	ned as in  6].
The set RA is closed under these operations.
The proof appeared in 6].
3 Reasoning About Recurring Relations  First, we extend the notion of temporal constraint network for the purpose of storing information about recurring events: De nition 1 (RA Networks) An RA network is a network of binary relations where 1. variables represent collections of convex intervals 2. for each variable I , DI , the domain of I is the set of all sets of nonoverlapping convex intervals and 3. the binary relations between variables are elements of RA.
The restriction of elements of the domain to sets of non-overlapping intervals means that the elements within the set can be totally ordered.
This restriction is not necessary, but is typical for the sorts of applications under consideration.
The next de nition generalizes the corresponding notion within the interval calculus: De nition 2 (Instantiation) An instantiation of m variables in a set I representing collections of intervals is an mtuple of sets of intervals representing an assignment of elements of DI to each I 2 I .
Given a set of binary temporal relations from RA between elements of I , a consistent instantiation is an instantiation that satis	es all the relations in the set.
An RA-network is consistent  if such an instantiation exists otherwise, the network is inconsistent.
The next concept formalizes the various patterns of recurrence corresponding to a given recurrence relation: De nition 3 (Concretization of a Recurrence Relation) A recurrence relation  R = QR(R)  99(S1)  : : :  99(Sn) de	nes a set of concretizations Rc taken from a set of elements A, called the alphabet for R. A contains R, as well as possibly other elements, depending on the value of QR, as follows:  1.
If QR = 89d!o then A contains a symbol representing occurrences of an element in range(R), and each concretization in Rc contains zero or more occurrences of this symbol 2.
If QR = 89d then A contains a symbol representing occurrences of an element in dom(R), and each concretization in Rc contains zero or more occurrences of this symbol  !oi  3.
Finally, A contains 0, and each concretization in Rc contains zero or more occurrence of this symbol.
Terminology: if R is a recurrence relation between I and J , then i and j will be the the symbols representing arbitrary elements of I and J , respectively.
Each element in Rc is called a concretization.
Each concretization r must contain an occurrence of each Si  i = 1 : : : n. A k concretization is a 	nite concretization of length k .
Example 1 (Concretization) The sequence hp m p m o o : : :i represents an in	nite recurrence of temporal relations between pairs of collections of intervals.
It is a concretization of many recurrence relations among them  89d!ouoifp m og.
To properly explain the notion of concretization, and its corresponding set A, out of which concretizations are built, it is necessary to revisit the notion of correlated occurrences.
A recurrence scenario can be viewed as a partition of a set of occurrences based on the relation COR.
Formally: De nition 4 (C-partition).
Given a set I of 	nite sets of intervals and I J 2 I , a c-partition of I is the structure hfXi ] : i = 1 : : : kg CORi, for some kS, such that fXi]g is a partition of S I 2I  Ij 2I Ij ] determined by an equivalence relation COR, where Xi] = Xj ] if and only if COR(Xi  Xj ) Each Xi ] will be called a stage in the cpartition.
A c-partition will be said to be well-behaved if there exists a total ordering <COR of the elements of fXi ]g de	ned by  Xi] <COR Xj ] if and only if (8Ij 2 Xi])(8Jp 2 Xj ])Ij < Jp For example, Figure 1 represents a wellbehaved c-partition of a set of repeating events.
Each pair of intervals i j in the cpartition (represented by the rectangles) are correlated.
Examples of correlated intervals are represented by the arrows.
Any permutation of this order is also a c-partition.
Not all c-partitions are wellbehaved, as a later example will illustrate.
It may not, in fact, be possible to generate a well-behaved c-partition, given a speci cation of recurrence information.
An ordered c-partition corresponds to a concretization r as follows.
Let ri] be the ith element of a concretization r of a recurrence relation between I and J .
This element will typically denote a temporal relation between some Im 2 I and some Jn 2 J in the ith stage of the ordered c-partition of the set containing I and J .
Notice however that, in general, it is not required for a stage to contain an element from each recurring event.
For example, in the second stage of the cpartition in Figure 1, there is no occurrence of either OH or PT , hence no temporal relation between occurrences.
In addition, there is an occurrence of FM but not of CM in the same partition.
We will say that if rm] =i (j), then an occurrence of some element of I (J ) appears in the mth stage of a c-partition of a set containing I and J .
If ri] = 0, then neither I nor J has an element in the ith stage of the c-partition that corresponds to r. As a  nal preliminary to a formalization of the notion of recurrence scenario, we associate instantiations of a set of interval collections to concretizations.
For simplicity, and without loss of generality, we assume that a set of concretizations have a  xed length k: De nition 5 (C-satisfaction) Let I be a set of variables standing for recurring events.
An instantiation of every element of this set c-satis es a set of k concretizations frIJ : I J 2 SIg if Sthere exists a c-partition fXi ]g of I 2I  Ii 2I ] into k disjoint, non-overlapping sets such that, for each m = 1 : : : k exactly one of the following holds for each Xi] i = 1 : : : k and each concretization rIJ : 1. if rIJ i] is an atomic interval temporal relation, there exists a pair Iq] Jp] such that Xi] = Iq] =  Jp] and hIq  Jpi satis	es the relation rIJ m] 2. if rIJ m] is i, there exists an Iq ] such that Xi ] = Iq] and there exists no Jp] such that Iq ] = Jp] 3. if rIJ m] is j there exists a Jp ] such that Xi] = Jp] and there exists no Iq] such that Jp] = Iq] 4. if rIJ m] is 0, then for no Iq ] Jp] is it the case that Xi] = Jp] or Xi] =  Iq ] .
Example 2 Consider the instantiation: I = fh0 1i h2 4ig J = fh0 10i h12 13ig.
This corresponds to the following scenario:  I  J  This instantiation c-satis	es the concretization hs pi, as well as hi d ji.
Notice that no well-behaved c-partition exists for this instantiation.
There are weaker, \natural" c-partitions which are not well-behaved.
Intuitively, natural cpartitions are any that partition on the basis of temporal proximity.
They are natural because they correspond to the manner in which recurrence patterns are organized in thought and communicated.
3.1 Generating a Recurrence Scenario  A scenario for a set of n repeating events I can be viewed as a set C = r1 : : : rn(n;1) of concretizations of recurrence relations, one for each pair of elements of I , that satisfy certain properties.
Intuitively, for each i = 1 : : : n(n ; 1), the set fri]1 : : :ri]n(n;1)g contains consistent temporal information.
The  computational problem of interest, then, is that of generating a consistent set of concretizations from a speci cation.
The notion of a concretization network aids in solving this problem: De nition 6 (Concretization Network) Given a RA-network, M , M c is a conc of M c cretization of M if each edge MIJ is labeled with a concretization rIJ of the recurrence relation RIJ which labels the edge MIJ of M .
This leads,  nally, to the generalization of the notion of a consistent scenario: De nition 7 (k-Scenario) A concretization network M c of RA-relations is a k-scenario of a network M if every edge in M c is labeled by a concretization of length k of the corresponding relation in M .
M c is a consistent k-scenario if there is an instantiation of all the variables in M c that c-satis	es all the labels on the edges of M c .
A simple method transforms a concretization network into a set of interval relation networks.
De nition 8 (I-transformation of a 	nite concretization network).
Given a 	nite concretization network M c , and index p = 1 : : : k, where k is the maximum length of any concretization in M c, the pth I-transformation of M c is a network M p] de	ned as follows: 1.
Each vertex of M p] represents an element of some I in M for which the pth element of the concretization rIJ (denoted by rp]IJ ) on the arc MIJ (equivalently: on the arc MJI ) consists of either an atomic interval relation or i 2.
For each pair of vertices I , J , the arc M p]IJ is labeled as follows:   M p]IJ = rp]IJ , if rp]IJ is an  atomic interval relation otherwise  M p]IJ =??
where ??
denotes the universal interval relation (i.e., the relation that all pairs of intervals satisfy).
M is an I-transformation of a concretization network M c if, for some p, M is M p], the pth I -transformation of M c.  Remark 2 An I-transformation is a convex interval relation network.
It is now possible to reduce the problem of generating a consistent scenario from a concretization network to the problem of generating a set of solutions to interval networks.
This reduction is based on the following result, whose proof follows immediately from the preceding de nitions:  Theorem 1 A concretization network M c is a (	nite) m-scenario of an RA-  network M if:  c of M c is labeled by 1.
Each edge MIJ a member of the set RcIJ of concretizations of the relation RIJ on arc MIJ  and  2.
For each k = 1 : : : m, the Itransformation M k] of M c has a consistent scenario.
Example 3 Consider the following RA-network:  fi fi    89d!oi(fp pig)  99d!
(fpig) I - J BMB  BB  o BB  99d!
(fpigB)  89d!
(fmg)  BB  B   fi    K  A concretization network for this RAnetwork is the following:  J Y HHH hpi pi H C     HHH HH  CC  CC hm mi C     CC  > fi fi fi CCW fi fifi hi pii K  I  This network is a 2-scenario of the previous network.
The theorem suggests that the problem of generating k-scenarios from speci cations of recurrence relations stored as a RA-network M can be reduced to the problem of taking a set I = I1 : : :  In of repeating events and their n(n ; 1) relations and generating an n(n ; 1)  k matrix such that  The set of values in each column of the matrix de ne relations which can be I-transformed into a scenario for a set of intervals and  Each row of the matrix de nes a concretization for the recurrence relation for some pair of repeating events.
An algorithm based on this reduction has been designed it will be discussed in future work.
The algorithm is similar to, and in fact utilizes, a technique similar to that employed by Ladkin 3] for generating a scenario of interval temporal relations.
4 Summary  The objective here has been the development of a framework for reasoning about the recurrence of temporal relations.
To meet this objective, we focus on speci cations of recurrence whose counterparts in natural language involve the application of an adverbial modi er to a prepositional phrase describing a temporal order.
These contexts are mapped into second-order unary relational expressions interpreted over pairs of collections of intervals.
The class RA of recurrence relation is a subset of the Q9-class of relation, which were found to make up the logical structure of relation recurrence.
Knowledge expressible as an RA-relation can be stored and manipulated within a constraint-based framework.
In particular, the main result of this paper was showing how recurrence scenarios can be generated from speci cations of recurring events.
References  1] Allen, J.
(1983) Maintaining Knowledge About Temporal Intervals.
In Brachman, R., and Levesque, H., (eds.)
Readings in Knowledge Representation, (San Mateo:Morgan Kaufman), 510- 521.
2] Ladkin, P.B.
and Maddux, R. (1988) The Algebra of Constraint Satisfaction and Temporal Reasoning.
Technical Report, Kestrel Institute, Palo Alto, CA.
3] Ladkin, P.B., On Binary Constraint Problems.
Journal Of the ACM Vol.
41, Number 3, 435-469.
4] Ligozat, G., On Generalized Interval Calculi.
In Proceedings of the Ninth National Conference on Arti	cial Intelligence (AAAI-91), 234240.
5] Morris, R., Shoa, W., Khatib, L., Path Consistency in a Network of Non-Convex Intervals.Proceedings of the 13th International Joint Conference on Arti	cial Intelligence (IJCAI-93), Chambery, France (1993), pp.
650-655.
6] Morris, R., Shoa, W., and AlKhatib, L., (1994) Reasoning about Recurrence.
Forthcoming in The Journal of Computational Intelligence.
7] Van Beek, P. (1990).
Exact and Approximate Reasoning about Qualitative Temporal Relations.
Technical Report TR 90-29, University of Alberta, Edmonton, Alberta, Canada.
OH PT  BN  CM  HH j  LR FM  ?
QQs  ?
PPP PPq  Figure 1: A scenario for the academic scheduling example  English Context I only before J  Second-order Form First-order Equivalent I 89d!o(fpg) J (8i 2 I )(9 !j  I always before J  I 89d!oi(fpg) J  d  I always and only before J I 89d!ouoi(fpg) J I before J I sometimes before J  I 89d!
(fpg) J  2  J )COR(i j )^ fpg(i j )^ (8i 2 I )(8j 2 J )COR(i j ) !
fpg(i j )] (8j 2 J )(9d !i 2 I ) COR(i j ) ^fpg(i j ) ^  (8i 2 I )(8j 2 J )COR(i j ) !
fpg(i j )] (8j 2 J )(9d !i 2 I ) COR(i j ) ^ fpg(ij ) ^ (8j 2 J )(9i 2 I ) COR(i j ) ^fpg(i j ) ^  (8i 2 I )(8j 2 J )COR(i j ) !
fpg(i j )] (9i 2 I )(9d !j 2 J ) COR(i j ) ^fpg(i j ) ^  (8i 2 I )(8j 2 J )COR(i j ) !
fpg(i j )] (9i 2 I )(9d !j 2 J ) COR(i j ) ^ fpg(i j )  I 99d!
(fpg) J Table 1: Interpreting Recurrence