Propagating Possibilistic Temporal Constraints Rasiah Loganantharaj  1 Introduction  Automated Reasoning laboratory The Center for Advanced Computer Studies University of SouthWestern Louisiana Lafayette, LA - 70504  The notion of time plays an important role in any intelligent activities.
Time is represented either implicitly or explicitly.
We are interested in explicit representation of time.
The popular approaches for such representation are based on points or intervals or a hybrid of both.
Propositional temporal assertions are represented as relations among the points, or among the intervals.
The indenite information among either the points or the intervals are represented as disjunctions.
In real world, information is often incomplete, imprecise, uncertain and approximate.
Temporal knowledge is not an exception to this reality.
For example, consider the following information: John often drinks coee during his breakfast.
Sometimes, he drinks his coee before the breakfast and drinks orange juice during his breakfast.
There were few occasions he drank water during his breakfast and drank coee after the breakfast.
Mike talked to John over the phone while John was having coee.
Suppose, we are interested in nding out how Mik's telephone conversation was related to John's breakfast.
From the given information, we have denite relation between the telephone call and John's coee, but there is no information about the relationship between the coee and the breakfast on that particular day.
In the absence of such information, we can use John's habitual pattern to infer plausible relations.
Suppose, Ic and Ib respectively represent the interval over which John was having coee, and John was having breakfast.
Let It represents the interval over which Mike was having telephone conversation with John.
In interval logic, the information is represented as It is during Ic , and Ic is before or during or after Ib .
In such representation, the disjunctive relations do not provide any clue about which relation is highly probable than the others.
Instead, the representation may let us believe that all the relations of a disjunction have equal probability, for example, having coee before, during or after breakfast has equal probability.
This is not what the original information tells us.
Based on John's habit, having coee during breakfast is much more probable than having coee either before or after the breakfast.
This issues have not been studied in temporal reasoning.
In  this paper we will provide a representation to specify uncertain information and to propagate them over temporal constraint network.
This paper is organized as the following.
We introduce interval-based logic in Section 2.
In Section 3, we describe the representation of uncertain temporal knowledge and its propagation.
This paper is concluded by a summary and discussion in section 4.
2 Background on Interval Based System Allen 1] has proposed an interval logic that uses time intervals as primitives.
In this logic, the following seven relations and their inverses are dened to express the temporal relations between two intervals: before(after), meets(metby), overlaps(overlapped-by), starts(started-by), during(contains), ends(ended-by), and equals.
Here, the inverse relations are indicated within parentheses.
Since the inverse of equal is same as itself, there are, in fact, only thirteen relations.
Temporal inferencing is performed by manipulating the network corresponding to the intervals.
Each interval maps onto a node of a network called temporal constraint network (TCN).
A temporal relation, say R, from an interval, say Ii , to another interval, say Ij , is indicated by the label Rij on the directed arc from Ii to Ij .
Obviously, the label Rji of the directed arc from Ij to Ii is the inverse relation of Rij .
If we have denite information about the relation Ii to Ij then Rij will be a primitive interval relation, otherwise it will be disjunctions of two or more primitive interval relations.
Suppose the relation Ii to Ij (Rij ) and the relation Ij to Ik (Rjk ) are given.
The relation between Ii and Ik , constrained by Rij and Rjk , is given by composing Rij and Rjk .
In general, Rij and Rjk can be disjunctions of primitive relations, they are represented as: 1  r2  : : : rn g Rij = frij1  rij2  : : : rijm g and Rjk = frjk jk jk where rij is one of the primitive relations dened in the system.
The interval Ii is related to the interval Ik by the temporal relation given by the following expression:  Rij  Rjk =  (  p) (rijl  rjk  )  l=1:::m p=1:::n p l where (rij  rjk) is a composition (transitive relap , and is obtained from the entry tion) of rijl and rjk j of the transitivity table 1] at the riji row and the rjk  column.
Alternatively this could be written as Rij  Rjk = fT(rij  rjk)jrij 2 Rij ^ rjk 2 Rjkg where T(rij  rjk) is the value of Allen's look up composition table of row rij and column rjk .
Temporal constraints are propagated to the rest of the network to obtain the minimal temporal network in which each label between a pair of intervals is minimal with respect to the given constraints.
Vilain et al.
7] have shown that the problem of obtaining minimal labels for an interval-based temporal constraint network is NP-complete.
Approximation algorithms, however, are available for temporal constraint propagation.
Allen proposed an approximate algorithm that has an asymptotic time complexity of O(N 3 ) where N is the number of intervals.
His algorithm is an approximate one in the sense that it is not guaranteed to obtain the minimum relations, but it always nd the superset of the minimal label.
Since any set is a super set of a null set it is not very comforting because it is possible that global inconsistency may be hiding under 3-consistency.
3 Representation of Uncertainty  The problem of uncertainty is not new to AI problem solving.
In many expert system applications, uncertainty have been studied under approximate reasoning.
Mycin system 6, 2] has used certainty factor whose value varies from -1 to 1 through 0 to represent the condence on an evidence or on a rule.
The value 1 indicates the assertion is true while the value -1 indicates the evidence is false.
0 indicates no opinion on the evidence.
The other values correspond to some mapping of the belief on the evidence onto the scale of -1 to 1.
Prospector model 4, 5] uses probabilistic theory with Bayes' theorem and other approximation techniques to propagate evidences over causal network.
Fuzzy logic 8] has also been used in expert systems to capture knowledge with fuzzy quantiers such as `very much', `somewhat' etc.
Other techniques have also been used to handle uncertainty in expert systems.
Let us look back at the same example presented in the introduction of this paper.
John often drinks coee during his breakfast.
Sometimes he drinks his coee before the breakfast and drinks orange juice during his breakfast.
There were few occasions he drank water during his breakfast and drank coee after the breakfast.
The statement has fuzzy quanties indicating that the frequency of John having coee during his breakfast is much higher than he is having coee either before or after his breakfast.
We should capture the fuzzy quantiers into probabilistic measures in our temporal constraint representation such that the summation of the probabilities of the relations between a pair of intervals is equal to 1.
Let us represent this idea more formally.
The relation Rij , the relation Ii to Ij , is represented as frij1 (w1) rij2 (w2) ::: rijm(wm )g where rijl (wl ) is a primitive relation with its probability or the relative weight of wl .
Since each primitive relation between a pair of intervals is associated with a weight to represent the probability or the relative strength, the summation of the weights must be equal to 1 which we P call probabilistic condition for the weights.
That is, mi=1 wi = 1.
The boundary value of the weight 1 indicates that the relation is true while the value 0 indicates that the relation is false.
Further, the inverse relation of Rij will be the inverse of all the primitive relations of Rij with the same weights.
In the presence of new evidences, the probability values of the relations are modied to take account of the new evidences.
That is, when the relations between a pair of intervals are modied or rened because of other constraining relations, the probability or the weights of the relations are adjusted to satisfy the probabilistic condition.
This process is called normalization.
Let us explain this with an example: Suppose (1) R12 = fb(0:6) O(0:3) d(0:1)g, (2) R13  R32 = fb(0:4) o(0:5) m(0:1)g. The relation R12 is rened to fb(w1) o(w2)g. The weights w1 and w2 are computed using the intersection operation and then the weights are normalized such that w1 + w2 = 1.
When propagating constraints with probabilistic weights, we may need to dene such as union, intersection, composition and normalization operations which are used in propagation.
0  0  Union operation:  Rij p Rij = fr(w)jr(wij ) 2 Ri ^ r(wij ) 2 Rj ^ w = max(wij  wij )g 0  0  0  Intersection Operation:  Rij \p Rij = fr(w)jr(wij ) 2 Ri ^ r(wij ) 2 Rj ^ w = min(wij  wij )g 0  0  0  Composition Operation: Rij  Rjk =  l (wl ) 2 Rij ^ rm (wm ) 2 Rjk fp r(w)jrij jk l  rm ) ^ w = min(wl  wm )g ^ r = T(rij jk  Normalization operation: Suppose the label Rij takes the following form after renement 1 (w ) r2 (w ) ::: rm(w )g. Let w = Pm w .
frij 1 ij 2 ij m i=1 i After normalization operation the label becomes frij1 (w1) rij2 (w2) :::Prijm(wm )g where wi = wi=w which ensures that mi=1 wi = 1 In this approach we use possibilistic ways of combin0  0  0  0  0  ing the constraints as has been used in many expert systems under uncertainty.
3.1 Temporal Propagation  A temporal constraint network (TCN) is constructed from the given temporal assertion such that each node of the constraint network represents each interval of the temporal assertions.
The labels on each arc of a TCN corresponds to the relations between the corresponding intervals.
Further the summation of the weights of each component in each arc should be equal to 1.
If no constraint is specied between a pair of intervals it will take a universal constraint1 as label in the TCN and it will not be used for the purpose of propagation.
When propagating a constraint, other label of the network may get updated to a subset of its label.
The process of updating of a label as a result of propagating a constraint is called label renement.
The label renement takes the following forms: (1) The weights of the labels of an arc get changed, or (2) the primitive relations of a label get reduced.
In either case normalization operation is performed to ensure the summation of the weights adds to 1.
Suppose we are propagating the label Rij of the arc < I J > to the arc < I K > of the triangle IJK.
Let the labels of the arcs < J K > and < I K > are respectively Rjk and Rik.
The new label of the arc < I K > is computed as Rik \ fRij  Rjkg.
When the new relation is not null the weights on the label are normalized.
3.2 Temporal Constraints Propagation Algorithm for uncertain constraints  This is an extension of Allen's propagation algorithm.
The algorithm uses a rst in rst out (FIFO) queue to maintain the constraints that need to be propagated.
Initially all the pairs of constrained intervals are placed into the queue.
The propagation of constraints is initiated by removing an arc, say < Ii  Ij >, from the queue and checking whether the relation between Ii to Ij can constrain the relations on all the arcs incident to either Ii or Ij except the arc < Ii Ij >.
When a new relation is constrained, that is, the old label is modied, the arc (the pair of intervals related by this relation) is placed in the queue.
The main propagation algorithm is described in Figure 1.
In this algorithm, we use the notation Rij to denote the label of the arc i to j.
When we omit the weights on the labels and use the union, the intersection operations of set, and the composition operation of temporal logic, the algorithm becomes identical to the one of Allen's 1].
One may expect the asymptotic complexity to be O(N 3 ) where N is the number of nodes of the TCN.
Intuitively one may make a conclusion that this algorithm 1 a universal constraint is the weakest constraint and thus it is a disjunctions of all the primitive relations of the time model  will also converge in O(N 3) time.
This may be misleading because we have not yet considered the instability eect of the algorithm due to it normalization operation.
An arc is placed back in the queue when either the number of primitive relations of the label is reduced or the weight of the primitive relation of the label is modied even when the label remains unchanged.
An arc may be placed in the queue at most 12 times as a result of the disjunctive relations being rened one at a time till it becomes a singleton relation.
On the other hand, the number of times an arc is placed in the queue due to the change of weight depends on the following parameters: (1) the resolution of the weights (the number of decimal places that counts) and (2) the error bound we are prepared to tolerate.
A complete study on these issues can be found in one of our report 3].
Let us consider an example.
The probability of `having coee' before breakfast is 0.15, during breakfast is 0.8 and after breakfast is 0.05.
The probability of `having a coee' overlapping `reading morning newspaper' is 0.8 and `having coee' meets `reading the newspaper' is 0.2.
Suppose we want to nd the relation between having breakfast and reading newspaper.
Let us propagate the constraints and nd out how the labels gets rened.
Suppose Ib  Ic  Ir respectively represent the intervals of having breakfast, coffee and reading newspaper.
Using the notations dened in this paper we can dene the labels of the initial TCN as following.
Initial TCN Rcb = fb(0:15) d(0:8) a(0:05)g Rcr = fo(0:8) m(0:2)g Rbr = to be computed TCN after propagating Rbc to < Ib  Ir > Rcb = fb(0:15) d(0:8) a(0:05)g Rcr = fo(0:8) m(0:2)g Rbr = fo(:8) oi(:15) d(:15)di(:8)f(:15) fi(:8) b(:05) a(:15)g After normalizing Rbr Rbr = fo(:26) oi(:049) d(:049) di(:26)f(:049) fi(:26) b(:024) a(:049)g This is also the 3-consistent TCN labels.
4 Summary and Discussion  In many real world applications we are faced with the information that is incomplete, indenite, imprecise and uncertain.
When explicit time was used for temporal reasoning, indenite information is accommodated as disjunctions.
For example, drinking coffee is either before, during or after the breakfast.
The disjunctive information implicitly assume equal probability of occurrence even though exactly one can be true between a pair of intervals (points).
In such representation we fail to distinguish or dierentiate the highly probable one from the remotely possible one.
According to our example, having coee during breakfast is highly probable than having coee before  procedure propagate1() 1 While queue is not empty Do 2  f  3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  g  get next < i j > from the queue /* propagation begins here */ For ( ( k 2 set of intervals ) ^k 6= i ^ k 6= j )Do f temp 	 Rik \p (Rij  Rjk) If temp is null Then signal contradiction and Exit Normalize temp If Rik 6= temp Then f place < i k > on queue Rik 	 temp g temp 	 Rkj \p (Rki  Rij ) If temp is null Then signal contradiction and Exit Normalize temp If Rkj 6= temp Then f place < k j > on queue Rkj 	 temp g  g  Figure 1: propagation algorithm or after a breakfast.
In this paper we have proposed a formalism to represent temporal constraints with the associated probabilistic weights and use them to propagate to the rest of the network to obtain 3-consistency.
We have extended Allen's algorithm to handle probabilistic relations among intervals.
The operations we have dened for the labels with weights are applicable to both the points and the intervals.
Therefore, our formalism will be applicable to both the points and the intervals.
Acknowledgement  This research was partially supported by a grant from Louisiana Education Quality Support Fund (LEQSF).
References  1] J. F. Allen.
Maintaining knowledge about temporal intervals.
Communications of ACM, 26(11):832{843, 1983.
2] B. G. Buchanan and E. H. Shortlie Eds.
RuleBased Expert Systems.
Addision-Wesley, 1984.
3] R. Loganantharaj.
Complexity issues of possibilistic temporal reasoning.
preperation, 1994.
4] J. Gaschnig R. O. Duda and P. E. Hart.
Model design in the prospector consultant system for mineral exploration.
In D. Michie, editor, Expert Systems in the Microelectronics Age.
Edinburgh University Press, 1979.
5] P. E. Hart R. O. Duda and N. J. Nilsson.
Subjective bayesian methods for rule-based inference  systems.
In Proceedings of the AFIPS National Computer Conference, volume 45, 1976.
6] E. H. Shortlie.
Computer Based Medical Consultations:MYCIN.
Elsvier, 1976.
7] M. Vilain and H. Kautz.
Constraint propagation algorithm for temporal reasoning.
In Proceedings of AAAI-86, pages 377{382, 1986.
8] L. A. Zadeh.
Making computers think like people.
IEEE Spectrum, pages 26{32, August 1984.