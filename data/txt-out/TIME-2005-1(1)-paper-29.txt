Time in Liverpool -- An overview of Temporal Research in the Logic and Computation Group Logic and Computation Group Department of Computer Science The University of Liverpool, Liverpool L69 7ZF, UK http://www.csc.liv.ac.uk/research/logics/  Abstract We provide an overview of the temporal research in the Logic and Computation Group at the University of Liverpool.
While we cover both recent and current work, a more comprehensive document and list of references is available from the above web site or the web pages of individual group members.
Members of the group have been instrumental in developing, and defining, research into reasoning and execution techniques for temporal logics and multi-modal and description logics.
Since the application of logical techniques within complex systems has shown the need for effective ways for handling combinations of modal and temporal logics, work within the group has led to key results in this area and members of the group have contributed to leading publications in the field [3, 42, 27, 21].
Reasoning in Temporal Logics While the verification of temporal properties of computational systems can be carried out in a number of ways, we have developed both resolution-based and tableau-based approaches.
A particular strength is in the development of clausal temporal resolution [20].
This has been shown to be relatively efficient and easy to mechanise [18].
The method is clausal which means temporal logic formulae must be translated into a normal form before resolution rules can be applied.
This normal form, which is identical to that which we use in our formal specifications and for execution (see later), also forms the basis of our work in combining logics.
The relationship between this normal form and various forms of automata has been studied in [6, 14].
Over recent years, we have extended the temporal basis of this resolution method to first order temporal logics [12, 39] and are continuing work on extending the approach to more powerful logics [8, 11].
Within the group, key results have been obtained regarding the decidability of  fragments of first-order temporal logic [29, 30, 31, 13] and their axiomatisations [44].
We have implemented theorem provers based on these ideas.
TRP++ [35] and TeMP [36] are theorem provers for propositional and monodic firstorder linear-time temporal logic, respectively.
TRP++ has been shown to perform well in comparison with other implemented decision procedures for this logic [34] while TeMP is being used for practical verification [25, 24].
Reasoning in Multi-Modal and Description Logics Proof methods for modal logics and multi-modal logics have been studied extensively within the group, for example, [10, 28].
Most of this work is concerned with translation-based resolution methods for modal logics.
In this approach modal formulae are translated into first-order logic through the Kripke semantics or some non-standard semantics for modal logics, and then some refinement of first-order resolution is applied.
Description Logics are related formalisms that have been used to specify and reason about knowledge bases.
These topics have been studied in, for example, [37, 38].
Reasoning with Combined Modal and Temporal Logics While individual modal, temporal or description logics have been studied extensively in the past, much less is known about combinations of modal logics and, in particular, about practical proof methods for such combinations [5].
In our work we have also been focusing on both resolution and tableau based proof methods for combinations of propositional linear and branching time temporal logics with modal logics [15, 32, 16, 17, 41] and combinations of temporal logics and description logics [40, 1, 43].
Formal Specification of Agent-Based Systems A key aspect concerning the practical use of agent technology is the software engineering techniques used by the system designer to move from abstract requirements to actual implementations.
Our approach concerns the use of formal  Proceedings of the 12th International Symposium on Temporal Representation and Reasoning (TIME'05) 1530-1311/05 $20.00 (c) 2005 IEEE  methods for agent development and, in particular, the use of modal and temporal logics [26, 19].
We have used the combination of modal and temporal logics and translations into fragments of classical first-order logics to reason about the KARO agent framework [33].
Also we have also investigated the extension of the agents' description to incorporate an explicit belief dimension in the form of a multi-context logic of belief with an explicit bound on the nesting of contexts [22] (see later).
concerned with executable specifications, via M ETATE M, of such systems.
Consequently, we have examined the logical mechanisms for grouping agents together, for specifying and implementing environmental conditions within each group of agents [23], and for specifying and implementing agent teams and their emergence from a collection of autonomous agents [22, 23].
Model Checking In addition to the formal specification of computational systems, various forms of verification are required.
One of the most popular, being automatic in the case of finite-state systems, is model checking.
Within the group we have, in the past, been involved in defining and implementing a model checker for linear-time temporal logic, and are now adapting this work to provide lightweight verification.
In addition, we have worked on extensions of the basic model checking approach for agent based systems [7] and are now looking at probabilistic approaches in this area [2].
[1] A. Artale, E. Franconi, F. Wolter, and M. Zakharyaschev.
A Temporal Description Logic for Reasoning over Conceptual Schemas and Queries.
In JELIA, pages 98-110, 2002.
[2] P. Ballarini, M. Fisher, and M. Wooldridge.
Probabilistic Model Checking for Automated Game Analysis: A Case Study.
Submitted.
[3] H. Barringer, M. Fisher, D. Gabbay, and G. Gough, editors.
Advances in Temporal Logic, volume 16 of Applied Logic Series.
Kluwer, 2000.
[4] H. Barringer, M. Fisher, D. Gabbay, R. Owens, and M. Reynolds, editors.
The Imperative Future: Principles of Executable Temporal Logic.
Research Studies Press, May 1996.
[5] B. Bennett, C. Dixon, M. Fisher, E. Franconi, I. Horrocks, U. Hustadt, and M. de Rijke.
Combinations of Modal Logics.
Artificial Intelligence Review, 17(1):1-20, Mar.
2002.
[6] A. Bolotov, M. Fisher, and C. Dixon.
On the Relationship between -Automata and Temporal Logic Normal Forms.
Journal of Logic and Computation, 12(4):261-581, Aug. 2002.
[7] R. H. Bordini, M. Fisher, W. Visser, and M. Wooldridge.
Model checking rational agents.
IEEE Intelligent Systems, 19(5):46-52, September/October 2004.
[8] J. Brotherston, A. Degtyarev, M. Fisher, and A. Lisitsa.
Implementing Invariant Search via Temporal Resolution.
In Proceedings of LPAR-2002, volume 2514 of Lecture Notes in Computer Science, pages 86-101.
Springer, 2002.
[9] N. de C. Ferreira, M. Fisher, and W. van der Hoek.
Practical reasoning for uncertain agents.
In Ninth European Conference on Logics in Artificial Intelligence (JELIA), volume 3229 of Lecture Notes in Artificial Intelligence, pages 82- 94.
Springer, 2004.
[10] H. De Nivelle, R. A. Schmidt, and U. Hustadt.
ResolutionBased Methods for Modal Logics.
Logic Journal of the IGPL, 8(3):265-292, 2000.
[11] A. Degtyarev, M. Fisher, and B. Konev.
Handling equality in monodic temporal resolution.
In Proceedings of 10th International Conference on Logic for Programming, Artificial Intelligence, and Reasoning (LPAR), volume 2850 of Lecture Notes in Computer Science, pages 214-228, Almaty, Kazakhstan, 2003.
Springer.
[12] A. Degtyarev, M. Fisher, and B. Konev.
Monodic Temporal Resolution.
ACM Transactions on Computational Logic, 2005.
To appear.
[13] A. Degtyarev, M. Fisher, and A. Lisitsa.
Equality and Monodic First-Order Temporal Logic.
Studia Logica, 72(2):147-156, Nov. 2002.
References  High-Level Programming Languages Our research in this area particularly addresses the need to provide a tight link between theory and implementation.
Thus, we have chosen to use simple logics, and then directly execute logical specifications in order to provide programming technologies for entities specified in these logics.
In particular, we directly execute temporal formulae in order to provide their implementation [19].
This approach follows the imperative future paradigm [4] and applies an iterative forward-chaining process to a set of SNF rules in order to construct a model for the specification.
Since the model is a linear, discrete sequence of states, and since forward chaining is applied, model construction in this way mimics execution in more standard programming languages.
This approach is captured in the M ETATE M programming language [4].
To enable deliberation to be implemented, we have extended M ETATE M with the agent's capability to dynamically re-order its goals.
More recently, we extended this approach with a bounded belief dimension, thus characterizing a variety of resource-bounded agents [22], and probabilistic beliefs [9].
Programming Groups, Teams and Organisations While much of our work on direct execution of formal specifications has concerned individual components, we are increasingly working on larger conglomerations of software entities.
In particular, since software is generally moving towards a more component-based model, in which programs are made up of autonomous sub-components that can be dynamically interchanged at run time, we are 2  Proceedings of the 12th International Symposium on Temporal Representation and Reasoning (TIME'05) 1530-1311/05 $20.00 (c) 2005 IEEE  [14] C. Dixon, A. Bolotov, and M. Fisher.
Alternating Automata and Temporal Logic Normal Forms.
Annals of Pure and Applied Logic, 2005.
To appear.
[15] C. Dixon and M. Fisher.
Clausal Resolution for Logics of Time and Knowledge with Synchrony and Perfect Recall.
In H. Wansing and F. Wolter, editors, Proceedings of the Third International Conference on Temporal Logic (ICTL), pages 43-52, Leipzig, Germany, Oct. 2000.
[16] C. Dixon, M. Fisher, and A. Bolotov.
Clausal Resolution in a Logic of Rational Agency.
Artificial Intelligence, 139(1):47-89, July 2002.
[17] C. Dixon, C. Nalon, and M. Fisher.
Tableaux for Logics of Time and Knowledge with Interactions Relating to Synchrony.
Journal of Applied Non-Classical Logics, 14(4):397-445, 2004.
[18] M. Fernandez Gago, M. Fisher, and C.Dixon.
Algorithms for Guiding Clausal Temporal Resolution.
In Proceedings of 25th German Conference on Artificial Intelligence (KI2002), Lecture Notes in Artificial Intelligence, pages 235- 249, Aachen, Germany, Sept. 2002.
Springer.
[19] M. Fisher.
Temporal Development Methods for AgentBased Systems.
Journal of Autonomous Agents and MultiAgent Systems, 10(1):41-66, Jan. 2005.
[20] M. Fisher, C. Dixon, and M. Peim.
Clausal Temporal Resolution.
ACM Transactions on Computational Logic, 2(1):12-56, Jan. 2001.
[21] M. Fisher, D. Gabbay, and L. Vila, editors.
Handbook of Temporal Reasoning in Artificial Intelligence, volume 1 of Foundations of Artificial Intelligence Series.
Elsevier, 2005.
[22] M. Fisher and C. Ghidini.
The ABC of Rational Agent Programming.
In Proc.
First International Conference on Autonomous Agents and Multi-Agent Systems (AAMAS), pages 849-856.
ACM Press, July 2002.
[23] M. Fisher, C. Ghidini, and B. Hirsch.
Programming Groups of Rational Agents.
In Computational Logic in Multi-Agent Systems (CLIMA-IV), volume 3259 of 849-856.
Springer, November 2004.
[24] M. Fisher, B. Konev, and A. Lisitsa.
Practical InfiniteState Verification with Temporal Reasoning.
In Proceedings VISSAS-2005, 2005.
[25] M. Fisher and A. Lisitsa.
Monodic ASMs and Temporal Verification.
In International Workshop on Abstract State Machines (ASM 2004), volume 3052 of Lecture Notes in Computer Science.
Springer, 2004.
[26] M. Fisher and M. Wooldridge.
Temporal Reasoning in Agent Based Systems.
In Handbook of Temporal Reasoning in Artificial Intelligence.
Elsevier, 2005.
[27] D. Gabbay, A. Kurucz, F. Wolter, and M. Zakharyaschev.
Many-Dimensional Modal Logics: Theory and Applications, volume 148 of Studies in Logic and the Foundations of Mathematics.
Elsevier, 2003.
[28] H. Ganzinger, U. Hustadt, C. Meyer, and R. A. Schmidt.
A resolution-based decision procedure for extensions of K4.
In M. Zakharyaschev, K. Segerberg, M. de Rijke, and H. Wansing, editors, Advances in Modal Logic, Volume 2, volume 119 of Lecture Notes, pages 225-246.
CSLI Publications, Stanford, 2001.
[29] I. Hodkinson, F. Wolter, and M. Zakharyaschev.
Decidable Fragments of First-Order Temporal Logics.
Annals of Pure Applied Logic, 106(1-3):85-134, 2000.
[30] I. Hodkinson, F. Wolter, and M. Zakharyaschev.
Monodic fragments of first-order temporal logics: 2000-2001 A.D.
In LPAR, pages 1-23, 2001.
[31] I. Hodkinson, F. Wolter, and M. Zakharyaschev.
Decidable and Undecidable Fragments of First-Order Branching Temporal Logics.
In LICS, pages 393-402, 2002.
[32] U. Hustadt, C. Dixon, R. A. Schmidt, and M. Fisher.
Normal Forms and Proofs in Combined Modal and Temporal Logics.
In Proceedings of the Third International Workshop on Frontiers of Combining Systems (FroCoS), volume 1794 of LNAI, pages 73-87.
Springer, 2000.
[33] U. Hustadt, C. Dixon, R. A. Schmidt, M. Fisher, J. J. Meyer, and W. van der Hoek.
Verification within the KARO Agent Theory.
In Proceedings of the first Goddard Workshop on Formal Approaches to Agent-Based Systems, Lecture Notes in Artificial Intelligence, pages 33-47, Goddard Space, Flight Center, Greenbelt, Maryland, USA, Apr.
2000.
Springer.
[34] U. Hustadt and B. Konev.
TRP++: A Temporal Resolution Prover.
In Proceedings of 3rd International Workshop on the Implementation of Logics, Tbilisi, Georgia, Oct. 2002.
[35] U. Hustadt and B. Konev.
TRP++ 2.0: A temporal resolution prover.
In Automated Deduction--CADE-19, volume 2741 of Lecture Notes in Artificial Intelligence, pages 274-278.
Springer, 2003.
[36] U. Hustadt, B. Konev, A. Riazanov, and A. Voronkov.
TeMP: A temporal monodic prover.
In D. A. Basin and M. Rusinowitch, editors, Proceedings of the Second International Joint Conference on Automated Reasoning (IJCAR), volume 3097 of LNAI, pages 326-330.
Springer, 2004.
[37] U. Hustadt and R. A. Schmidt.
Issues of decidability for description logics in the framework of resolution.
In R. Caferra and G. Salzer, editors, Automated Deduction in Classical and Non-Classical Logics, volume 1761 of LNAI, pages 192-206.
Springer, 2000.
[38] U. Hustadt, R. A. Schmidt, and L. Georgieva.
A Survey of Decidable First-Order Fragments and Description Logics.
JoRMiCS, 1:251-276, 2004.
[39] B. Konev, A. Degtyarev, C. Dixon, M. Fisher, and U. Hustadt.
Mechanizing First-Order Temporal Resolution.
Information and Computation, 2005.
To appear.
[40] C. Lutz, H. Sturm, F. Wolter, and M. Zakharyaschev.
Tableaux for Temporal Description Logic with Constant Domains.
In IJCAR, pages 121-136, 2001.
[41] C. Nalon, C. Dixon, and M. Fisher.
Resolution for Synchrony and No Learning.
In R. Schmidt, I. Pratt-Hartmann, M. Reynolds, and H. Wansing, editors, AiML-2004: Advances in Modal Logic.
Kings College Press, 2005.
To appear.
[42] A. Robinson and A. Voronkov, editors.
Handbook of Automated Reasoning.
Elsevier, 2001.
[43] H. Sturm and F. Wolter.
A Tableau Calculus for Temporal Description Logic: the Expanding Domain Case.
Journal of Logic and Computation, 12(5):809-838, 2002.
[44] F. Wolter and M. Zakharyaschev.
Axiomatizing the monodic fragment of first-order temporal logic.
Annals of Pure Applied Logic, 118(1-2):133-145, 2002.
3  Proceedings of the 12th International Symposium on Temporal Representation and Reasoning (TIME'05) 1530-1311/05 $20.00 (c) 2005 IEEE