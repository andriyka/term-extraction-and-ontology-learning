Modal Event Calculi with Preconditions* Iliano Cervesatot , Massimo Franceschett:, and Angelo Montanarit t Department of Computer Science  Carnegie Mellon University 5000 Forbes Avenue - Pittsburgh, PA 15213-3891 iliano@cs.cmu.edu  Abstract  languages can be exploited to express boolean combinations of MVI computations and limited forms of quantification.
The range of queries that can be expressed in EC is too limited for modeling realistic situations, even when permitting boolean connectives.
Expressiveness can be improved either by extending the representation capabilities of EC to encompass a wider spectrum of situations, or by enriching the query language of this formalism.
In this paper, we explore both aspects relatively to a specific subclass of EC problems consisting of a fixed set of events that are known to have happened, but with incomplete information about the relative order of their occurrences [l,2, 3, 7, 8, 121.
In many common situations, the occurrence of an event is no guaranty that a property is initiated or terminated.
For example, turning the key in the ignition will start a car only if there is gasoline in the tank.
In these situations, the effect of an event happening is tied to the validity of a number of properties, or preconditions, at its occurrence time.
Computing MVIs in the presence of preconditions acquires a recursive flavor since an event initiates or terminates an MVI if and only if each of its preconditions is satisfied when it occurs, i.e.
if and only if it occurs inside an MVI for each of its preconditions.
Syntactic restrictions can however be imposed in order to ensure termination.
In this case, the complexity of computing an MVI remains polynomial, but the exponent is a function of the nesting degree of the preconditions.
Even with the addition of preconditions, the MVIs derived by EC bear little relevance when only partial knowledge about event ordering is available.
Indeed, in these situations, the acquisition of additional knowledge about the actual event ordering might both dismiss current MVIs and validate new MVIs [5].
It is instead critical to compute precise variability bounds for the MVIs of the (currently underspecified) actual ordering of events.
Optimal bounds have been identi-  Kowalski and Sergot's Event Calculus (EC) is a simple temporal formalism that, given a set of event occurrences, allows the derivation of the maximal validi t y intervals (MVIs) over which properties initiated or terminated by those events hold.
The limited expressive power of EC is notably augmented by permitting events to initiate or terminate a property only i f a given set of preconditions hold at their occurrence time.
W e define a semantic formalization of the Event Calculus with Preconditions.
W e gain further expressiveness b y considering modal variants of this formalism, and show how to adapt our semantic characterization to encompass the additional operators.
W e discuss the complexi t y of M V I validation and describe examples showing that modal event calculi with preconditions can be successfully exploited to deal with real-world applications.
1 Introduction The Event Calculus, abbreviated EC [ll],is a simple temporal formalism designed to model situations characterized by a set of events, whose occurrences have the effect of starting or terminating the validity of determined properties.
Given a possibly incomplete description of when these events take place and of the properties they affect, EC is able to determine the maximal validity intervals, or MVIs, over which a property holds uninterruptedly.
The algorithm EC relies on for the verification or calculation of MVIs is polynomial [6].
It can advantageously be implemented as a logic program.
Indeed, the primitive operations of logic programming *The first author was partially supported by NFS grant CCR9303383 and by a scholarship for specialization overseas from the University of Udine.
The work of the third author was partially supported by the CNR project Ambienti e strumenti per la ges-  tione di informazioni temporali.
0-8186-7937-9/97 $10.000 1997 IEEE  Dipartimento di Matematica e Informatica UniversitA di Udine Via delle Scienze, 206 - 33100 Udine, Italy tfranceschet@uniud.it; montana@dimi.uniud.it  38  fied in the set of necessary MVIs, or U-MVIs, and the set of possible MVIs, or 0 - M V I s .
They are the subset of the current MVIs that are not invalidated by the acquisition of new ordering information, and the set of intervals that are MVIs in at least one completion of the current ordering of events, respectively.
In [2], we defined a Generalized Modal Event Calculus (without preconditions), GMEC, that reduces the computation of U-MVIs and 0-MVIs to the derivation of basic MVIs, mediated by the resolution of the operators U and 0 from the modal logic Kl.1, a refinement of S4 [15].
The query language of GMEC permits a free mixing of boolean connectives and modal operators, recovering the possibility of expressing a large number of common situations, but at the price of intractability: the resolution of a GMEC query is indeed an NP-hard problem [4, 81.
In this paper, we focus on the integration of modal operators and preconditions.
This combination has received limited attention in the literature [7, 81, although the resulting calculus benefits from the added expressiveness of both features.
Its computational complexity is however known to be beyond tractability.
The main contributions of this paper lie in the formalization for the first time of an Event Calculus with Preconditions ( P E C ) , the extension of the resulting semantics to cope with modal operators (PMEC and PGMEC), and the formal analysis of the complexity of the calculi.
We invite the interested reader to consult [8] for a more detailed discussion of the topics treated in this paper, and for the proofs of the statements we mention.
The paper is organized as follows.
Section 2 first gives a formal account of PEC and of its semantics, and then extends it to PGMEC with a treatment of the modal operators and connectives of this formalism.
Case studies drawn from the domains of medicine and fault diagnosis are described in Section 3.
Section 4 proposes a complexity analysis for the calculi considered in this paper.
Finally, Section 5 summarizes the main points of the paper and outlines directions of future work.
Section 4.
The Event Calculus with Preconditions (PEC).and its modal variants aim at modeling situations that consist of a set of events, whose occurrences over time have the effect of initiating or terminating the validity of properties when given preconditions are met.
We formalize the time-independent aspects of a situation by means of a PEC-structure, defined as follows.
Definition 2.1 (PEC-structure) A structure for the Event Calculus with Preconditions (PEC-structure for short) is a quadruple 7-1 = ( E , P, [ .
I . )
, (-1.1) such that: 0  0  2 Modal Event Calculi with Preconditions In this section, we first give a formalization of the syntax and semantics of PEC and adapt it to encompass PGMEC; then we present some relevant properties of these formalisms.
Implementations in the language of hereditary Harrop formulas [9] have been given in [8], together with formal proofs of soundness and completeness with respect to the specifications below.
We will analyze the complexity of these calculi in  39  E = { e l , .
.
.
,e,} and P = {PI,.
.
.
, p m } are finite sets of events and properties, respectively.
Elements of 2 p are called contexts and the properties in them are referred to as preconditions.
[.I.)
: P x 2 p -+ 2 E and (.I.]
: P x 2 p -+ 2 E are respectively the initiating and terminating map of 7-1.
For every property p E P , [PIC) and (PIC] represent the set of events that initiate and terminate p , respectively, in case all preconditions i n C hold at their occurrence time.
0  Traditional formulations of the Event Calculus, EC [ll],also prescribe an exclusivity relation, which specifies which properties are not supposed to be holding at the same time.
The presence of preconditions in PEC permits an easy emulation of the exclusivity relation [8].
On the other hand, in the absence of incompatible properties, an EC problem is modeled by a degenerated PEC-structure where all contexts are empty.
Unlike the original presentation of EC [ll],we focus our attention on situations where the occurrence time of events is unknown.
Indeed, we only assume the availability of incomplete information about the relative order according to which these events have happened.
Therefore, we formalize the time-dependent aspects of a PEC problem by providing a strict partial order for the involved event occurrences.
We write W x for the set of all such orders over a PEC-structure 7-1 and use the letter w to denote individual orderings, or knowledge states, in Wx.
Given w E W x ,we will sometimes call a pair of events (e1,eZ) E w an interval.
For reasons of efficiency, implementations generally represent the current situation w as a quasi-order 0,from which w can be recovered as the transitive closure o+ of 0.
We denote with O x the set of all quasi-orders over 3-1; clearly W x 5 O x .
In the following, we will often work with extensions of an ordering w , defined as any element of W x that contains w as a subset (recall that an order is a relation, i.e.
a set of pairs).
We define a completion of w as any extension of this knowledge state  according to which a property does not hold yet when an event initiates it, while it must hold at the moment when a terminating event occurs.
The meta-predicates init, t e r m and nb are mutually recursive in the above definition.
In particular, an attempt at computing MVIs by simply unfolding their definition is non-terminating in pathological situations [8].
In general, a PEC problem can have zero or more models.
However, most PEG' problems encountered in practice satisfy syntactic conditions ensuring the termination of this procedure and the uniqueness of the model.
This is particularly important since it permits the transcription of the above specification as a logic program that is guaranteed to terminate [SI.
We need the following definition.
that is a total order.
We denote with Extx(w) and Compx(w) the set of all extensions and the set of all completions of the ordering w in W x , respectively.
We will drop the subscript x when clear from the context.
Given a structure 31 and a knowledge state w, PEC offers means to infer the maximal validity intervals, or MVIs, over which a property p holds uninterruptedly.
We represent an MVI for p as p(ei,e t ) , where ei and et are the events that initiate and terminate the interval, respectively.
Consequently, we adopt as the query language of PEC the set Ax of all such property-labeled intervals over 31.
We interpret the elements of $131 as propositional letters and the task performed by PEC reduces to deciding which of these formulas are MVIs and which are not, with respect to the current partial order of events.
In order for p(e1, e2) to be an MVI relatively to the knowledge state w, (e1,e2) must be an interval in w. Moreover, el and e2 must witness the validity of the property p at the ends of this interval by initiating and terminating p , respectively, and by having all of their preconditions validated.
These requirements are enforced by conditions ( i ) ,( i i ) and (iii),respectively, in the definition of valuation given below.
The maximality requirement is caught by the meta-predicate nb(p, el ,e2, w) in condition ( i v ) , which expresses the fact that the validity of an MVI must not be broken by any interrupting event.
Any event e which is known to have happened between el and e2 in w and that initiates or terminates p interrupts the validity of p(e1, e2).
These observations are formalized as follows.
Definition 2.3 (Dependency Graph) Let 31 = ( E , P, [.I.
), (.I.])
be a PEC-structure.
The dependency graph of 31, denoted b y G x , consists of one node for each property in P , and contains the edge (q,p) if and only if 3e E E. 3C E 2 p .
q E C A ( e E 0 blC) v e E (PlCl).
In the following, we will restrict our attention to those PEC-structures 31 such that G x is acyclic.
Under such an assumption, for every property p E P , the length of the longest path to p in G x is finite.
We denote it by B x ( p ) .
Furthermore, we set Bx = m a x p E p B x ( p )and denote by Cx the cardinality of the largest context in [-I-) or (.I.].
It is worth noting that the above restriction ensures that the computation of any MVI on the basis of Definition 2.2 can never contain more than B.tl embedded MVI calculations; therefore it always terminate, as formally stated in [SI.
The set of MVIs of a PEC problem, defined as a pair (31,w), is not stable with respect to the acquisition of new ordering information.
Indeed, as we move to an extension of w, current MVIs might become invalid and new MVIs can emerge [3].
The Generalized Modal Event Calculus with Preconditions, or PGMEC, extends the language of PEC with the possibility of enquiring about which MVIs will remain valid in every extension of the current knowledge state, and about which intervals might become MVIs in some extension of it.
We call intervals of these two types necessary MVIs and possible MVIs, respectively.
PGMEC interprets a necessary MVI Op(e1,e2) and a possible MVI Op(e1,e2) as the application of the operators 0 and 0, respectively, from an appropriate modal logic to the MVI p(e1, e 2 ) .
Boolean connectives are permitted as well.
More formally, the query language of PGMEC is defined as follows.
Definition 2.2 (PEC-model) Let 31 = ( E , P, [.I.
), (.I.])
be a PEC-structure.
An intended PEC-model of 31 is any propositional valuation vx : W x + 2*% defined an such a way that p(e1, e2) E U N (w) if and only if i.
( e l ,e2) E w;  ii.
i n i t ( e l , p ,w), where i n i t ( e l , p , w ) iff 3C E 2 p .
Vq E C. 3e',e" E E. el E [PIC) A q(e',e") E ~ ( w ) A (e',el) E w A ((e1,e") E w V el =e")  iii.
term(ez,p,w), where t e r m ( e z , p , w ) if 3C E 2p.
Vq E C. 3e',e'' E E .
e2 E (PIC] A q(e',e") E vx(w) A (e',e2) E w A ((e2,e") E w V e2 = e");  iv.
nb(p, e l , e2, w),where nb(p,el,e2, w) i f f d e E E. ( e l , e ) E w A (e,e2) E w A  ( i n i t ( e , p , w )V t e r m ( e , p , w ) ) .
0  Notice that the extremes of an interval are not treated symmetrically.
This anomaly implements the intuition  40  Figure 1.
Reasoning with Extensions versus Reasoning with Completions Definition 2.4 (PGMEC-language) Let 3-1 = ( E , P, [-I.
), (-1.1) be a PEC-structure.
Given the PEC-language dN = { p ( e l ,e2) : p E P and e l , e2 E E } , the PGMEC-language of 3-1, denoted by LN,is the modal language with propositional letters A ,, V ,U, 0 ) .
0 in Ax and logical operators in {i In order to provide PGMEC with a semantics, we must shift the focus from the current knowledge state w to all knowledge states that are reachable from w, i.e.
ExtN(w), and more generally to W N .Now, by definition, w' is an extension of w if w C w'.
Since is a non-strict order, (W N , can be naturally viewed as a finite, reflexive, transitive and antisymmetric modal frame.
If we consider this frame together with the straightforward modal extension of the valuation U N to an arbitrary knowledge state, we obtain a modal model for PGMEC.
s)  s  Definition 2.5 (PGMEC-model) Let 3-1 = ( E , P, [.I.
), (.I.])
be a PEC-structure.
The PGMEC-frame FN of 3-1 is the frame ( W N C , ) .
The intended PGMEC-model of 3-1 is the modal model = ( W NC , ,U N ) , where the propositional valuation U N : WN + 2AN is defined as in Definition 2.2.
Given w E WN and cp E L x , the truth of cp at w with respect to ZN,denoted by Zx;w cp, is defined as follows: ZN;w I=p(e1,e2) ifl p(e1,ea) E w ( w ) ; I= 'cp i f f &l;w F cp; Z~;wkcpcplA m i f f Zx;wI=cpl a n d 2 ~ ; w k c p 2 ; Z N ;k ~cp1 v 9 2 i f f ZN;W o r & ; w I=cp2; iff VW' E ExtN(w).
231;W' k cp; Zx;w I= ocp iff 3 ~E'ExtN(w).
271;W' k cp.
G l ; w k ocp A PGMEC-formula cp is valid in Zx, written &+cp,if Zx;wkcpforallwEWX.
a  In the following, we will also consider a simple linguistic fragment of PGMEC, called PMEC, consisting of the class of formulas BN = {cp, Ocp, Ocp : cp E A N } , that we will show to be sufficiently expressive to model significant application domains.
We conclude this section by showing that reasoning about the extensions of a given partial order is not the same as reasoning about its completions.
However, it is possible to show that completions can be modally defined in terms of extensions [8].
This result will be exploited in Section 4 to prove the complexity of the proposed calculi.
Consider the following example (Figure 1, left).
Let e l , e2, e3 and e4 be four events, and p , q , r , s, t be five properties.
Suppose that el initiates p and terminates q without preconditions, while it initiates s with precondition q; e2 initiates q and terminates p , while it initiates r with precondition p ; e3 terminates both r and s and initiates t if at least one among r and s holds.
Finally, e4 terminates t. Consider a scenario o according to which el precedes e3, e2 precedes e3, the relative order of el and e2 is unknown and e3 precedes e4.
Under these hypotheses, t(es,e,i) holds in every completion of 0,but it does not hold in o itself.
Thus it does not hold in every extension of the current state.
The next example (Figure 1, right) describes a dual situation using a similar symbology.
Here, s(e3, e4) holds in the current state of knowledge 0,but it does not hold in any of its completion.
This means that there exists one extension (0 itself) in which s(e3,ed) holds, while there exist no completion in which it holds.
3  Modeling Real-World Examples  In this section, we consider two examples, taken from the domains of hardware and medical diagnosis, respectively, that show how modal event calculi with preconditions can be successfully exploited to deal with real-world applications.
We will drop the subscripts 71 whenever this does not lead to ambiguities.
Moreover, given a knowledge state w in WN and a PGMEC-formula cp over X,we write w I= cp for Zx;w cp.
Similarly, we abbreviate ZN I= cp as I= cp.
41  Figure 2.
Expected Register Behavior, Measurements and Resulting Event Ordering us that the registers assumed again the value 1 (transitions e3 and e4), but we do not know which was set first.
The available ordering information is reported on the right-hand side of Figure 2.
The situation displayed in Figure 2 can be represented by the PMEC-structure 7-1 = (E, P, [.I.
), whose components are defined as follows:  3.1 Diagnosis of a faulty CNCC We focus our attention on the representation and processing of information about fault symptoms that is spread out over periods of time and for which current expert system technology is particularly deficient [14].
Consider the following example, which diagnoses a fault in a computerized numerical control center (CNCC) for a production chain.
(al.
]),  0 0  A possible cause for an undefined position of a tool magazine is a faulty limit switch S .
This cause can be ruled out i f the status registers IN29 and IN30 of the control system show the following behavior: at the beginning both registers contain the value 1.
Then IN29 drops to 0, followed b y IN30.
Finally, both return to their original values in the reverse order.
0  E = {el,e2,e3,e4); P = (one29, zero29, one30, zero30); { e l } = [zero291{}), (e2) = [zero301{zero29}), { e 3 }= [ m e 3 0 1 0 ) , { e 4 ) = [ m e 2 9 1 0 ) ; { e l ) = (o.e291{)1, {e21 = (one301{}1, {e3} = (zero301{zero29}], {e4} = (zero29l{)].
We have represented transitions as events with the same name, and used mnemonic names for the properties corresponding to the two different values of IN29 and IN30.
It is easy to check that the dependency graph for X does not contain any loop.
It is worth noting that, in general, preconditions do not imply physical sequentiality.
As an example, we state that the event e2 initiates the property zero30 only if the property zero29 holds to express the fact that we are only interested in those situations where IN30 is reset while IN29 holds the value 0.
In such a way, we are able to a priori eliminate a number of incorrect behaviors.
The partial order of transitions, described in Figure 2 (right), is captured by the following (current) knowledge state:  Figure 2 describes a possible sequence of transitions, for IN29 and IN30, that excludes the eventuality of S being faulty.
In order to verify this behavior, the contents of the status registers must be monitored over time.
Typically, measurements are made at fixed intervals, asynchronously with respect to the update of status registers.
While measurements can be taken frequently enough to guarantee that signal transitions are not lost, it is generally impossible to exactly locate the instants at which a register changes its value.
Consequently, it is possible that several transitions take place between two measurements, making it impossible to recover their relative order.
In the case of our example, the situation is depicted in Figure 2 (left): dotted lines indicate measurements.
Moreover, we have given names to the individual transitions of state of the different registers.
From the values found at measurements mo and ml, we can conclude that both IN29 and IN30 were reset during this interval (transitions el and e2, respectively), but we have no information about their relative ordering.
Similarly, measurement m2 informs  0=  {(el e3), (el e4), (e27 e3), (e27 e4)).
Let us consider the PEC-formula: cp = zer030(ez,e3).
In order to verify that the switch S is not faulty, we must ensure that the registers I N 2 9 and I N 3 0 display the expected behavior in all refinements of the current knowledge state 0.
With our encoding, this amounts to proving that the PMEC-formula O q holds in 0.
If  42  Thorax  B,ltWl"I  eo  0  .
ce3  *  retmd  ce5  .
wide  1  c  years  Figure 3.
Expected Symptom Evolution for Metatropic Dwarfism this is the case, the fault is to be excluded.
If we want to determine the existence of at least one extension of o where the registers behave correctly, we must verify the satisfiability of the PMEC-formula Op in 0.
If this is not the case, the fault is certain.
Since we have that o+ O p and o+ Up, the knowledge available in o entitles us to assert that the fault is possible, but not certain.
Assume that, unlike in the actual situation of Figure 2, we extend o with the pair (e2, e l ) .
Let us denote the resulting state by 01.
It holds that 0;' Op, and thus the switch S is certainly faulty.
On the other hand, if we refine o with the pairs ( e l ,e2) and (e3,e4), calling 0 2 the resulting state, we have that o$ Up.
In this case the fault can be excluded.
the scoliosis), and hence only the events which mark the transitions from one qualitative value to the next one are significant.
In order to verify this model, the width of the thorax and the severity of the kyphoscoliosis must be checked over time.
However, as in the case of measurements of status registers, while the radiological examinations can be done frequently enough to guarantee that qualitative value transitions are not lost, it is generally impossible to exactly locate the instants at which these transitions happen.
Consequently, it is possible that several transitions take place between two examinations making it impossible to recover their relative order.
In the case of our example, the situation is depicted in Figure 3.
Exams xo and X I tell us respectively that at birth the thorax was narrow and that after the first year a mild kyphoscoliosis had developed.
We denote with eo and el the corresponding events.
With exam 2 2 , we observe that the thorax is now normal and the kyphoscoliosis has become moderate.
We write e3 and e2 for the corresponding events.
We know that they have occurred after e l , but we have no information about their relative ordering.
Finally, exam 2 3 informs us that the thorax has successively become wide and the kyphoscoliosis progressive.
Let e5 and e4 be the corresponding causing events.
Again, we know they have happened after e2 and e3, however we are not able to order them.
The situation displayed in Figure 3 can be represented by the PGMEGstructure 3t = ( E , P, (.I.
]), whose components are defined as follows:  3.2 Diagnosis of the Metatropic Dwarfism As a second example, consider the following situation of illnesses taken from the domain of diagnosis of skeletal dysplasias [lo].
The model of the Metatropic Dwarfism specifies that at birth the thorax is narrow and after the first year of age a mild kyphoscoliosis occurs.
If the severity of the kyphoscoliosis is relatively mild then the thorax will continue to be narrow.
If the severity of the kyphoscoliosis increases then there be a period during which the thorax is perceived as relatively normal but when the kyphoscoliosis is progressive the thorax becomes wide.
Metatropic Dwarfism can be excluded i f the symptoms do not comply to this model.
[el.
),  E = {eO,eI,e2,e3,e4,e5,e6); 0  Figure 3 schematizes the evolution of a patient to be diagnosed with Metatropic Dwarfism.
Both kyphoscoliosis severity and thorax width are continuous attributes, but radiologists are only interested in a finite set of discrete qualitative values (narrow, normal, and wide for the thorax; mild, moderate, and progressive for  P = {narrow, normal, wide, mild, moderate, progressive}; {eo) = [narrowl{}), { e l } = [ m i l d [ { ) ) , {ez) = [moderatelo), { e3) = [normalI{ moderate}), {e4} = [progressiwel{}), (e5) = [widel{prog+ess(ve});  43  triple (Z,w,cp) an instance and generally prefix this term with the name of the calculus we are considering.
In the following, we will show that, given an instance (31,w , cp), the satisfiability test for cp is polynomial in E C and PEC, while it is NP-hard in PGMEC.
Given an EC-instance (31,w , cp), the cost of the test w cp can be derived to be O ( n 3 )directly from the relevant parts of Definition 2.2, as proved in [SI.
In particular, we assume that verifying the validity of the propositions e E [PIC) and e E (PIC]when the context C is empty (as it is in basic E C ) has constant cost 0(1),for given event e and property p .
This is not true anymore in PEG.
Let (Z,w,cp) be a PEC-instance such that the dependency graph of 31 is acyclic.
The cost of the test w cp is still polynomial in the number n of events, but depends on Bx (see Definition 2.3).
{e3} = (narrowl{}l, {e2} = (mW{}I, {e4} = (moderatel{}], {e5} = (normall{}], {e6} = (widel{}]= (progressivel{}].
We have added the event e6 in order to terminate the validity of the properties wide and progressive; it corresponds to the death of the patient.
As in the previous example, our use of preconditions is instrumental to the inferences we want to achieve.
Finally, observe that the dependency graph for Z does not contain loops.
The partial order of transitions, described in Figure 3, is captured by the following (current) knowledge state:  {(eO,el),(el,e2),(el,e3),(e2,e4), (e2,e5),(e3,e4),(e3,e5),(e4,e6),(e59e6)).
Consider the PGMEC-formula: cp = normaZ(e3,es) A wide(e5,ea).
o=  Theorem 4.1 (Cost of model checking in PEC) Given a PEC-instance (Z,w , cp), the test w cp has cost 0 ( ~ 3 @ ~ + l ) ) .
In order to verify that the diagnosis of the dysplasia is certain, we must ensure that the PGMEC-formula Up is satisfiable in 0.
If we want to determine if it is possible to diagnose the dysplasia, we must verify the satisfiability of the PGMEC-formula Ocp in 0.
Since we have that o+ k Ocp and o+ p Up, the knowledge contained in o entitles us to assert that the diagnosis of the dysplasia is possible, but not certain.
Assume that, unlike the actual situation of Figure 3, we extend o with the pair (e3,e2).
Let us denote the resulting state with 01.
It is easy to prove that of p Ocp, and thus that the dysplasia can be excluded.
On the other hand, if we refine o with the pairs (e2,e3) and (e4,e5), calling 02 the resulting state, we have that 0 : Up.
In this case, the dysplasia is certain.
4 Complexity Analysis  Proof.
We proceed by induction on the value of Bx.
If Bx = 0, then we fall in the case of EC, whose complexity has been shown to be O(n3).
When Bx > 0, the evaluation of each of the O ( n ) meta-predicate init or term of Definition 2.2 results in the evaluation of at worst C x preconditions and then the evaluation of each of these conditions results in O(n2) satisfiability tests with a Bx - 1 nesting level.
The relationship between the complexities Comp(Bx)and Comp(Bx - l) is expressed by the following recurrent expression: Comp(Bx)= O(n) .
O(n2).
Comp(B8 - 1).
By induction hypothesis, Comp(Bx) = O ( n 3 ) O ( T L ~ ' and ~ ~ (hence ) , Comp(Bx)= O(n3'(B31+1)).
W  In this section, we study the complexity of the event calculi presented in Section 2.
We model our analysis around the satisfiability relation given in Definitions 2.2 and 2.5.
We measure the complexity of testing whether 1,;w cp holds in terms of the size of the input structure (e.g.
the number n of events it includes).
It is worth noting that, although possible in principle, it is disadvantageous in practice to implement knowledge states so that the test (e1,ez) E w has constant cost.
We instead maintain a quasi-order o on events whose transitive closure o+ is w. Verifying whether ( e l ,e2) E w holds becomes a reachability problem in o and it can be solved in quadratic time O ( n 2 ) [6].
Given a PEC-structure Z, a knowledge state w E Wx and a PEC-formula (resp.
PGMEC-formula) cp, we want to characterize the complexity of the problem w cp is valid, an instance of establishing whether 1%; of the general problem of model checking.
We call the  Let us prove now that if we extend PEC with modal operators and boolean connectives, the resulting calculus PGMEC is NP-hard.
To this end, we consider the simple linguistic fragment of PGMEC we called PMEC.
To determine the complexity of the satisfiability test in PMEC, we can exploit Dean and Boddy's results reported in [7].
They consider the problem of computing which facts must be or may possibly be true over certain time intervals with respect to the set of completions of the current partial order in a framework including preconditions but devoid of propositional connectives.
They showed that this computation is NP-hard in the general case.
PMEC tests the satisfiability of a PMEC-formula with respect to the set of extensions of the current partial order.
In Section 2, we showed that the approach that considers all the extensions is more general than the one that restricts itself to completions.
It is easy to show that there exists a polynomial reduction of Dean and Boddy's problem to  +  +  44  the satisfiability problem in PMEC.
Hence, the satisfiability problem in PMEC is at least as complex as a problem that Dean and Boddy proved to be NP-hard.
From this result, it immediately follows that the satisfiability test in PGMEC is NP-hard.
gramming Framework", Proc.
of ICLP'95: 12th Int.
Conf.
on Logic Programming, Kanegawa, Japan, MIT Press, 1995, 299-313.
[2] I. Cervesato, and A. Montanari: "A General Modal Framework for the Event Calculus and its Skeptical and Credulous Variants (extended and revised version of [13])", Submitted for publication, July 1996.
[3] I. Cervesato, A. Montanari, A. Provetti: "On the Non-Monotonic Behavior of Event Calculus for Deriving Maximal Time Intervals", Interval Computations,  Corollary 4.2 (Cost of model checking in PGMEC) Given a PGMEC-instance (N, w,cp)7 the satisfiability test w cp is NP-hard.
0  5  Conclusions  3(2), 1993, 83-119.
[4] I. Cervesato, M. Franceschet, A. Montanari:  "The Complexity of Model Checking in Modal Event Calculi", Proc.
of ICLP'97: 14th Int.
Conf.
on Logic Programming, Leuven, Belgium, 1997.
To appear.
[5] L. Chittaro, A. Montanari, A. Provetti: "Skeptical and Credulous Event Calculi for Supporting Modal Queries", Proc.
of ECAI'94: 1ith European Conference on Artificial Intelligence, A. Cohn (ed.
), John Wiley & Sons, 1994, 361-365.
[6] L. Chittaro, A. Montanari, I. Cervesato: "Speeding up temporal reasoning by exploiting the notion of kernel of an ordering relation", Proc.
of TIME'95: 2nd Int.
Workshop on Temporal Representation and Reasoning, S. Goodwin, H. Hamilton (eds.
), University of Regina (Canada), 1995, 73-80.
[7] T. Dean, M. Boddy: "Reasoning about partially ordered events", Artificial Intelligence, 36, 1988, 375-  In this paper we studied the expressiveness and complexity of extensions of EC with preconditions and modal operators.
We also extensively discussed the application of the resulting modal event calculi with preconditions t o two real-world examples.
Elsewhere [2, 4, 131, we systematically investigated modal extensions of EC without preconditions.
In particular, we considered the modal event calculi MEC and GMEC that are obtained from PMEC and PGMEC, respectively, by substituting EC for PEC,that is, by making the effects of event occurrences contextindependent.
We proved that model checking in MEC has cost O ( n 3 ) ,while it is NP-hard for GMEC.
Moreover, the attempt of characterizing GMEC within the rich taxonomy of modal logics reveals Sobocinski logic, also known as system Kl.1 [15], as its closest relative.
This characterization allowed us t o establish a number of interesting logical properties of GMEC that have been used t o improve the efficiency of its implementations.
In [8] we have shown that PGMEC inherits most of these logical properties.
We are currently investigating the interplay between preconditions, modal operators, and boolean connectives.
We already know that the addition of preconditions t o MEC makes the resulting calculus, PMEC, NP-hard.
In this respect, we are looking for both polynomial approximations t o MVI computation and expressive sublanguages that admit exact polynomial procedures for this task.
Instead, the problem of characterizing the relationships between boolean connectives and preconditions in a modal framework is still open.
More precisely, we do not know if the addition of boolean connectives to PMEC or of preconditions to GMEC makes the resulting calculus, PGMEC, (strictly) more expressive than PMEC and GMEC, respectively.
The complexity results we obtained are compatible with all the alternatives.
399.
[8] M. Franceschet.
Una Gerarchia d i Calcoli Moduli degli Euenti: Espressiuitb e Complessitb (in Italian), Tesi  di Laurea in Scienze dell'Informazione, Universitl di Udine, Italy, 1996 (to appear as a Research Report in English).
[9] J. Harland.
Success and Failure for Hereditary Harrop Formulas.
In J.
Logic Programming, 17:l-29 (1993).
[lo] E.T.
Keravnou, J. Washbrook: A temporal reasoning framework used in the diagnosis of skeletal dysplasias.
Artificial Intelligence in Medicine, 2, 1990, 239-265.
[ll] R. Kowalski, M. Sergot: "A Logic-based Calculus of Events", New Generation Computing, 4, Ohmsha Ltd and Springer-Verlag, 1986, 67-95.
[12] D.C. Moffat, G.D. Ritchie: "Modal Queries about Partially-ordered Plans", Journal of Expt.
Theor.
Artificial Intelligence, 2, 1990, 341-368.
[13] A. Montanari, L. Chittaro, and I. Cervesato: "A General Modal Framework for the Event Calculus and its Skeptical and Credulous Variants", Proc.
of ECAI'96: 12th European Conference on Artificial Intelligence, W. Wahlster (ed.
), John Wiley & Sons, 1996, 33-37.
[14] K. Nokel: Temporarilly Distributed Symptoms in Technical Diagnosis, Springer-Verlag, 1991.
[15] K. Segerberg.
An Essay in Classical Modal Logic.
Uppsala Filosofiska Studier, 1971.
References [l] I. Cervesato, L. Chittaro, A. Montanari: "A Modal Calculus of Partially Ordered Events in a Logic Pro-  45