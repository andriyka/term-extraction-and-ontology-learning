QuantidZed Propositional Temporal Logic with Repeating States Tim French School of Computer Science and Software Engineering University of Western Australia tim@cs.uwa.edu.au  Abstract QuantidZed Propositional Temporal Logic (QPTL) is a linear temporal logic that allows quantidZcation over propositional variables.
In the usual semantics for QPTL, a model is an indZnite discrete linear sequence of states, with each state having some propositional interpretation.
The effect of this is that the interpretation of a proposition at one point in time is independent from its interpretation at another point in time.
In this paper we examine the expressivity and decidability of an of QPTL, given generalizations of the usual semantics that do not have this restriction.
We introduce the repeating semantics (QPTL ), which allows states to be repeated throughout a model.
While this semantic interpretation does not affect the unquantidZed fragment of QPTL it signidZcantly increases the expressive power in the presence of propositional quantidZcation.
In the main result of this paper we show that QPTL makes the satisdZability problem highly undecidable through a complicated encoding of a tiling problem.
We also investigate two less expressive semantics which still allow states to be repeated.
We prove the satisdZability problem for one is undecidable, and decidable for the other.
1.
Introduction QuantidZed Propositional Temporal Logic (QPTL) [14], extends traditional propositional linear temporal logic, PLTL [12], and has the ability to quantify over propositional atoms.
The set of formulas of QPTL is built up recursively from the atoms via classical negation and disjunction, temporal next-time and future-always connectives (from the standard PLTL) along with quantidZcation over atoms.
The formulas are evaluated over a linear sequence of states, with each atom being true or false at each state.
The logic is expressively equivalent to Buchias monadic second-order logic of one successor (A A"A ) and consequently it has been shown to be decidable (albeit non-elementary).
In this paper we dedZne new semantic interpretations  (QPTL , QPTL , QPTL ) of QPTL by removing the restriction that the model be a linear sequence of states.
We do however retain the basic concept of a linear model by distinguishing the states of the model from atemporal momentsa, (the time at which a state is visited).
That is, the temporal operators of the language are interpreted with respect to countable, discrete, linear moments in time; while the atoms are interpreted with respect to the (possibly recurring) states of the model.
We cannot assume that the interpretation of an atom at one temporal moment is independent of its interpretation at another moment.
This way we can allow the temporal proposition anow will never happen againa to be false, (however to avoid confusion is is best not to associate the states with such temporal notions as now).
Our motivation for doing this is largely to investigate the expressive power of propositional quantidZcation in modal structures.
This has been studied extensively in the context of branching modal structures [4], [3], [5], and also in the context of strictly linear structures [14], [10].
In this paper we investigate languages which neither have branching operators, nor a strictly linear structure.
Effectively this allows us to apply quantidZcation over the states of the model, which results in a dramatic increase in the expressive power of QPTL.
The language QPTL has been used to reason about dZnite state machines and automata.
By associating a state of the model with a state of the machine the repeating semantics allows us to succinctly reason about properties of dZnite state machines, without having to assign an atom to each state of the machine.
For example, the repeating semantics allows us to detect if a machine will loop indZnitely in a single state, independant of what the actual state is.
Another possible application of such a language would be reasoning about a trajectory of an agent through some environment.
The states of a model would represent spatial entities, and the temporal moments represent time.
The language can express such concepts as whether the trajectory of the agent is eventually periodic, or whether there are some states that the agent will only visit once.
Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTLa03) 1530-1311/03 $17.00 AS 2003 IEEE  2.
Semantics for QPTL  follows.
The language QPTL consists of an indZnite set of atomic variables  Az  A"  , the boolean operations  fi, (not and or respectively) and the future temporal operators (next and generally respectively), along with the  quantidZer  (for all).
We will use the convention that all unary operators (including ) bind weaker than binary operators, unless otherwise indicated by brackets.
A formula of QPTL is dedZned inductively as follows.
 For all  , is a formula.
 If  and fi are formulas then so are   fi fi and  .
   If  is a formula and  then   is also a formula.
We will dedZne additional operators in terms of those above.
The propositional operators  	   are well known to be expressible in terms of  and fi.
We will also consider the formulas   (respectively atruea and afalsea) to be abbreviations for, respectively  Az fi  Az  and  Az fi  Az  and we will use  as an abbreviation for  Az  where   Az   .
The other abbreviations in QPTL are:            	   U fi  fi   fi    A fi  A   fi fi   where   for the least  such that  does not appear in  or fi .
These operators will be referred to as, respectively: existential quantidZcation, future, waiting, and until.
We will next present the dedZnition of a structure  that evaluates a formula in the language QPTL.
This semantic interpretation will be referred to as QPTL and is more general than the one given in [6].
A structure,  , is given by the tuple 	     	 	    	  .
Given  we say the structure  Az 	    Az  is an  -variant of  for some dZnite   , if   	    Az  .
We say a structure  	    is a QPTL model if   is a bijection.
In this case we usually let  be an indZnite sequence Az  A"   where    .
In this paper we investigate the general case, where there is no restriction on the function  .
This is the only difference between QPTL and QPTL , and the semantic interpretation of the formulas is this same for both languages.
Given some structure  we dedZne the  fi moment of  be the tuple    for    and inductively dedZne a formula  to aholda at the  fi moment of  (denoted    ) as                    for all           A" fi Az     A" or    Az       fi                       for all -variants      ) if    .
If  Az  Az  We say  is a model of (written   for every structure  and for every    we have    , we say  is valid (written  ), and if  is not valid, we say  is satisdZable.
We can see the function   maintains the relationship between the temporal moments and the states of the structure.
Given a structure  	     we can see some state   	 could be repeated if there is some    such that      .
However the actual moment   will never be repeated.
The interpretation of formulas is derived from the moment , and only the interpretation of atoms are     derived from the state.
For example, if   then    if and only if    , however it may be while     .
that    The language QPTL is decidable, though nonelementarily complex.
The process to determine the satisdZability of some formula  involves constructing a nondeterministic  -automaton that accepts exactly the models that satisfy .
The satisdZability of  is therefore equivalent to the non-emptiness of the automaton.
For details on an optimal decision procedure for QPTL, see [13] or [6].
We will refer to these generalized semantics as the repeating semantics (QPTL ).
The states are the elements of 	 , and the temporal moments are the pairs   .
The most basic example of the expressive difference between QPTL and QPTL if the formula:            (1)  which appeared as an axiom in [6] and is equivalent to the statement anow will never happen againa.
This is a validity , is satisdZable in of QPTL but its negation,   	 any model  where there is some    such that     .
Another example of the expressive difference is being able to succinctly express such concepts as whether the model is deterministic (i.e.
every state in the model will always be followed by the same state):         	    	     (2)  3.
Undecidability We prove that QPTL is highly undecidable by showing that QPTL can encode a highly undecidable tiling problem.
This technique was used in [8] to prove undecidability  Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTLa03) 1530-1311/03 $17.00 AS 2003 IEEE  of modal logics and has since been used in many similar scenarios [15], [5], [11], [7].
The important step in encoding a tiling is to specify the model to be grid-like, and all these approaches use branching or bi-modal languages.
This proof is unique in that it only uses non-branching temporal operators.
Tiling Problem is as follows: We are given The a dZnite set      fififi  of tiles.
Each tile  has four coloured sides: left, right, top and bottom, written          and  fi .
Each side can be one of  colours  for    fififi .
Given any set of these tiles, we would like to with these tiles such know if we can cover the plane that adjacent sides share the same colour.
4  24  3  15  2  8  1  3  0  0  DEFINITION 1 Given some set of tiles, , we say 	  fi is a tiling function for if for all fi    1.
fi    	fi      2.
fi    	fi    fi .
If such a function exists we say   	23    	14    33 22  tiles the plane.
THEOREM 1 The satisdZability problem for QPTL is highly undecidable.
Given the set of tiles we give a formula,  A , of QPTL that is satisdZable given the QPTL semantics if and only if recurrently tiles the plane.
As with many approaches, to show the satisdZability problem for a language is highly undecidable it is enough to show that there is a formula that specidZes the under-lying Kripke structure to be agrid-likea.
This is exactly what we will do here.
What makes this approach different is that the language is syntactically a one dimensional language: we do not so much as specify the properties of the under-lying Kripke structure, as we specify the properties of a path through the structure.
Examples of the properties of the path we will be specifying are: whether we have visited a state before; how many times have we visited a state;  	   	32    	21  13    6    	7    	2  1  0  Given some dZnite set of tiles , the tiling problem is to decide whether or not tiles the plane.
This problem was shown to be AzA" -complete (the complement of the recursively enumerable set, or co-RE) [2].
We will also use the Recurrent Tiling Problem, tiling problem with the which is the same as the following additional requirement: The tile Az must occur indZnitely often in the bottom row (i.e.
fi    Az for indZnitely many  ).
In such a case we say recurrently tiles the plane.
In [9] this problem was shown to be highly undecidable, or 	A"A" .
   	  	12 	5    31  20 11  4  1  Key.
y 	b a x  	    	30    	19    	10    2  	  29    18    9  	28 	17   3  27  16  	    	26    4  Figure 1.
An illustration of the function where     fi      25  	   5  ,  how many time have we visited some state since we last visited some other state.
These properties could in fact be represented in a weaker semantic than QPTL , and we discuss this later.
The properties mentioned above will be used to awrapa a path through a grid.
To describe how that is done we must dZrst describe a new pairing function.
DEFINITION 2 We dedZne the function    fi recursively as for all   , fiAz   fi  and for all ,  Az    fi  Az 1.
fi    fi    fi  fi     if    ,  2.
fi    fi    fi  fi     otherwise.
We also dedZne  AV fi     AV   fi  by  fi  fi     The function  is illustrated in Figure 3.
This is a relatively complicated pairing function, however it has a number of useful properties which will allow us to encode this function in QPTL .
These properties are given in the following dedZnition.
DEFINITION 3 Let   be some set and let 	   fi  be some function.
Given any     let A"  Az be two integers such that 	fiA"   	fiAz   , or 	 if no such integer exists.
We say 	 is a grid-path if     :  Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTLa03) 1530-1311/03 $17.00 AS 2003 IEEE  1. there are exactly two integers,  A"   Az  , 2.
A"  is even if and only if  3. for all  fi modulo 2: (a)  A"  (b)  A"    Az  and  Az,  A"  A"  fiA" are congruent   fiA" ; Az  Az ;  Az  4. if there exists   such that A"  A" fi  then there is some fi  such that A" fi   fiAz , 5. there exists     The proof for  	 follows from the fact that given Az  A"   fi Az  , AV A"   .
This can be seen from the fact that Az   fi Az and therefore  	 AV A"   AV Az  	 .
The same reasoning applies to A" so we can deduce that A"   fi Az (from the fact that AV A"   AV A" ).
Therefore AV A" fi    so the same reasoning will show A" fi   fiAz for some fi .
The proof for   follows trivially from the proof given for  	.
  such that  is even,  such that   Az  fiA"   A"  Az   A"  such that A"    Az fi .
We will refer to the dZve conditions in DedZnition 3 as     .
LEMMA 1 The function  is a grid path.
PROOF: We will show that all the conditions of DedZnition 3 are satisdZed For  , it can be seen from Figure 3 that if Az  	   fi Az , then AV 	 fi   .
Suppose  	     .
For all , if       and Az    	 then     or    , and if 	    fiAz then     or    .
Therefore AV 	   implies   	,      	 and AV 	     implies   	,      	.
It follows that there is at most one   	 such that      	.
To prove that there is at least one   	 such that      	 suppose, without loss of generalization, that Az  	   fi Az and AV 	  .
Then it can be seen that  	 fi fi   	 (the calculation is left to the reader).
The condition   follows trivially from the proof for  , and the fact that  	 fi  fi    	.
Having proven the dZrst two conditions, for all    we let A" be the least integer such that  A"   , and let Az be the greatest such integer.
For the dZrst part of  , it can be shown that if A" and Az are congruent modulo 2 then there is some  such that A"  Az  Az .
Similarly since Az and fiA" are congruent modulo 2 there is some  such that Az   Az 	 fiA" .
Therefore AV A"    and AV  	  for all  	 fiA" .
Therefore Az  fiA" .
For the second part of  , suppose Az  	     fi Az and (without loss of generalization) AV 	  AV     .
Then the result follows from the fact that 	 fi  fi    fi  fi  (from the proof for  ).
The following proof is required to show that any gridpath represents a grid structure in exactly the same way  does.
LEMMA 2 Given some set there is a bijection A    A     .
,    and a grid-path             such that   PROOF: Given any integer , let the subset A   be the set fi 	   fi Az     .
We prove the lemma by induction over  where the induction hypothesis is: Given any integer , there is some bijection AA   A      such that for all 	   fi Az , AA  	   	.
We begin with   .
This is trivial, as Az  fi  and all that is required is to dedZne AAAz     .
For the inductive step, suppose that for some integer  there is a bijection AA   A      such that for all 	   fi Az , AA  	   	 .
We construct AA as follows.
Let AAAVA"   AA  for all A .
We would like to dedZne AAAVA" such that for all 	   fi Az , AAAVA"  	   	, however we must ensure that if  	    for    fi Az , then  	   .
For all 	,  fi Az  	   fi Az we note that AV 	 fi  fi and furthermore, if 	     if and only if AV 	  A" for some  fi .
Therefore we are required to show that for all such 	 if AV 	   fi  then for all   	 we have      	, and if AV 	   then there is some   	 such that  	    and  	   .
This is proven in Lemma 3 below.
Therefore we can dedZne the bijection AAAVA" such that for all 	   fi Az , AAAVA"  	   	.
Furthermore, by construction, the bijection AAAVA" agrees with AA over the set A so by induction there is some bijection A such that for all 	, A  	   	.
  Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTLa03) 1530-1311/03 $17.00 AS 2003 IEEE    ,  Below is a technical sub-lemma required to complete the proof of Lemma 2.
LEMMA 3 Suppose that there is some bijection A    such that for all   fifiAz A  fifi  fi.
 Then for all  where fi  fiAz   fi  fiAz :       fi  	         1.
AV fi  fi     2.
AV fi  fi   fi  	fi   fi   fi   fi     	fi     PROOF: We will prove the lemma by strong induction.
As the base case, let   fi  fiAz .
Therefore AV fi  fi   and we must show for all   ,  fi  fi.
Suppose for contradiction that there is some    such that fi  fi.
If AV fi  fi then  fi  fi implies   fi  fiAz , and since A  is a bijection we would have  fi   fi  fi contradicting DedZnition 3.1.
Since   fi  fiAz we have AV  fi  fi.
By the construction of  we can see that AV fi is even if and only if  is even.
Therefore  is even if and only if  is odd, contradicting DedZnition 3.2 and thus for all   , fi  fi.
This completes the base case of the induction.
We will now prove the inductive step.
Suppose that for some   fi  fiAz , we have dedZned A AVA"  fi for all   .
If AV fi  fi  , then by the construction of , AV  fi  fi.
By the induction hypothesis there exists     such that  fi   fi, and consequently by DedZnition 3.5 for all   ,  fi  fi.
This completes the proof of the dZrst case.
For the second case of the inductive step, suppose for some   fi  fiAz we have dedZned A AVA"  fi for all    and AV fi  fi.
To continue with the strong induction, we must include another base case, corresponding to   fi  fiAz  .
For such a case we must show that there is some    such that fi  fi.
In this case AV  fi  fi   so    	  fi   fi.
Also, AV  fi  fi and    fi  fiAz so    	 fi   fi.
Therefore by DedZnition 3.4 there must be some    such that  fi  fi.
We will complete the induction in two steps.
First we will show that for any   fi  fiAz with AV fi  fi there is some    such that fi  fi.
The next step will be to show that in such a case,  fi  fi.
          fi  fi                         There are exactly fi   distinct   fi  fiAz such that AV  fi  fi, and since A  is a bijection we can see that for each such  there is no   fi  fiAz such that fi   fi.
By DedZnition 3.1, for each such  there must exist some unique   fi  fiAz such that  fi   fi, and 	 	 	 and fi  fiAz   are congruent modulo 2 (since AV  fi  AV fi  AV  fi  fiAz  fi  fi).
We now apply DedZnition 3.3.a, where   A" ,   Az , fiAz  fi    A" and   Az .
Therefore we must have   fiAz  fi  .
Since there is such a  for each of the fi   distinct  , there must exist Az 	    	  such that Az Az fi  fi  Az  A"         fi  fi where Az Az AVA"  .
Since fi  fi fi  fi  fi  , it must be that    for some , and thus there is some    such that  fi  fi.
It remains to show that A AVA" fifi  fi.
Suppose that for some   ,  fi  fi but  fi  fi.
By the induction hypothesis, A AVA"  fifi   fi and there is some    such that  fi  fi.
If    then by DedZnition 3.3.b for any    such that fi  fi we must have   .
However if    then by the induction hypothesis fi   fi implies fi   fi  fi contradicting the fact the  is a grid-path.
If    then by DedZnition 3.3.b for any    such that fi   fi we must have   .
However if 	  then by the induction hypothesis fi   fi implies fi   fi  fi contradicting the fact the  is a grid path (DedZnition 3.1..          To complete the proof of undecidability we must encode the tiling.
This relies on some convenient properties of the function .
With respect to QPTL , the main property that we are interested in is that if a state occurs twice in a model, its interpretation with respect to propositional variables remains unchanged.
We wish to create a formula which forces the model to have a grid path, and then use propositions to represent the different tiles in .
We can then make sure that the sides of adjacent tiles match up.
We begin by dedZning the formula  A .
This consists of two parts: the dZrst  is true at the initial state in a model    	 	  fi if and only if  is a grid-path; and the second A  ensures that the sides of adjacent tiles agree.
 	    fi DEFINITION 4 Let the formula fi   and   fi.
The formula  is given by the following dedZnitions:         Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTLa03) 1530-1311/03 $17.00 AS 2003 IEEE       	 fi     	           fifi    fifi   fi  fi  fi                     fi  fi   fi    	   	 fi  fi  	   fi  fi fi   fi fi  fi fi    fi fi   fi     In this dedZnition we use the variable  to mark even states.
That is there is some -variant of  ,  Az such that   Az  if and only if there is some even  such that   .
The formula also enforces that   Az  if and only if there is some odd  such that    .
This is enough to enforce DedZnition 3.2.
It can also be seen that     fi if and only if for all    ,   	  .
Otherwise for any -variant  Az of  ,    Az   if and only if    Az  .
LEMMA 4 Let      .
Then    and only if  is a grid-path.
 if  This follows directly from the semantic dedZnitions given in Section 2, and comparison with DedZnition 3.
 We will now dedZne the formula  such that if    , then the function  	     fi   is a recurrent tiling function, where  	    if and only if    A   	 .
To do this we require the following lemma which associates horizontal and vertical directions in the grid with properties dedZnable in QPTL.
  LEMMA 5 Given a model       where  is a gridpath, let A 	  fi     be some bijection such that for all fi, Afi  fi.
For all fi, let Afi    	 .
Then if for all   fi,    	 	  	  ,  fi then     if there is some   fi such that         and 	  	 .
  is similar.
       and  fi then  PROOF: Since A is a bijection and for all , A  , all we have to show is that given    	   if for all   ,   	  then      	  ,    Let    fi     be the set of tiles, and for each      fi   fi  and    fi    .
Finally let !fi   ! be propositions corresponding to the tiles in  .
fi let   "  DEFINITION 5 The formula      !
  "# $ fi#  PROOF:    if there is some    such that     then        	.
Suppose fi    fi   .
Since we know from the proof of Lemma 2 that either    fi or    fi.
We also know    fi if and only if there is some    such that    .
Therefore if    fi, then      fi   and hence        	 , (from DedZnition 2).
The case for    fi        !    fi               "      fi fi      fi  is given as  !  fi fi  !
              fi   "# $    fi#     LEMMA 6 The formula " is satisdZable if and only if   recurrently tiles the plane.
PROOF: Suppose there is some function  	    fi   satisfying the properties of a tiling.
We dedZne a model ,  , of " as follows.
Let        , where !
 fi if and only if fi  .
Since  is a grid-path (Lemma 1), we have     (Lemma 4).
For all  	 there is some unique  such that  	   , and hence for all  	, !
  	 for some unique , so  will always be satisdZed.
Suppose that !
  fi for some fi, and !  fi  .
By Lemma 5, if  fi   fi then    and if  fi  fi then   , so "# and $ will be satisdZed.
Finally, for indZnitely many ,    fi .
From the proof of Lemma 3 we know that fi    only if  fi     and  fi  , so it follows that    fi# and thus    " .
Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTLa03) 1530-1311/03 $17.00 AS 2003 IEEE  Now suppose there is some model   fi such that    .
We construct a recurrent tiling function 	 as follows.
As   , it follows from Lemma 4 that  is a grid-path.
Therefore, by Lemma 2, there is some bijection A fi      such that A  .
We dedZne the tiling function 	 fi      by 	    if and only if  fi fi A A    .
Since    , 	 is well dedZned.
 , and    .
By Suppose 	   examination of the function  we can see fi       fi    .
Let   fi  .
Since  is a grid-path, it follows  A  from the dedZnition of 	 and the proof of Lemma 3 that      .
It therefore follows that    .
Hence 	   for some  Az fi  fi  , so    .
Since  , and fi      fi we dZnd that        , and thus 	   	     .
Now suppose that  fi   .
We apply a similar process to show 	  	   provided   .
If    we must have    ,      and      .
By the proof of Lemma 1 we must have      fi , and hence    so there is no tile to the left.
This can be seen by inspection of Figure 3.
 , we must have Finally, since           for indZnitely many  .
If      we must have    fi for some .
Therefore     , and  fi fi  , thus 	   for indZnitely many x.
  A  We have shown that QPTL with repeating states is undecidable when we allow the function  fi    to be arbitrary and thus we have proven Theorem 1.
The repeating semantics are too expressive to to allow any form of automated deduction.
However, we can see that the result could be stronger, since we only required  to belong to a class of functions that could represent a grid-path (for example, the class of functions where each state is repeated only a dZnite number of times).
The satisdZability problem for QPTL could be even harder than 	 .
4.
QPTL with dZnite repeating states We will now examine a class of functions which does not allow  to be a grid-path.
We dedZne the semantic interpretation QPTL	 to be the same as the semantic interpretation QPTL , except now we require that the range of  be dZnite (i.e.
there are only a dZnite number of states).
These  semantics retain much of the expressive power of QPTL , however the set of states is no longer an indZnite domain.
Formulas such as (2) are still expressible and meaningful.
However it is worth noting that these semantics are not a generalization of the usual semantic interpretation QPTL  .
In fact, every model of QPTL  is disallowed in QPTL	 since the model will necessarily have an indZnite number of states.
Consequently, contradictions in QPTL might be validities in QPTL	 , such as            (3)  Since the models for QPTL	 can be enumerated, we might expect the satisdZability problem to be recursively enumerable.
However, we will now show that the validity problem (determining whether a formula is valid) is undecidable, and consequently the satisdZability problem remains undecidable.
To show that QPTL is undecidable given the interpretation, QPTL	 , we will use the    tiling problem.
Since the range of  is dZnite, we cannot represent the entire plane.
However, we can use the following dedZnition and lemma to get around this problem.
DEFINITION 6 The th corner of the plane,    , is the set   	        .
We say a set of tiles, , tiles   if there is some function 	 fi     such that for all   where     , 1.
    	        2.
    	   fi  LEMMA 7 A set of tiles, , satisdZes the    tiling problem, if and only if for all  fi  ,  tiles the th corner of the plane.
PROOF: If there is some tiling function, 	 fi      , then restricting the domain of   to   will show that  tiles   .
Now suppose that for all  fi  , 	 is a tiling function for   .
We will dedZne a tiling function, 	 fi      by induction over .
We dZrst dedZne  fi     to be some function such that    	   for indZnitely many .
Clearly  such a function exists.
For the inductive step suppose that we have dedZned  fi     such that there are indZnitely many  where for all fi   ,    	  .
We dedZne  such that: 1.
 fi         ; 2. for indZnitely many , for all    	  .
Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTLa03) 1530-1311/03 $17.00 AS 2003 IEEE  fi    ,  4 3  2 1  0  	  fi           31 A 27       	23  	  29 15  22 32      	 	 	14 	21 8  13  20 30   	7 	12 	19 	  28  3 6  11  18  	2 	5 	10 	17 	26 0 1 4 9  16   24  	  25 33  0  1  2  3  4  Figure 2.
An illustration of the function  , where     It is a consequence of Ramseyas theorem that  must exist.
We dedZne the funcsome such    by  fi  fi    fi , and tion it is not hard to see that is a tiling function.
     We can now generalize the results of the previous section to apply only to the th corner of the plane.
We dedZne the function     by  fi  if   and  fi otherwise.
We dedZne 	    by 	  fi 	 where 	 is dedZned in DedZnition 2.
The function 	 restricts the gridpath the the th corner of the plane and is illustrated in Figure 4.
  fi      fi   We can now proceed as we did in the previous section.
For reasons of brevity we will not reproduce the full proofs, but rather skip straight to encoding the restricted grid-path in QPTL.
We will dedZne the formula      (grid-path corner) which forces the structure to represent a grid-path up to some arbitrary point, and all other states in the gridpath are collapsed to a single point, the dZnal state.
We will use the free variable  to mark the dZnal state.
We retain the dedZnitions     and   given in DedZnition 4.
We also add two new conditions.
The dZrst requires that  be true at only one state, and the second requires that after the dZrst occurrence of  , only states that have previously appeared in the model can be used.
Although the dZnal state appears indZnitely often in the model, the formula  will always be true at the dZnal state, simply because it is not the last occurrence of that state.
DEFINITION 7 The formula      is given by the fol-  lowing dedZnitions:    fi        	                 	                	     	                                                        fi fi   	          fi fi fi fi fi                                                                                  	       Proofs similar to those given in the previous section will show that if      is satisdZed by some model, that model will act like a grid-path until  is true.
Particularly, if     for all      , then it follows that  dedZnes a grid-path over the fi corner of the plane.
The only difference between   and   is that we do not require the tiling to continue after the dZrst moment that  is true.
We can now dedZne the formula  , which is similar to the formula  , however it is not required to encode a recurrent tiling.
Again, a proof of soundness can be inferred from the previous section.
  DEFINITION 8 The formula   is given as      	   fi                fi      fi        fi            fi  fi         	             fi                     We can now sketch a proof of the undecidability of the satisdZability problem.
The form of the proof is slightly different since given any satisdZaible formula, we can always show it is satisdZable by enumerating all QPTL  models.
However this process will not halt if the formula is unsatisdZable.
Several technical sub-lemmaas are omitted, however these results are similar to results given in the previous section and are not hard to reproduce in the context of this section.
LEMMA 8 validity.
  can tile the plane if and only if   is a  Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTLa03) 1530-1311/03 $17.00 AS 2003 IEEE    PROOF: If can tile the plane, then will clearly be able to tile any portion of the plane.
The formula  requires that the model be a grid-path up to some point, and all moments after that point share a single state.
Since tiles the plane we can easily dZnd an assignment of the atoms in that will satisfy the formula A Az .
Since this process can be repeated for any assignment of fi satisfying  fi , it must be that A Az is a validity.
If fi  fi   fi   A fi  is a validity, then it must be true for every model.
It thus follows that can tile the 	  corner of the plane for every 	, and thus can tile the plane.
Az A"  	      	        	    AVA"     	Az 	  	 	Az  A"   AVA"   AVA"  	  Az    	  Az            Figure 3.
An illustration of of .
  We have shown that even with dZnite models these semantic interpretations make QPTL too expressive to be axiomatized.
We will now examine one more semantic dedZnition which is more general than the linear models allowed by QPTL , but has a decidable satisdZability problem.
5.
QPTL with deterministic successors We now examine the semantic QPTL , a restriction of QPTLfi which allows states to be repeated throughout a model, however it restricts the successor function to be deterministic.
The semantic interpretation QPTL is the same as the semantic interpretation QPTLfi except that we now require   to be dedZned such that if   fi   , then     fi    .
These semantics allow all models of QPTL, however they also allow models that loop indZnitely.
The resulting theory is decidable as we show below.
The cost of this decidability is expressivity.
We dZnd that QPTL is only slightly less restrictive than QPTL (in fact we show a QPTL is satisdZable by translating formulas and models to agree with QPTL ).
This semantic still allows us to examine periodic models, and formulate such concepts as the period of cycle for an automata.
Importantly, the complexity of satisdZability problem for QPTL is no harder than the satisdZability problem for QPTL , so any increase in expressivity is an increase we get for free.
We will show that the satisdZability problem for QPTL is reducible to the satisdZability problem for QPTL , and hence decidable.
To do this we simply unwind the QPTL model and allow the variable Az to mark the beginning and the end of the loop.
DEFINITION 9 Given any QPTL model  fi     , we say    is the dZrst looping state if there exists integers    such that   fi  fi    and for all   ,   fi   implies  fi .
The  -marked version of  is the QPTL model  Az fi Az    Az  Az  where  1.
Az  , the  -version      fi   fi Az  if   is a dZrst looping Az  Az  state,      fi  Az  otherwise.
This is illustrated in Figure 5, where   fi  ,    fi  , and  and  AVA" are marked with Az .
For formulas without quantidZcation or the variable Az , it is clear that satisdZability is preserved in the  -marked ver2.
Az  Az  Az          sion of the model.
To extend this to include formulas containing quantidZers we must transform the formula so that it only refers to moments up to (and including) the last moment in the loop, and infers all indZnite behavior from that dZnite set of moments.
This is done in the following dedZnition.
DEFINITION 10 The  -version of  is dedZned in the following stages.
First we dedZne a translation for the subformulas of .
For every sub-formula,  , of  let  describe a unique variable that does not appear in .
Furthermore, suppose that the variable Az does not appear in .
We dedZne by induction:         fi  fi  fi Az    	  Az     fi  fi  fi  A   Az   fi   fi  fi    fi  	  fi  fi  	   fi  fi  fi     fi  fi  1.
Given  fi  , some sub-formula of , dedZne the     formula:      fi     2.
Given  formula:      fi        (4)   , some sub-formula of , dedZne the  fi     Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTLa03) 1530-1311/03 $17.00 AS 2003 IEEE  Az    	     Az 	              (5)  Finally we enumerate all the sub-formulas of the form  or  , as     fififi  .
Then AL  A" fififi     which have         (6)  The dedZnition of AL requires the temporal operators to be modidZed so they never refer to the same state at different moments.
This way AL can be interpreted in a linear model (i.e.
a QPTL model), however it will simulate the looping behavior of a QPTLfi model.
The variable  is used to mark the start and end of the loop (if there is a loop).
The atoms,  , are used to reference what formulas have been true at, or since the start of the loop.
All sub-formulas of AL only refer to moments up to the end of the loop and infer the indZnite behavior of the the model from those moments.
For every sub-formula,  , of the interpretation of the operator will remain unchanged at all moments except for the moment before the second occurrence of  .
At does not this moment we must ensure that the operator refer to the next moment, but rather the dZrst moment that  was true.
This way we can ensure that the properties of the    loop are maintained.
For example if and  , to make AL satisdZable in QPTL we must ensure that  can refer to previous moments.
The formula   allows us to refer to previous moments by ensuring that   is true in all moments after the dZrst moment  was true if and only if  was true at that moment.
Just before the second moment  is true,  does not refer to the next state in the model (since  is true there).
Instead AL ainterpretsa  as true if and only if   is true, which is true if and only if  was true at the start of the loop.
In this way AL behaves the same way on the  -marked version of a model, as behaves on the model itself.
 , of the interpretation of For every sub-formula, the operator is altered so it only refers to moments up to the end of the loop (the moment before  is true for the second time).
The formula   will ensure that the atom   is true at some moment if and only if  has been true at every moment since the dZrst moment  was true.
The formula  is then interpreted to be true if and only if  is true up to the end of the loop, and   is true at the end of    the loop also.
This will only happen if  was true at every moment in the loop, and would therefore for true at every subsequent moment in the QPTLfi model.
Note that since the interpretation of  is dedZned in terms of the operator , the interpretation remains valid even for models where  is false for every moment.
It is now a simple matter to show the satisdZability problem is decidable.
We will give a sketch of the proof below.
A  	 fi .
Then is satisdZed by LEMMA 9 Suppose  fi some QPTLfi model   if and only if AL is satisdZed by the -marked version of  .
PROOF: The reasoning above can be applied inducis satisdZed by some tively to show that if QPTLfi model   , then AL will be satisdZed by the -marked version of  .
If AL is satisdZed by some QPTL model   , where  is true for at most one moment, then clearly   will also be a model for .
If AL is sat  , where  isdZed by some model,   is true for at least two moments, we can dZnd a QPTLfi model of by dedZning a function Az that agrees with  up to (but not including) the second moment that  is true and loops back to the dZrst state where  was true.
Since the successor function is deterministic, this is enough to dedZne the model.
A simple inductive argument will show that will be satisdZed by the model    .
  Consequently is satisdZable in QPTLfi if and only if AL is satisdZable in QPTL.
Since the size of AL is polynomial in the size of the complexity of the decision procedure is roughly equivalent (bearing in mind that the decision procedure for QPTL is non-elementary [13]).
From this we can infer an optimal decision procedure for QPTLfi .
It is also worth noting that a recent, complete axiomatization of QPTL, [6] specidZed the axiom QX0, (given as the equation 1), which is not necessarily valid in QPTLfi .
However all the other axioms and rules given in that axiomatization are sound for QPTLfi , and the models of QPTL which are not models of QPTLfi are exactly the models,   , such that    .
It is therefore worth considering whether that axiomatization, without the axiom QX0, is complete for QPTLfi .
However the proof of completeness for QPTL was very complicated given the QPTL semantics, and a proof of completeness given the QPTLfi semantics has not yet been investigated.
6.
Conclusion In this paper we have investigated several alternative semantics for QPTL which allow states to be repeated throughout a model.
These semantics were generated by varying the properties of the function , which maps moments of time to the states of the model.
While we have not systematically investigated the decidability of all possible variations of , we have identidZed three semantics which give a good indication of the relationship between the restrictions on  and the complexity of the satisdZability problem.
For the least restrictive semantic, QPTL , we have shown that the satisdZability problem is highly undecidable, via an encoding of the recurrent tiling problem.
While this is enough to show that the language is too expressive to  Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTLa03) 1530-1311/03 $17.00 AS 2003 IEEE  be of practical use, it only scratches the surface of the true complexity of the language.
When encoding the tiling problem we only required the function to allow a state to be repeated twice, rather than arbitrarily.
Also, the formulation of the tiling problem only required the nesting of three propositional quantidZers.
The effect of quantidZer depth on the satisdZability problem and the true complexity of QPTL are also worth investigating.
We have also shown that the satisdZability problem is coRE complete when the models are restricted to have a dZnite number of states (QPTL ).
It should be noted the same proof will sufdZce to show that the satisdZability problem is co-RE complete when is restricted to have a dZnite number of states, and each state can have at most two successors, (i.e.
       implies either  fi   fi,   fi    fi or   fi    fi).
This shows that even quite strong restrictions on are not enough to make the satisdZability problem for QPTL decidable.
The last semantic we investigated was QPTL which required the successor function to be deterministic.
The satisdZability problem was shown to be decidable, and a decision procedure was given.
There are still some semantics that are less restrictive than QPTL and are not known to be decidable, however these are quite artidZcial and we will not go into them here.
Finally it is worth noting some comparisons with work done in hybrid logic.
We have seen that allowing repeating states allows us to quantify not only propositional atoms, but also the states of the model.
Quantifying the states of a model has been studied extensively in hybrid logic [1], [7].
The proof of undecidability given in this paper is comparable to the one given in [7], since it essentially uses propositional quantidZcation to simulate Gorankoas reference pointers.
The signidZcance of the proof given here, is that it uses a syntactically linear language, and does not rely on branching modal operators.
[7] V. Goranko.
Hierarchies of modal and temporal logics with reference pointers.
Journal of Logic Language and Information, 5(1):1a24, 1996.
[8] D. Harel.
Recurring dominoes: making the highly undecidable highly understandable.
In Proc.
of the Conference on Foundations of Computing Theory, pages 177a194, 1983.
[9] D. Harel.
Effective transformations on indZnite trees, with applications to high undecidability, dominoes, and fairness.
Journal A.C.M., 33(1):224a248, 1986.
[10] Y. Kesten and A. Pnueli.
A complete proof systems for QPTL.
In Proceedings, Tenth Annual IEEE Symposium on Logic in Computer Science, pages 2a12, 1995.
[11] M. Marx and M. Reynolds.
Undecidability of compass logic.
Journal of Logic and Computation, 9(6):897a914, 1999.
[12] A. Pnueli.
The temporal logic of programs.
In Proceedings of the Eighteenth Symposium on Foundations of Computer Science, pages 46a57, 1977.
[13] A. Sistla, M. Vardi, and P. Wolper.
The complementation problem for Buchi automata with applications to temporal logic.
Theoretical Computer Science, 49:217a237, 1987.
[14] A. P. Sistla.
Theoretical Issues in the Design and VeridZcation of Distributed Systems.
PhD thesis, Harvard University, 1983.
[15] E. Spaan.
Complexity of Modal Logics.
PhD thesis, Universiteit van Amsterdam, 1993.
References [1] C. Areces, P. Blackburn, and M. Marx.
The computational complexity of hybrid temporal logics.
L.J.
of the IGPL, 8(5):653a679, 2000.
[2] R. Berger.
The undecidability of the dominoe problem.
Mem.
Amer.
Math.
Soc., 66, 1966.
[3] K. Englehardt, R. van der Meyden, and Y. Moses.
Knowledge and the logic of local propositions.
In Theoretical Aspects of Rationality and Knowledge, Proceedings of the Seventh Conference, pages 29a41, 1998.
[4] K. Fine.
Propositional quantidZers in modal logic.
Theoria, 36:336a346, 1970.
[5] T. French.
Decidability of quantidZed propositional branching time logics.
In Proceedings of the 14th Australian Joint Conference on ArtidZcial Intelligence, pages 165a176, 2001.
[6] T. French and M. Reynolds.
A sound and complete proof system for qptl.
In Proceedings of AiML 2002, to appear.
Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTLa03) 1530-1311/03 $17.00 AS 2003 IEEE