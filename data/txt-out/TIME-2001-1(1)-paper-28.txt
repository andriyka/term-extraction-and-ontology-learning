Effective Representation and Efficient Management of Indeterminate Dates Fabio Grandi C.S.1.E.-C.N.R.
and D.E.I.S.
University of Bologna, Italy  Federica Mandreoli D.S.I.
University of Modena and Reggio Emilia, Italy  fgrandi@deis.unibo.it  fmanldreoli@dsi.unimo.it  Abstract  [7], aimed at publishing on the Web an XML-based electronic edition of the "Historical-geographical dictionary of Tuscany" by Emanuele Repetti, which is an encyclopaedic collectioii of information concerning Tuscany published in eight volumes between 1833 and 1846.
The digital edition should incorporate hyper-textual links, also from items to additional multimedia data (e.g.
pictures, maps) and should be made available on the Web to'be worldwide accessible through the Internet.
This aspect has a noteworthy relevance from a Clultural Heritage and also scientific point of view, as it frequently happens in medieval archaeology that written sources have the same importance as material evidence.
In thi:j framework, an outstanding and appealing feature of XML is the capability of easily encoding semantic information in digital documents as meta-data to be automatically used by advanced computer tools, like "intelligent" search engines.
In the "XMLRepetti" project, we aim at extending our previous work [6,4,3] on incorporating temporal semantics and temporal search facilities into the Web using XML-related technologies.
The main required extension is properly the object of this work: that is the development of an adequate support to temporal indeterminacy which is abundantly used in natural languages and, especially, in historical text sources.
In particular, the paper focuses on the efficient management of a large corpus of historical sources as Repetti's Dictionary starting from the representation of dates found in the text.
For this reason problems related to the discovery of dependencis between events and other reasoning tasks involving a (broader) tem-poral knowledge base will be not considered in this paper.
Management of indeterminate temporal expressions is useful in a wide range of applications, from designing and querying temporal databases to knowledge representation and reasoning in artificial intelligence.
In this papec we focus on the representation and management of indeterminate dates, corresponding to a common use of temporal indeterminacy which can be found in (historical) texts written in natural language, as in expressions like: around 1624, near the end of the fourteenth century, etc.
In this context, we adapt and improve the probabilistic approach designed for the TSQL2 language andfurther developed by Dyreson and Snodgrass, and show how it can be effectively and eficiently adopted for the management of indeterminate dates.
1 Introduction Management of temporally indeterminate expressions [2] is useful in a wide range of applications, from designing and querying temporal databases to knowledge repre' sentation and reasoning in artificial intelligence.
For example, its relevance was acknowledged during the design of the consensual temporal query language TSQL2 and indeterminacy support was included in the language features [SI.
The TSQL2 approach was further developed by Dyreson and Snodgrass in-[2].
where implementation lines and a complete discussion and comparison with previous and alternative approaches to temporal indeterminacy can also be found.
The present research stems from the computer management, in a Cultural Heritage environment, of historical text sources, which usually contain a lot of written indeterminate temporal expressions (like around 1624, near the end of the fourteenth century, etc.).
In particular, our main interest in indeterminacy derives from our involvement in a project, which is being carried on at the University of Florence  0-7695-11074101 $10.00Q 2001 E E E  2 Temporal Indeterminacy in Natural Langwage When reading texts written in natural language, it is very commoii to find vague and imprecise temporal expressions concerning the validity of historical facts.
In this context, the reference base unit on the time axis (that is the bottom  164  .
granularity [l]) is the day and, thus, we are mainly concemed with the representation and management of dates.
Therefore, the validity of a single historical fact can be either instantaneous,for an event occurred on a particular date or represented by a time interval (i.e.
a set of contiguous days) for facts with a non-null duration.
In any case, the validity is often defined through complex descriptions, also involving multiple calendars and granularities, which are not easy to formalize in a correct and useful way.
However, as it will become clear in the rest of the paper, the presence of different calendars and granularities does not increase technical difficulties, as all the calendars in use have the day as bottom granularity and seemingly use the same lattice (in practice, the only granularities of interest are always: day, month, year and century), so that suitable conversion functions can easily be provided.
Starting form the analysis of a large corpus of historical sources as Repefti's Dictionary, we classified the temporal expressions denoting single indeterminate events into four main categories'.
If we denote by the term Reference Temporal Expression (RTE) the time literal written in text, the four categories correspond to the use of temporal expressions with the form: "in RTE" (to reference a validity shorter than the RTE duration) for category C 1, "at the beginning (end) of RTE" for CZ(Cs),"around RTE" for Cq, as in the following examples: 0  and ended, the expressiondenotes an indeterminateinterval, whose boundaries are indeterminate C1-type dates.
Summing up, every indeterminate temporal expression found in the text and concerning a single event can be reduced to to an indeterminate date or to an interval whose boundaries are indeterminatedates falling in one of the categories above, whose representationis addressed in the next Section.
2.1 Representation of Indeterminate Dates In the field of temporal databases, the mainstream solution for the management of temporal indeterminacy is the probabilistic approach introduced for the TSQL2 language [SI and further developed by Dyreson and Snodgrass [2].In this approach, the occurrence of an event is represented as a random variable with a given probability distribution.
We follow this approach for two reasons: it is appropriate to represent the validity of historical facts (we agree with the discussion and comparison with alternative methods in [2]) and seems amenable to efficient implementation.
In the probabilistic model, an indeterminate event t is represented through its probability distribution P, different from zero only in an interval of possible occurrence,whose boundaries (t- and t+) are said lower support and upper support:  The abbey was consecrated to St. Martin in 1276.
(Cl)  t = (t-  The third circuit of the city walls was added at the beginning of the fourteenth century.
(C,) 0  0  -  t+,P )  where P ( i ) = Pr[t = i] with P ( i ) = 1, and P ( i ) = 0 if i < t- or i > tf.
For query evaluation, two indeterminateinstants are considered equivalent (t 1 E tz) iff they have exactly the same supports and distributions.
Moreover, TSQL2 introduces a suitable extension of the temporal order relation, that is a new definition of the "Before()" primitive which is used to define all the other temporal comparison operators [SI.
In the indeterminate semantics, the "Before()" primitive includes an additional parameter p to specify an ordering plausibility, whose value can range from 0 to 100 (high plausibility means high precedence probability between the compared instants).
Its complete definition becomes thus:  The famous painter died from the plague near the end of March 1532.
(C,) The delegation of the Emperor arrived in Rome around Christmas 1467.
(C4)  Notice that in the (actually very frequent) C1 case, we are in the presence of a so-called granularity mismatch [2], where a determinate expression with higher granularity is used to denote an indeterminate expression with lower granularity.
As a matter of fact, it is quite likely that the example refers to an event, happened on a certain date located in 1276, rather than to an activity lasting for the whole year.
Moreover, we cannot a priori ascertain on which day the event actually happened and there is no reason to prefer one date with respect to another.
On the other hand, the example "The castle was restored after the fire between 1549 and 1553" concems a real interval since the restoration action likely required several years to be completed.
However, since it is not known the exact date the works began  Before@, t l , t z ) := ~ ( t l t z ) A Pr[tl  < t z ] 2 p/100  where the precedence probability is evaluated as (Pk is the distribution of t k ) : Pr[t1 < t21 =  Pl (i) ' P2(A  (1)  i<j  It should be noted that, since the Before() evaluation is based on an hypothesis of statistical independencebetween the occurrences of tl and t z , the use of "Before()" does not  'Actually, OUT classification is based on the analysis of texts written in Italian, but we think it can be applied to texts written in other languages as well.
165  Category  Associated density uniform  c 3  Shape flat positively skewed negatively skewed  c 4  symmetric  Gaussian  Cl c 2  exponential reversed exponential  lend itself to a correct probabilistic evaluation of the ordering tl < t 2 < t 3 as "Before(p,t l , t 2 ) A Before(p, t z , t ~ ) " , unless the support intervals of tl and t 3 are disjoint.
In [2], probability distriljutions are represented via approximated mass functions.
The proposed method allows to store any possible distribution, whose probability mass is quantized into P equal "rods", into a (pruned) binary tree with a number of leaves between P and 2 P .
Then, the precedence probability (1) is evaluated by means of an algorithm based on rod counting, which traverses one of the trees associated to tl and t 2 in a breadth-first fashion by means of a moving pivot and ends when enough rod pairs are counted to ensure, with the required plausibility, that (1) is true or the converse is false (early exit conditions).
Although the algorithm does a lot of "virtual" comparisons in the first steps (half of the rod pairs are counted by the first pivot), it slows down in an exponentialway and, in the worst case, it has to count all the pairs and, thus, 2P pivots are required.
Since for each pivot the algorithm traverses a subtree to locate a leaf (for both t l and t 2 mass-trees), the worst-case performance is O ( Plog, P ) .
The P value cannot be too small (a trade-off value of 2* is used in [2]), because the approximationerror, either in the probability mass quantization and in the algorithm counting, is O ( l / P ) .
The space occupation of each mass-tree is between about 2P log, P C (with best pruning) and 4P log, P C , where C (coarseness)is the number of sample points chosen for the discretization (with the value 216 used in [2], one mass-tree requires between 1.5KB and 3KB).
The total space required to represent a collection of indeterminate dates grows linearly with the size of the collection, as every date usually requires a different mass-tree (e.g.
even two dates with distributions identical in shape and width but shifted on the date axis require two-trees with the same rod counts in the leaves but different sample points stored in interior nodes).
Thus, the representation of 10,000indeterminatedates may require up to about 200MB to store the mass-trees, with P and C values as above.
For our purposes, this framework is even too general (since it allows to represent any POssible distribution, with the proviso that P is large enough)  Name DURING VERY -EARLY  EARLY VERY LATE LATE STRICTLY-AROUND AROUND WIDELYAROUND  N 1 3  4 3 4 3 5 7  but quite costly in terms of time and space and, thus, we will introduce an alternative approach, based on piecewiseconstant distributions, which is either appropriate to correctly represent all the required kinds of indeterminacy and to attain inexpensive storage and efficient query processing.
As far as the possible probabilitydistributions we are interested in,we introduce here an assignment to the temporal expressions classified in the previous Section.
The shapes we chose for the distributions are the simplest ones compatible with the "natural"meaning of the four categories, that is: flat for Cl, single-peaked positively (negatively)skewed for C2 (C3),single-peakedsymmetric for C4.
The corresponding probability distributions are piecewise-constantover N intervals with the same amplitude (base intervals).
We define principal interval the base interval associated with the maximurn probability.
For categories C1 and C4, the principal interval exactly corresponds to the RTE written in the text.
For CZ (C& the principal interval is the first (last) interval contained in the RTE at the immediately lower granularity level (e.g.
the principal interval is January 1630 for the expression "at the beginning of 1630", whose R E is 1630).
The single values assigned to the probability over the base intervals have been computed by means of an associated continuous density.
In the absence of more reasonable assumptions, we chose as associated densities the simplest ones with the same shape as our distributions2.
Table l summarizes the results; for the distributions but the uniform, we also consider variants consisting in a greater or lesser dispersion around the mean value (e.g.
VERY UTE, WIDELY-AROUND,etc.
), which will correspondinglyimply a different number of base intervals.
Let us, clarifjr the rationale of this encoding scheme with an example.
Assume we have to understand and encode the expression "around year 1622" (C4) and we can definitely exclude that the intended event could be happened before 1621 or after 1623 (N=3, STRICTLYAROUND), while there is a certain probability that the event either happened in ~  *More l'orrnally, we made the choices that maximize the entropy of the random variable when no additional information (e.g.
- moments) on the shape is available.
166  Associated continuous distribution -  1621 or in 1623 (with probability p' in both cases), though the probability p" it happened right in 1622 (which is the principal interval) is maximum (obviously, 2p' p" = 1).
Hence, the probability distribution is (there are no leap years between the supports):  mation in a Cultural Heritage setting, like a repository of historical documents in digital form.
In fact, it is more user-friendly for a non computer-expert user and allows to directly represent the original text expression.
Therefore, we consider an indeterminate date encoding in the form: (PRINCIPAL-INTERVAL, DISTRIBUTION),where the principal interval is expressed in implicit way, that is by means of its left boundary and its duration, both specified at a given granularity and according to a given calendar:  +  if i < 1621/1/1o r i > 1624/12/31 if 1621/1/1 5 i 5 1621/12/31 P(i)= or 1623/1/1 5 i 5 1623/12/31 I p"/365 O if 1622/1/1 5 i 5 1622/12/31 p'/365  (START, G-ITY,  DURATION, CALENDAR)  On the date axis, such an interval starts on the day given by beginof(START) and its length is DURATION times the number of days in GRANULARITY, where the first day of START is determined according to the given CALENDAR.
For instance, our sample expression "around year 1622" (with given distribution as in Fig.
1) can be simply encoded as: ( (1622, YEAR, 1, GREGORIAN) , STRICTLYAROUND) We would like to stress that the main reason of this encoding scheme is that the principal interval of the probability distribution has a direct correspondence with the RTE written in the text (1622 in our example).
Otherwise, an explicit expression of the supports would require a detailed knowledge of the shape of the distributions and annoying computations from the user: in the example, the STRICTLYAROUND distribution has three base intervals (i.e.
''lobes'' in Fig.
1) and, thus, the supports are 1621/1/1 and 1623/12/31 but, .if we had defined it with five base intervals, they were 1620/1/1 and 1624/12/31.
The availability of parameterized pre-defined distributions and the implicit support encoding scheme makes it a bit more "transparent" and userfriendly, so that the user can best concentrate on the choice of an intuitive "form factor" among a few available alternatives rather than on mathematical details of distributions like the support computation (or the variance).
However, the lower and upper supports (and all the base intervals) can automatically be computed in a straightforward way from the principal interval and the specified distribution.
We emphasize that the uniform adoption of an encoding  The p' and p" values are determined as mean values taken by the (continuous) associated Gaussian distribution on the same time intervals.
The variance of the Gaussian is chosen such that 99,75% of the probability be contained between the supports (i.e.
being negligible the contribution of the excluded tails).
The resulting density functions are shown in Fig.
1 and we have p' N 15,8% andp" 2: 68,4%.
Notice that, with the mass-tree method and the parameter values used in [2], we could only represent our distributions with a rather rough approximation.
For example, the probability mass over the base intervals of the EARLY distribution are, respectively,about 0.777,O.
179,0.033 and 0.01 1; in order to quantize them with a reasonable approximation, we would need at least to exactly represent the third decimal digit, which requires P = 21deg.
This would mean a five times more expensive comparison algorithm and a storage space between 6.5KB and 13KB for every mass-tree.
2.2 Encoding of Indeterminate Dates With the proposed formalisms, every indeterminate date can be represented either by means of a support and distribution pair (as in TSQL2) or, equivalently, by means of a principal interval and distribution pair.
While the first format is probably the best-suited to timestamp tuples in a valid-time relational database, we prefer the second as it is more appropriate to encode temporal infor-  167  evaluate (2), we have partitioned the range of the extemal summation (i.e.
the tl support) into portions defined by the base intervals of t 2 (i.e.
we "project" on the t l axis the partition defiined on the t 2 axis) as follows:  scheme, in which value and granularity have a direct correspondence with the RTE used in the text source (which we call rigorous encoding d e ) , represents itself metainformation (on the originalform of the text contents)which can be used in automatic way for advanced investigations.
Furthermore, different RTEs can be specified at different granularity levels and according to different calendars.
In our framework, this fact only impacts on the correct conversion between the RTE and the corresponding principal interval of the distribution, for which simple rules can be provided.
In fact, principal intervals are anchored on the date axis (at the base granularity of days) and all the other granularities can easily be convertedto days, for each calendar commonly used in historical sources.
Nevertheless, we maintain trace of the original form (including granularity and calendar) of the RTEs in their encoding as it represents potentially useful meta-information.
For instance, the RTE "469 ab urbe condita" (i.e.
469 after the founding of Rome, which was in 753 B.C.)
gives rise to the equivalent forms: (0469-01-01, DAY, 365, ROMAN) (-0284, YEAR, 1, GREGORIAN) (0469, YEAR, 1, ROMAN)  The first summation accounts (when t 5 t;) for the left portion of the t 1 support possibly not overlapped by the t 2 support.
]Moreover, the inner summation is simply 1, as always i + l 5 t z (the whole t 2 distribution is to the right).
In each of the portions defined by the t 2 base points in the second summation, say in the.k-th which is actually I,",the contribution of the innermost summation can be split into two parts, the former due to the P2 probabilities inside I," and the latter due to the P2 probabilities outside (i.e.
to the right of I;).
This yields to the following equation:  .
where only the last one respects the rigorous encoding rule.
3 Efficient Comparison of Indeterminate Dates  t ; -1 P$l  Nz  -  Pl(i) k=l %=t210  2=t;  Due to the lack of space, in this Section we only sketch how the precedence probability between two indetenninate instantst1 = (t; t;,Pl) andt2 = (t; t$,P2) canbe evaluated in an efficient way.
The full version of the prove can be found in [5].
Starting from the definition (l), we have derived a formula that exploits the fact that distributions as in Tab.
1 are piecewise-constk functions over N base intervals, with equal amplitude h = (t+ - t - ) / N , defined as I k = [ t ; , t t ) where t; = th(k - l), t: = t- + h k (k = 1,.. .
, N).
As far as probabilities are concerned, if p k / h is the constant occurrence probability P ( t ) of each instant t in the base interval I k , we have Pr[t E I k ] = P r [ t i 5 t < t l ] = pk (obviously c f = l p k = 1).
Pr[tl < tz] is 1 if tf 5 t; and 0 if t z 5 t l ) .
From definition (1) we have:  ':,k-'  Pl(i) +  < t21 =  (  ':k-'  N  +  p  ~ 2 ( j )  j=2+1  J  3=t:s,  x%;:  place the sum ~ z ( j with ) the mean value p t / 2 (the s u m a n d is constant as P 2 ( j ) yields pt/hz in I,").
Hence, the introduction of the following function G ( k ) = pi12 + ) ~ ~ ~ p'2 ,=+Pr[t , 2 tCk h2/2] and the substitution of the first summation into a first one spanning only complete: If intervals and one over the left portion of the interval containing t2 yields to the following formula:  +  t-  -1  t;-1  1Jl(t;)  Pr[tl  M  < t21 =  C  +  ~1(i)  ~ 1 ( i )  z=t-  z=t;  lJl(t;)  J=Z+l  where C%,+,P 2 ( j )= Pr[t2 > i] measures the probability that the event t2 occurs after the instant i.
Therefore, the i-thterm in the extemal summation computes the probability that tl occurs at i and t 2 occurs after.
In order to  ~  Notice that we do not make a significant error if we re-  +  2=t;  2  k=l  (5)  z=t;,,  where th.e function I ( % )= [(z - t - ) / h + 1Jgives the index number k of the base interval I containing 2. .
If tl is the event with the largest base interval (i.e.
hl 2 h2), in [5]we have shown that equation 5 can be rewritten  168  as follows:  e=i  A further optimization (see [5] for details) can exploit the fact that several comparisons can actually be avoided during query processing, thanks to the results of the previously effected comparisons.
It is based on the maintenance, for each distribution form, of two bounds corresponding to the up-to-now known dates ensuring the one that the temporal predicate is true and the other that the temporal predicate is false.
During query execution, a positive comparison between an indeterminate event in the text and one of the two bounds allows to know the result of the evaluation of the involved predicate without computing it.
k=l  where f(z)= *p'(z) represents the occurrence probability over a fraction of a base interval from the beginning to z.
Notice that, by means of the cumulative probability function over base intervals F ( i ) = Cl=,pi,we can Ii(t;)-l e also write Ce=1 p1 = Fi(Ii(t,) - 1) and G ( k ) = $ p i 1 - F2 ( I C ) .
Therefore, the pre-computation of all the F ( i ) values (in O ( N )time) for every supported distribution allows the formulae above to be simply evaluated via tablelookup and the complexity of (6) to be reduced to O(N2).
When the events to be compared are such that h 1 < ha, we can use the formula Pr[tl < t2] = 1 - Pr[t2 < t l ] Pr[tg = tl], where Pr[t2 < tl] can still be evaluated with formula (6) and, as it is easy to verify, Pr[t2 = tl] can be also evaluated during the computation of (6) without an increase in computational complexity (the term in square brackets is the same) [5].
The precedence probability, as in the TSQL2 approach [SI,can be used for the definition of the temporal selection predicates working on events and/or intervals to be practically used in the queries (e.g.
precedes, overlaps, contains and meets).
With indeterminate dates, they can be considered satisfiedwhen the associated probability is greater than or equal to the assigned plausibility.
For example, considering intervals 11 = [If If]and 4 = [I; I;], such probabilities (assuming independence between the interval boundaries) can be evaluated as: Pr[11 precedes 121 = Pr[If < 1 2 5 1 Pr[I1 overZaps 121 = Pr[lt < 1.3 .
Pr[I," < If] Pr[I1 contains 1 2 1 = Pr[1f < I;] .
Pr[If < I;] Pr[Il meets 121 = Pr[If = I;] Using equation 6, each of these probabilities can be evaluated in O ( N ) steps, where N is the number of base points of the indeterminate date with the smallest base interval (i.e.
it is N2 if hl > h2).
In any case, since the only distributions of interest are those listed in Tab.
1, N is always a very limited number, never exceeding 7, hence we can assume a constant time to evaluate the precedence probability, as it does non depend on the problem dimension.
Notice that also the space overhead required to store the system table for quick evaluation of the F function is negligible, as we needjust to store a total of 30 values for all the distributions (each one contributes with its N), regardless of the number of different indeterminate dates we have to represent.
4  Conclusions  In this paper we presented a probabilistic approach for the representation and management of indeterminate dates in historical text sources in digital form.
The approach is based on the use of piecewise-constant distributions, which is computationally very efficient,as it is provided with optimized comparison algorithms and does not require storage space overhead to represent probability distributions.
In this respect, our encoding scheme is also very attractive for use in very large temporal databases, provided that piecewiseconstant distributions are considered suited as well for an effective modeling of indeterminacy in the given application context.
+  References [l] C. Bettini, C. Dyreson, W. Evans, R. Snodgrass, and X. S. Wang.
A glossary of time granularity concepts.
In Temporal  Databases - Research and practice.
Springer-Verlag, 1998.
LNCS No.
1399.
121 C. Dyreson and R. Snodgrass.
Supporting valid-time indeterminacy.
ACM Trans.on Database Systems, 23 1):1 57, 1998.
Proc.
of [3] E Grandi and E Mandreoli.
The valid web &.
Sofnyare Demonstrations Track at the EDBT Intl ' Con&,Kon-  In  stanz, Germany, Mar.2000.
[4] E Grandi and E Mandreoli.
The valid web: an d x s l infrastructure for temporal management of web document.
In Proc.
of the Intl' Con& on Advances in Information Systems (ADVIS),Izmir, Turkey, Oct. 2000.
[ 5 ] E Grandi and E Mandreoli.
Effective representation and efficient management of indeterminate dates.
TR CSITE-04-01, C.S.1.E.-C.N.R.,Bologna,2001.
[6] E Grandi and M. Scalas.
Extending temporal database concepts to the world wide web.
In Proc.
of the Natl' Con$ on Ad-  vanced Database Systems (SEBD),Ancona, Italy, June 1998.
[7] E Niccolucci, A. Zorzi, M. Baldi, E Canninati, P. Salvatori, and T. Zoppi.
Historical text encoding: an experiment with xml on repetti's historical dictionary.
In Proc.
of the Intl' Con& of the Association for History and Computing - UK Branch (AHC-UK),London, UK, 1999.
[8] R. Snodgrass,editor.
The TSQL2 Temporal Query Language.
Kluwer Academic Publishing, New York, 1995.
169