On Non-local Propositional and Local One-variable Quantified CTL Sebastian Bauer Institut fuEr Informatik, UniversitaEt Leipzig, Augustus-Platz 10a11, 04109 Leipzig, Germany bauer@informatik.uni-leipzig.de Frank Wolter Institut fuEr Informatik, UniversitaEt Leipzig, Augustus-Platz 10a11, 04109 Leipzig, Germany wolter@informatik.uni-leipzig.de  Abstract We prove decidability of anon-locala propositional CTL , where truth values of atoms may depend on the branch of evaluation.
This result is then used to show decidability of the aweaka one-variable fragment of first-order (local) CTL , in which all temporal operators and path quantifiers except atomorrowa are applicable only to sentences.
Various spatio-temporal logics based on combinations of CTL and RCC-8 can be embedded into this fragment, and so are decidable.
1 Introduction This paper continues the investigation of the computational behaviour of first-order branching time temporal logics started in [6].
A anegativea result obtained in [6] is the undecidability of the one-variable fragment of quantified computational tree logic CTL (both bundled [1, 10] and aunbundleda versions, and even with sole temporal operator asome time in the futurea).
On the other hand, it was shown that by restricting applications of first-order quantifiers to state (i.e., path-independent) formulas, and applications of temporal operators and path quantifiers to formulas with at most one free variable, decidable fragments can be obtained.
Here we prove decidability of another kind of fragment of first-order CTL , the so-called weak one-variable fragment, in which quantifiers are not restricted to state formu-  Ian Hodkinson Department of Computing, Imperial College, 180 Queenas Gate, London SW7 2BZ, U.K. imh@doc.ic.ac.uk Michael Zakharyaschev Department of Computer Science, Kingas College, Strand, London WC2R 2LS, U.K. mz@dcs.kcl.ac.uk  las, but only the next-time operator may be applied to open formulas, while all other temporal operators and path quantifiers are applicable only to sentences.
The main technical instrument is the method of quasimodels [4].
We first show decidability of the non-local version of propositional CTL , where truth values of atoms may depend on the branch of evaluation.1 We then show that this logic can express the existence of a certain quasimodel associated with a given formula of the weak one-variable fragment.
Since this existence is equivalent to the satisfiability of the formula, the decidability of the weak fragment follows.
This decidability result is not only of interest per se, but also because it can be used to obtain decidability results for certain spatiotemporal logics based on CTL and the region connection calculus RCC-8 (see the survey papers [5, 9]).
All omitted details of proofs can be found in the full draft version of the paper at http://www.dcs.kcl.ac.uk/staff/mz.
2 Decidability of non-local PCTL The propositional language PCTL [3, 7] extends propositional logic with temporal connectives U; S (auntil,a asincea) and a path quantifier E (athere exists a branch (or history)a).
The dual path quantifier A (afor all branches (or histories)a) is defined as an abbreviation: AD = E D. Other standard abbreviations we need are: 3F D = U D, 2F D = 3F D, 3PD = S D, D = U D, P D = S D (asome time in the future,a aalways in the future,a asome time  : :  >  ?
:: >  ?
1 This contrasts with the behaviour of process logic, the local version of which is decidable, while the non-local one is undecidable [2].
Proceedings of the Ninth International Symposium on Temporal Representation and Reasoning (TIMEa02) 1530-1311/02 $17.00 AS 2002 IEEE  in the past,a aat the next momenta and aat the previous momenta).
We write P for the underlying set of propositional atoms.
PCTL is interpreted in (bundled and unbundled) models based on D-trees.
A tree is a strict partial order T = hT ; <i such that for all w 2 T , the set fv 2 T : v < wg is linearly ordered by <.
When we write T for a tree, it will be implicit that T = hT ; <i.
For t 2 T , let ht (t ) = jfu 2 T : u < t gj.
A full branch of F is a maximal linearly-ordered subset of T .
In this paper we are only concerned with D-trees.
An D-tree is a rooted tree whose full branches, ordered by <, are all order-isomorphic to the natural numbers hS N ; <i .
A bundle on T is a set H of full branches of T with H = T .
In this paper we deal with the anon-locala variant of PCTL in which truth values of atoms can depend on the branch  of evaluation.
Thus, a bundled model has the form  M = T; H ; h , where T is an D-tree, H is a bundle on T, and h : P !
a(f(I,; t ) : t 2 I, 2 H g).
M is a full tree model if H is the set of all full branches of T. The semantics of PCTL is now defined as follows, where t 2 I, 2 H :     h0 ( p) = h( p) \ f(I,; t ) : t 2 I, 2 H0 g for any atom p. It is easy to translate PCTL -formulas to two-sorted first-order formulas with the same meaning.
It follows that for any I, 2 H0 , t 2 I,, and any formula D, we have (M; I,; t ) j= D iff (N; I,; t ) j= D. This completes the proof for the bundled case.
Suppose D now thatEH contains all full branches of T and let N = T0 ; H 0 ; h0 be the full tree model based on N, where H 0  H0 is the set of all full branches of T0 , and h0 ( p) = h( p) \ f(t ; I,) : t 2 I, 2 H 0 g, for an atom p. We claim that for all PCTL -formulas D, all full branches Il of T0 and all t 2 Il, we have (M; Il; t ) j= D   for an atom p, (M; I,; t ) j= p iff (I,; t ) 2 h( p);  the booleans are defined as usual;   (M; I,; t ) j=    (M; I,; t ) j= D S D    (M; I,; t ) j=  D U D iff there is u > t such that u 2 I,, D, and (M; I,; v) j= D for all v 2 (t ; u), where (t ; u) = fv 2 T : t < v < ug;  (M; I,; u) j=  iff there is u < t with (M; I,; u) j= D and (M; I,; v) j= D for all v 2 (u; t );  t 2 Il.
ED iff (M; Il; t ) j= D for some Il 2 H  with  R EMARK 1.
By requiring that (I,; t ) 2 h( p) if and only if (I,0 ; t ) 2 h( p) for all p, t, I,, I,0 with t 2 I, \ I,0 , we obtain the traditional local semantics in which the truth values of atoms do not depend on the branch of evaluation.
For an atom p, this independence is expressible (at the root of an D-tree) in the non-local semantics by It( p) = (E p !
A p) ^ A2F (E p !
A p): Thus, a formula D is satisfiable in the local semantics iff (D _  3F D) ^ :3P> ^  ^  (N; Il; t ) j= D:  Fix a PCTL -formula D. D EFINITION 3.
Let sub(D) denote the set of subformulas of D and their negations.
A type for D is a subset D of sub(D) such that D ^ D 2 D iff D 2 D and D 2 D, for every D ^ D in sub(D), and :D 2 D iff D 2 = D, for every :D 2 sub(D).
A set IL of types is said to be coherent if it is non-empty and for T S D 2 sub(D), the conditions ED 2 IL, ED 2 IL, and all ES D 2 IL are equivalent.
Fix an D-tree T = hT ; <i.
D EFINITION 4.
Given a non-empty set ILt of types for each t 2 T , and a full branch I, of T, a run in I, is a map  It( p)  L EMMA 2.
If a PCTL -formula D is satisfiable in a full (bundled) tree model, then D is satisfiable in a full (respectively, bundled) tree model based on a countable D-tree.
  iff  The proof is by induction on D. The atomic, boolean, and temporal cases are trivial.
Consider the case ED and inductively assume the result for D. If (M; Il; t ) j= ED, pick I, 2 H0 containing t. Clearly, (M; I,; t ) j= ED, so (N; I,; t ) j= ED.
Then there is I,0 2 H0 with (N; I,0 ; t ) j= D. Thus, (M; I,0 ; t ) j= D. Inductively, (N; I,0 ; t ) j= D. So (N; Il; t ) j= ED, as required.
The converse implication is easy.
r:I,!
p 2IS  is satisfiable in the non-local semantics, where IS denotes the set of atoms occurring in D. Hence, local satisfiability is reducible to non-local satisfiability.
Proof.
Let M = T; H ; h be a tree model.
We may view M as a two-sorted first-order structure, the two sorts being T and H .
Taking a countable elementary of    substructure this yields a bundled tree model N = T0 ; H0 ; h0 whose tree T0 and bundle H0 are countable.
Here,  [  ILt  t 2I,  such that   r(t ) 2 ILt for each t 2 I,,  for all D U D 2 sub(D) and t 2 I,, we have D U D 2 r(t ) iff there is u > t with u 2 I,, D 2 r(u), and D 2 r(v) for all v 2 (t ; u),  Proceedings of the Ninth International Symposium on Temporal Representation and Reasoning (TIMEa02) 1530-1311/02 $17.00 AS 2002 IEEE   for all D S D 2 sub(D) and t 2 I,, we have D S D 2 r(t ) iff there is u < t with D 2 r(u) and D 2 r(v) for all v 2 (u; t ).
D EFINITION 5.
A family (ILt : t 2 T ) of coherent sets of types is said to be an unbundled quasimodel for D over if  T  1.
D 2 D 2 ILt for some t 2 T and D 2 ILt ,  T  2. for all t 2 T , D 2 ILt , there is a full branch I, of containing t and there is a run r in I, such that r(t ) = D,  T  3. for each full branch I, of , there exists a run in I,.
: t 2 T ) is a bundled quasimodel for D over fies conditions 1 and 2.
(ILt  T if it satis-  L EMMA 6.
D is satisfied in a (bundled) model iff there is a (bundled) quasimodel for D over a countable D-tree.
M  T  M    = ; I,0 ; t0 ) j= D for ; H ; h be such that ( Proof.
Let some I,0 2 H and t0 2 I,0 .
By Lemma 2, we can assume that is countable.
For I, 2 H , t 2 I, and t 2 T , let  T  M  tp(t ; I,) = fD 2 sub(D) : ( ; I,; t ) j= Dg; ILt = ftp(t ; I,) : t 2 I, 2 H g: Clearly, tp(t ; I,) is a type for D and ILt is coherent.
For any I, 2 H , the map rI, : t 7!
tp(t ; I,) is then a run in I,.
We claim that (ILt : t 2 T ) is a quasimodel for D over (a bundled one if is bundled, and an unbundled one otherwise).
As ( ; I,0 ; t0 ) j= D, we have D 2 tp(t0 ; I,0 ) 2 ILt0 .
For each t 2 T and D 2 ILt , we have D = tp(t ; I,) for some I, 2 H containing t, so rI, (t ) = D and condition 2 of Definition 5 holds.
Finally, is a full tree model, for all I, 2 H , rI, is a run in I,, so if it is clear that condition 3 holds.
Conversely, let (ILt : t 2 T ) be a quasimodel for D over a countable D-tree .
Let <D 2 denote the set of finite sequences of 0s and 1s.
For IV 2 <D 2, jIVj denotes the length of IV.
By replacing with  T  M  M  M  T   T T  <  D  2 =def f(t ; IV) : t 2 T ; IV 2 <D 2; ht (t ) = jIVjg;  i.e., a countable D-tree when ordered by (t ; IV) < (u; Iz) iff t < u in T and IV is an initial segment (a prefix) of Iz, and by letting IL(t ;IV) = ILt for all t ; IV, we can assume that () for each t 2 T and D 2 ILt , there are 2D full branches I, of containing t such that there is a run r in I, with r(t ) = D. Each ILt is finite, so there are countably many pairs (t ; D) with t 2 T , D 2 ILt .
Enumerate them as (tn ; Dn ), n < D. Inductively, using (), choose a full branch I,n 3 tn for each n < D, such that (i) there is a run rI,n in I,n with rI,n (tn ) = Dn , and (ii) I,n = 6 I,m for all m < n. If we have a bundled quasimodel, let H = fI,n : n < Dg.
This is clearly a bundle on .
If we have an unbundled quasimodel, let H be the set of all full branches of , and further choose for each  T  T  T  I, 2 H n fI,n : n < Dg a run rI, in I,; this can be done by condition 3 of Definition 5.
So we have defined a run rI, in    I,, for each I, 2 H .
Now define a model = ; H ; h by taking h( p) = f(I,; t ) : t 2 I, 2 H ; p 2 rI, (t )g for p 2 P .
M T  C LAIM .
For all I, 2 H , all t 2 I,, and all D 2 sub(D), we have ( ; I,; t ) j= D iff D 2 rI, (t ).
P ROOF OF CLAIM .
The proof is by induction on D. For atomic D = p, we have ( ; I,; t ) j= p iff (I,; t ) 2 h( p), iff p 2 rI, (t ) as required.
The boolean cases are trivial.
For D U D 2 sub(D), we have ( ; I,; t ) j= D U D iff there is u 2 I, such that u > t, ( ; I,; u) j= D, and ( ; I,; v) j= D for all v 2 (t ; u).
Inductively, this holds iff there is u 2 I, with u > t, D 2 rI, (u), and D 2 rI, (v) for all v 2 (t ; u).
Since rI, is a run in I,, this is iff D U D 2 rI, (t ), as required.
The case of S is similar.
Finally, for ED 2 sub(D), we have ( ; I,; t ) j= ED iff ( ; Il; t ) j= D for some Il 2 H with t 2 Il.
Inductively, this is iff D 2 rIl (t ) for some Il 2 H with t 2 Il.
But evidently, S ILt = frIl (t ) : Il 2 H ; t 2 Ilg, so this is iff D 2 ILt .
Since ILt is coherent, this is iff ED 2 rI, (t ), as required.
The claim is proved.
Now let t 2 T be such that D 2 D for some D 2 ILt .
We may choose n < D with (t ; D) = (tn ; Dn ).
Then t 2 I,n 2 H and rI,n (t ) = D, so by the claim, ( ; I,n ; t ) j= D. Thus, D has a model.
M  M M  M  M  M  M  M  L EMMA 7.
Given a PCTL -formula D, it is decidable whether D has an unbundled quasimodel over a countable D-tree.
The same holds for bundled quasimodels.
Proof.
We will express the existence of a quasimodel in monadic second-order logic.
Given D, we can effectively construct the set C of all coherent sets of types.
A quasimodel over an D-tree has the form (ILt : t 2 T ) where ILt 2 C for each t; we will express this by unary relation variables PIL for each IL 2 C , the aim being that PIL is true at t iff ILt = IL.
We then express the stipulations of Definition 5 in terms of the PIL , as follows.
Let RD (D 2 sub(D)) be unary relation variables.
For a type D for D, let  T  DD (x)  ^  =  D2D  R D (x ) ^  ^  :RD (x):  D2sub(D)nD  The formula DD (x) says that the RD (x) define the type D at x.
For a unary relation variable B, let D be the conjunction of:    V  IL2C  8x B(x) ^ PIL (x) !
W    D2IL DD (x)  ,   8x RD1 UD2 (x) $9y (B(y) ^ x < y ^ RD2 (y) ^ 8z (x < z < y !
RD1 (z))) , for all D1 U D2 2 sub(D),  8x RD1 SD2 (x) $ 9y (y < x ^ RD2 (y) ^ 8z (y < z < x !
RD1 (z))) , for all D1 S D2 2 sub(D).
Proceedings of the Ninth International Symposium on Temporal Representation and Reasoning (TIMEa02) 1530-1311/02 $17.00 AS 2002 IEEE  So assuming that B defines a full branch, D says that the RD define a run in B.
Let I,(B) be a monadic second-order formula expressing that B is a full branch (a maximal linearlyordered set): It(X ) X Y I,(B)  8xy X x ^ X y !
x y _ x y _ y 8x X x !
Y x It B ^8X It X ^ B  X !
X  B  =    ( ( )  =  ( )  ( ( )  =  =  <  <  ( ( )  9  IL2C  8x _  h  PIL (x)  IL2C  i  IL0 (x)  IL0 2C IL= 6 IL0  h  ^ 8B I, B !
9 R ( )  D  ^ 9x _  D  i  D2sub(D)  IL2SC D2 IL  IL( )  IL2C D2IL  ( )  ( )  PIL (x)  ^  h  8x ^ P x !9B I, B ^ B x ^ 9 R D ^ D D(  !
i D (x))  :  9  f  g  Here, 9IL2C PIL denotes PIL1 : : : PILk , for C = IL1 ; : : : ; ILk , and similarly for the other 9s.
If we are dealing with bundled models, the conjunct B [I,(B) 9D2sub(D) RD D] on the second line should be omitted.
It should be clear that for any D-tree , we have = Al iff there is a quasimodel for D over (bundled or unbundled, as appropriate).
It follows from decidability of S2S [8] that it is decidable whether a given monadic second-order sentence is true in some countable D-tree.
The lemma now follows.
8  T  !
T  Tj  As a consequence of Lemmas 6 and 7 we finally obtain T HEOREM 8.
It is decidable whether a PCTL -formula has a full tree model in the non-local semantics.
The same holds for bundled models.
3 Decidability of the weak one-variable fragment of quantified PCTL Fix an individual variable x and denote by QPCTL1 the one-variable fragment of first-order PCTL , which can be defined as the closure of the sets P0 (x); P1 (x); : : : of unary predicates and p0 ; p1 ; : : : of propositional variables under is the operators x, , , E, , U and S. Note that now regarded as a primitive operator.
The weak one-variable fragment QPCTLw of QPCTL consists of all QPCTL1 formulas in which the temporal operators U and S and the path-quantifier E are applied to sentences only.
Thus, is the only temporal operator which can be applied to open formulas.
f g 9 ^:   f  g        ;:::;  2  I (w)  p0  T  E ;:::  M a f g!
in the signature of QPCTL1 athe state of at w. As before, is called a full model if H contains all full branches is a function : x D. Let of .
An assignment in w I, H and let D be a formula.
The truth-relation ( ; I,; w) =a D (or (I,; w) =a D if is understood, or ( ; I,; w) = D[d ], where (x) = d) is defined inductively by taking:  M T 2 2 M j M j    D2sub(D)  9  I (w)  I (w) = D; P0  ):  ^ ^ :P  M  D  x);  Thus, the following monadic second-order formula Al is effectively constructible from D: PIL  T h i  ( ));  ( )  M  T  = ; H ; D; I , A QPCTL1 -model is a quadruple where = T ; < is an D-tree, H is a bundle on , D is a non-empty set, the domain of , and I is a function associating with every time point w T a usual first-order structure  M  j  a  j Ia iff I w j a Ia, for atomic Ia; I, w j a 9x D iff I, w j b D for some assignment b;  (I,; w) =a (  M  ;  ( ) =  ) =  (  ;  ) =  for the temporal operators and path quantifiers, the definition is the same as in the propositional case.
Note that we have returned to the traditional alocala semantics in which truth values of atoms do not depend on the branch I, of evaluation.
The main result we prove in the remainder of this section is the following T HEOREM 9.
The satisfiability problem for QPCTLw formulas in both bundled and full models is decidable.
R EMARK 10.
(1) We remind the reader that the satisfiability problem for the full one variable fragment QPCTL1 in both bundled and full models is undecidable [6].
(2) Actually, using somewhat more sophisticated machinery (in particular, a mosaic technique) one can generalise Theorem 9 to the two variable, monadic, and guarded can be applied to formufragments of QPCTL in which las with at most one free variable and the other temporal operators and path quantifiers only to sentences.
(3) Theorem 9 and its generalisation above still hold if we extend QPCTLw with individual constants; however, functional symbols and equality may lead to undecidability, cf.
[4].
We will prove this result in two steps.
First, we show that a QPCTLw -formula is satisfiable iff it is satisfiable in certain quasimodels.
Then we will reduce satisfiability in quasimodels to non-local propositional satisfiability.
We begin the proof of Theorem 9 by recalling that the bundled case is reducible to the aunbundleda one [6].
So it is enough = ; D; I .
to consider satisfiability in full models Fix a QPCTLw -sentence D. For simplicity we may assume that any subsentence D of D is replaced by U D. Thus, is only applied to formulas with free variable x.
Proceedings of the Ninth International Symposium on Temporal Representation and Reasoning (TIMEa02) 1530-1311/02 $17.00 AS 2002 IEEE    M hT i ?
We define sub(D) and types for D as in Definition 3.
For every formula I,(x) = D(x) 2 sub(D) we reserve fresh unary predicates PI,i (x), and for every I, of the form ED, D1 U D2 , or D1 S D2 in sub(D) we reserve fresh propositional variables piI, , where i = 0; 1; : : : .
The PI,i (x) and piI, are called the i-surrogates of I,(x) and I,, respectively.
For D 2 sub(D), denote by Di the result of replacing in D all its subformulas of the form D, D U D, D S D, or ED that are not within the scope of another occurrence of a non-classical operator by their i-surrogates.
Thus, Di is a purely first-order (non-temporal) formula.
Let Ii = fDi : D 2 Ig for any set I  sub(D).
The idea behind these definitions is as follows.
The formulas Di abstract from the temporal component of D and can be evaluated in a first-order structure without taking into account its temporal evolution.
Of course, later we have to be able to reconstruct the truth value of D in temporal models from the truth value of the Di .
In contrast to the linear time case, we need a list of abstractions D0 ; D1 ; : : :, since the temporal evolution depends on branches.
So, intuitively, each i < D represents a branch.
(Actually, we will see that finitely many i < D are enough, since we have to represent branches only up to a certain equivalence relation).
sub(D) Let D(D) = 44 .
j  \\  Si  iff  ik  ED 2  [\  Si  iff  ik  D2  T Lest this be confusing, we note that S  [\  Si :  ik  i is the set of formulas occurring in every type in Si .
S (ii) T is a set of maps D : f1; : : : ; nI g !
ik Si , called traces, where nI D(D) is a natural number 	 depending on I and such that fD(i) : D 2 T g : i  nI = S .
T  The set of sentences in fD(i) : D 2 T g will be denoted by I(i).
For a trace D, we set D=  [  i (D(i)) ;  inI  T  =  fD : D 2 T g  :  D EFINITION 12.
Let I = hS ; T i be a state candidate for D and   D D  = D; P0 ; : : : ; p0 ; : : :  D  a first-order structure in the signature of QPCTL1 .
For every a 2 D we define the trace of a (with respect to I) as tr(a) = fD 2  We say that  L EMMA 13.
A state candidate I = hS ; T i for D is realisable iff the first-order sentence IaI =  ^  D2T  9x D ^ 8x  _  D  D2T  is satisfiable.
D EFINITION 14.
A connection is a quadruple (a; I; R; N ) consisting of two realisable state candidates a = (S ; T ) and I = (U ; V ), a relation R  T  V with domain T and range V , and a relation N  f1; : : : ; na gf1; : : : ; nI g with range f1; : : : ; nI g, such that for all (i; j) 2 N, all (D; D0 ) 2 R, and all D 2 sub(D), we have D 2 D(i) iff D 2 D0 ( j).
j  D EFINITION 11.
A state candidate for D is a pair of the form I = (S ; T ) in which: (i) S = fS1 ; : : : ; Sk g, where each Si is a set of types for D such that, for every sentence D, we have D 2 D iff D 2 D0 , for any D; D0 2 Si , and for every ED 2 sub(D),  ED 2  State candidates represent states w of temporal models.
The intuition behind this definition will be clear from the proof of the theorem below.
Here we only say that, roughly, the components Si of a state candidate I = hS ; T i represent the states of a moment w in different branches, and each trace D 2 T shows the types of one element of the domain of w in these states (i.e., its possible states in different histories).
It follows immediately from the definition that we have:  [  inI  i (sub(D))  :  D j= D[a]g  D realises I if T = ftr(a) : a 2 Dg.
:  A connection describes how (the abstract representation I of) a state w is related to (the abstract representation a of) its immediate predecessor.
To this end, the relation R between the traces in both representations is fixed.
For an D-tree = hT ; <i and w 2 T , denote by B(w) the set of full branches coming through w.  T  T  D EFINITION 15.
A quasimodel for D over is a map f associating with the root w0 of a pair f (w0 ) = (Iw0 ; gw0 ), where Iw0 is a realisable state candidate, and with every non-root point w 2 T a pair f (w) = (Cw ; gw ), where Cw = (aw ; Iw ; Rw ; Nw ) is a connection, and all gw , for w 2 T , are functions from B(w) onto f1; : : : ; nIw g such that the following hold:  T  T  1. if v is the immediate predecessor of w in , then Iv = aw and Nw = f(gv (I,); gw (I,)) : I, 2 B(w)g;  2. for all I, 2 B(w), D U D 2 Iw (gw (I,)) iff there exists u > w with u 2 I,, D 2 Iu (gu (I,)) and D 2 Iv (gv (I,)), for all v 2 (w; u) (I(i) was defined after Definition 11);  3. for all I, 2 B(w), D S D 2 Iw (gw (I,)) iff there exists u < w with D 2 Iu (gu (I,)) and D 2 Iv (gv (I,)) for all v 2 (u; w).
We say that f satisfies D if there exists w 2 T such that S Iw = (Sw ; Tw ) and D 2 S for some S 2 Sw .
While the connections take care of the truth values of alocala formulas of the form D, quasimodels take care of the remaining aglobala temporal operators.
Proceedings of the Ninth International Symposium on Temporal Representation and Reasoning (TIMEa02) 1530-1311/02 $17.00 AS 2002 IEEE  S(I,; w) = ftp(I,; w; a) : a 2 Dg;  An induction on d shows that the number ](d ) of dw -classes is at most Iz(D)d  2(d +1)jsub(D)j (for any w).
For d = 0, one may check that if (I,; w) j= D iff (I,0 ; w) j= D for each sentence D 2 sub(D), then I, 0w I,0 .
So ](0)  2jsub(D)j .
Assume the result for d. One may check that if I,; I,0 2 B(w) contain a common immediate successor v of w, (I,; w) j= D iff (I,0 ; w) j= D for each sentence D 2 sub(D), and I, dv I,0 , then I, wd +1 I,0 .
Both checks involve an induction on D in (2) above.
It follows that ](d + 1)  Iz(D)  2jsub(D)j  ](d ), and hence that ](d )  Iz(D)d  2(d +1)jsub(D)j for all d, as required.
jsub(D)j 0 I, then I, w I,0 , so that w Finally observe that if I, w has at most ](jsub(D)j)  D(D) classes.
MI,w j  Let I,w1 ; : : : I,wnw be some minimal list of full branches such that f[I,w1 ]w ; : : : ; [I,wnw ]w g is the set of all w -equivalence classes.
With each a 2 D we associate a trace  T HEOREM 16.
D is satisfiable in a QPCTL1 -model iff there exists a quasimodel satisfying D. Proof.
()) Suppose that D is satisfied in some model.
We may replace its tree by + =   <DD, as in the proof of Lemma 6; <D D denotes the set of finite sequences of natural numbers.
Every branch of is aduplicateda D times in + at each node, and D is still satisfied in the resulting model = h + ; D; I i.
Thus ( ; D; v) j=a D for some v 2 T + , D 2 B(v) (defined with respect to + ) and some assignment .
If w 2 T + and I, 2 B(w), let  T T T T M T  M T a where  tp(I,; w; a) = fD 2 sub(D) : (  T  ;  ;  g  ) = D[a]  :  T  Let Sw = fS(I,; w) : I, 2 B(w)g. We extract from + a subtree 0 = hT 0 ; <0 i in which every node has at most sub(D) immediate successors.
To this end, we inIz(D) = 22 ductively define Tn0  T + with this property.
Set T00 = fw0 g, where w0 is the root of + .
Given Tn0 , for each w 2 Tn0 with ht (w) = n, and each S 2 Sw , we pick I,S 2 B(w) such that S(I,S ; w) = S, and (we use the form of + =   <D D here) I,S \ Tn0 = I,S \ I,S = ft 2 T + : t  wg for S distinct S; S0 2 Sw .
Let Bw = fI,S : S 2 Sw g, and Tw = Bw .
We can assume thatSD 2 Bw0 .
Note that jBw j  Iz(D).
Now 0 set Tn0S fTw : w 2 Tn0 ; ht (w) = ng.
Finally define +1 = Tn [ 0 0 T = n<D Tn .
Note that D  T 0 and v 2 T 0 .
Let 0 = h 0 ; D; I 0 i and 0 be the restrictions of and + to T 0 .
One can easily show by induction on the construction of D 2 sub(D) that ( ; I,; w) j=a D iff ( 0 ; I,; w) j=a D, for all full branches I, in 0 and all w 2 I,.
(For example, suppose ( ; I,; w) j=a ED.
Then there is I,0 2 B(w) in + such that ( ; I,0 ; w) j=a D. Pick a full branch Il in 0 for which S(I,0 ; w) = S(Il; w).
Since D is a sentence, we have ( ; Il; w) j=a D. It follows by IH that ( 0 ; Il; w) j=a D and so ( 0 ; I,; w) j=a ED.)
Thus 0 satisfies D and we can work with this model instead of .
Define an equivalence relation w on B(w) (defined in 0 now), for w 2 T 0 , by taking I, w I,0 when ( 0 ; I,; w) j=a D iff ( 0 ; I,0 ; w) j=a D, for every D 2 sub(D) and every assignment .
The w -equivalence class generated by I, will be denoted by [I,]w .
Since only  is applied to open formulas, we can show that the number of w -equivalence classes is bounded by D(D).
To show this, for w 2 T 0 , full branches I, and I,0 in B(w), and d < D, we put I, dw I,0 if for all t 2 T 0 with t  w and ht (t )  ht (w) + d, we have  T  j  j  T  T T  0  M T  T  M M  M T  M M  M  M M T  1. t 2 I, iff t 2 I,0 ,  T  M  M  M T  T  M a  a  2. if t 2 I,, then for all assignments and all D 2 sub(D) with at most ht (w) + d ht (t ) occurrences of , we have (I,; t ) j=a D iff (I,0 ; t ) j=a D.  Dwa : f1; : : : ; nw g !
[  Sw  by taking Dwa (i) = tp(I,wi ; w; a).
Denote the resulting set of traces by Tw .
Let Iw = (Sw ; Tw ) for all w 2 T 0 .
We are now in a position to define a quasimodel f over 0 satisfying D. If w is not the root, then set f (w) = ((Iv ; Iw ; Rw ; Nw ); gw ), where v is the immediate predecessor of w, and for root w0 let f (w0 ) = (Iw0 ; gw0 ), where  T      gw (I,) = i iff I, 2 [I,wi ]w ,  Rw = f(Dva ; Dwa ) : a 2 Dg,  Nw = f(gv (I,); gw (I,)) : I, 2 B(w)g.  It is not hard to check that f is a quasimodel satisfying D.  (() Now suppose that f is a quasimodel for D over T = hT i with root w0 .
Let f (w0 ) = (Iw gw ) and f (w) = (Cw gw ) = ((aw Iw Rw Nw ) gw ) for non-root w 2 T .
Let ;<  0;  ;  ;  ;  ;  0  ;  Iw = (Sw ; Tw ) and nw = nIw .
A run r in f is a function associating with any w 2 T a trace r(w) 2 Tw such that (r(v); r(w)) 2 Rw for any non-root w with immediate predecessor v. Using the condition that the range and domain of Rw coincide with f1; : : : ; nw g and f1; : : : ; nvg, respectively, it is not difficult to see that, for any w and any D 2 Tw , there exists a run r with r(w) = D. Let R be the set of all runs.
For every w 2 T we find a first-order structure I (w) with domain D = R realising Iw = (Sw ; Tw ) and such that for all i 2 f1; : : : ; nw g, r 2 D, and D 2 sub(D),  M T  D 2 r(w)(i)  iff I (w) j= Di [r]:  a  Let = h ; D; I i and let be any assignment in D. One can show by induction that for all D 2 sub(D), all w 2 T , and all I, 2 B(w) with gw (I,) = i, say, we have I (w) j=a Di  iff  (  M I, w j aD ;  ;  ) =  :  Since D 2 r(w)(gw (D)) for some w 2 T , D 2 B(w) and r 2 R , we finally obtain ( ; D; w) j= D.  Proceedings of the Ninth International Symposium on Temporal Representation and Reasoning (TIMEa02) 1530-1311/02 $17.00 AS 2002 IEEE  M  Now we construct a reduction of QPCTLw to non-local PCTL by means of encoding quasimodels in non-local propositional tree models.
Suppose again that a QPCTLw sentence D is fixed.
With every realisable state candidate I = (S ; T ) for D, every connection C, every i  D(D), and every sentence D 2 sub(D), which either is a propositional variable or starts with an existential quantifier 9x, we associate propositional variables pI , pC , pi , and pD , respectively.
Let ] be a translation from the set of QPCTLw -sentences into the set of PCTL -formulas which distributes over the booleans, temporal operators and path quantifiers, and D] = pD , where D is a propositional variable or a sentence of the form 9x D. Clearly, D] is a PCTL -formula.
Then the following formula D?
is effectively constructable from D:  tended to mean gw (I,) = i.
This is ensured by the formulas  A  ( i  j );  !
:  (5)  1i< j D(D)  A2F  ^    ^  I2R (D)  A2F  ( i  !
:  j );  (6)  1i< j D(D)  pI !
i^    1inI  pC !
i^  1inI  C2C (D)  (7)  ;  i  1inI  (8)  :  i  1inI  Here and below we assume that C = (a; I; R; N ).
Now we write down a formula which says that N in C is determined by the functions gw :  A2F    D?
= D] ^ (D ^ :3P>) _ 3P(D ^ :3P>)  ^ p p ^ p p ^ Ep A _ p  ^ Ep A _ p   ^    pC !
C2C (D)  ^  E( p j ^ P pi )  (i; j )2N  ;  ^  A  _    ( p j ^ P pi )  (9) :  (i; j )2N  where D is the conjunction of the formulas (1)a(11) defined below.
_ _R  I2  A2F    A pI ^  ^Ap ^Ap  A pC ^  C2C (D)  !
:  pI ); 0  0  ( C  (1)   !
:  pC ) 0  :  (2)  C6=C0  Here R (D) and C (D) are the sets of realisable state candidates and connections for D, respectively.
The formulas in (1) say that the pI and pC are alocala (so we can write w j= pI and w j= pC ) and that precisely one pI holds at the root and precisely one pC holds at each non-root point.
Intuitively, w j= pC means that f (w) = (C; g), for some g. Say that a pair of connections (C1 ; C2 ) is suitable if the second state candidate of C1 coincides with the first state candidate of C2 .
The set of all suitable pairs of connections is denoted by Cs (D).
A pair (I; C) is suitable if the first state candidate of C coincides with I.
The set of all suitable pairs of this form is denoted by R s (D).
The following formulas say that the pair induced by a point and its immediate predecessor is suitable:  A  _ _R  (I;C)2  A2F  ( pI ^  pC );  (3)  s (D)  ( pC1  ^ ^ ^D ^  ^ p R ^ p A2  include:  ( I  I6=I  (D)  Finally, we have to ensure that the set of sentences true at (I,; w) corresponds to the set of sentences in Iw (gw (I,)).
Let I0w (i) be the set of sentences in sub(D) n Iw (i).
Then we  ^  pC2 ):  (4)  (C1 ;C2 )2Cs (D)  Intuitively, for i such that 1  i  D(D), (I,; w) j= pi is in-  A  ( I ^ pi ) !
( D I2 (D);1inI D2I(i) ( C ^ pi ) !
( C2S (D);1inI D2I(i) F  ]  ]    D] )  D2I0 (i)  ^  ;  (10)  :  (11)  :  ^    D] )  :  D2I0 (i)  T HEOREM 17.
A QPCTLw -sentence D is satisfiable in a full model iff the PCTL -formula D?
is satisfiable in a full non-local model.
Proof.
()) If D is satisfiable, then it is satisfied in a quasimodel f for D based on an D-tree = hT ; <i.
Let f (w) = (Cw ; gw ) = ((aw ; Iw ; Nw ; Rw ); gw ) if w is not the root and f (w0 ) = (aw0 ; gw0 ) for root w0 of .
Define a (propositional) valuation h in by taking, for all w 2 T and I, 2 B(w):  T  T    (I,; w)    (I,; w) 2 h( pC )    (I,; w) 2 h( pi )    (I,; w)  T  2 h( pI ) iff I = Iw , for every realisable state candidate I;  iff C = Cw , for every connection C;  iff gw (I,) = i, for all i < D(D);  2 h( pD ) iff D 2 Iw (gw (I,)), for all sentences D in sub(D).
It is not hard to prove that the full model required.
M T T  M Th =  h  ;  i  is as  Conversely, suppose = h ; hi satisfies D?
.
Then D is true at the root w0 of .
Define a quasimodel f by taking f (w) = (Cw ; gw ) = ((aw ; Iw ; Nw ; Rw ); gw ) if w 6= w0 , and f (w0 ) = (Iw0 ; gw0 ), where (()  Proceedings of the Ninth International Symposium on Temporal Representation and Reasoning (TIMEa02) 1530-1311/02 $17.00 AS 2002 IEEE   Iw0 is the unique I for which w0 j= pI (this is independent of the branch of evaluation);  for w 6= w0 , Cw is the unique C such that w j= pC ;  gw (I,) = i for the unique i for which (I,; w) j= pi .
The reader can check that f is a quasimodel satisfying D.  4 Conclusion The decidability of the weak one-variable fragment of first-order CTL can be used to obtain decidability results for certain spatio-temporal logics based on CTL and the region connection calculus RCC-8 (see the survey papers [5, 9]).
From this viewpoint it has sufficient expressive power to be useful.
However, there is still a gap between the undecidability of the one-variable fragment of first-order CTL and the decidability of its weak one-variable fragment.
In particular, the following problems are still open.
1.
What happens if the path-quantifier open formulas as well?
E  is applied to  2.
Or, what happens if all temporal operators are applied to open formulas, but E only to sentences?
3.
Another open problem is the computational complexity of the logics considered above.
The reduction proofs presented in this paper provide only non-elementary decision procedures (simply because the complexity of S2S is non-elementary).
We do not believe that this is optimal.
[2] A. Chandra, J. Halpern, A. Meyer, and R. Parikh.
Equations between regular terms and an application to process logic.
In STOC, pages 384a390, 1981.
[3] E. Emerson and J. Halpern.
asometimesa and anot nevera revisited: on branching versus linear time.
Journal of the ACM, 33:151a178, 1986.
[4] I. Hodkinson, F. Wolter, and M. Zakharyaschev.
Decidable fragments of first-order temporal logics.
Annals of Pure and Applied Logic, 106:85a134, 2000.
[5] I. Hodkinson, F. Wolter, and M. Zakharyaschev.
Monodic fragments of first-order temporal logics: 2000a2001 a.d.
In R. Nieuwenhuis and A. Voronkov, editors, Logic for Programming, Artificial Intelligence and Reasoning, volume 2250 of LNAI, pages 1a23.
Springer-Verlag, 2001.
[6] I. Hodkinson, F. Wolter, and M. Zakharyaschev.
Decidable and undecidable fragments of first-order branching temporal logics.
In Proc.
Logic in Computer Science (LICSa02).
IEEE Computer Science Press, 2002 (in print).
(Draft available at http://www.dcs.kcl.ac.uk/staff/mz.)
[7] F. Laroussinie and P. Schnoebelen.
A hierarchy of temporal logics with past.
Volume 775 of LNCS, pages 47a58.
Springer-Verlag, 1994.
[8] M. O. Rabin.
Decidability of second order theories and automata on infinite trees.
Transactions of the American Mathematical Society, 141:1a35, 1969.
[9] F. Wolter and M. Zakharyaschev.
Qualitative spatio-temporal representation and reasoning: a computational perspective.
In Exploring Artificial Intelligence in the New Millenium.
Morgan Kaufmann Publishers, 2002 (in print).
[10] A. Zanardo.
A finite axiomatization of the set of strongly valid ockamist formulas.
Journal of Philosophical Logic, 14:447a468, 1985.
Acknowledgements The work of the second and forth authors was partially supported by UK EPSRC grant GR/R45369/01 aAnalysis and mechanisation of decidable first-order temporal logics;a the fourth author was also partially supported by UK EPSRC grant GR/R42474/01 aComplexity analysis of reasoning in combined knowledge representation systems.a The work of the third author was partially supported by Deutsche Forschungsgemeinschaft (DFG) grant Wo583/3-1.
We are grateful to Szabolcs MikulaEs for helpful discussions and Colin Stirling who attracted our attention to the non-local version of CTL .
Thanks are also due to the anonymous referees for useful suggestions and comments on the first version of this paper.
References [1] J. Burgess.
Logic and time.
Journal of Symbolic Logic, 44:566a582, 1979.
Proceedings of the Ninth International Symposium on Temporal Representation and Reasoning (TIMEa02) 1530-1311/02 $17.00 AS 2002 IEEE