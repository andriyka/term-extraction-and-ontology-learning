Deciding consistency of a point-duration network with metric constraints Isabel Navarrete Facultad de Informatica Universidad de Murcia Campus de Espinardo, Murcia 30.071, Spain inava@dif.um.es Abdul Sattar School of Information Technology, Faculty of Engineering and Information Technology Griffith University PMB 50 Gold Coast Mail Centre, Queensland 9726, Australia a.sattar@gu.edu.au Roque Marin Facultad de Informatica Universidad de Murcia Campus de Espinardo, Murcia 30.071, Spain roque@dif.um.es  Abstract  We introduce a new model, MPDN, for quantitative temporal reasoning with points and durations, that supposes an extension of the TCSP formalism and previous point-duration network models.
The problem of deciding consistency for a MPDN is shown to be NP-complete.
So, we identify a tractable fragment, named simple MPDN, that subsumes the STP model and allows for duration reasoning.
Necessary and sufficient conditions for deciding consistency of a simple MPDN are used to design an algorithm for consistency checking, whose time complexity is cubic in the number of variables.
This is a significant improvement, not only in computational complexity but also in simplicity, over previous non-specific algorithms that can be applied to solve the consistency problem.
Keywords: Temporal representation and reasoning in AI, temporal constraint reasoning, point and duration reasoning.
1  Introduction  In a wide variety of situations, problem solving tasks require a rather extensive knowledge and reasoning about time.
In most applications, knowledge of temporal constraints is expressed in terms of relations between time objects (intervals, points or durations).
Several constraint-based systems have been proposed for temporal constraint reasoning, mainly concentrated on two approaches: qualitative formalisms [1, 14] and quantitative or metric models [3].
Later efforts [6, 10] have been made on integrating information between time points and intervals in a single model.
Some researchers have presented systems that support qualitative and/or quantitative constraints between durations [1, 13, 12, 11].
The need for this kind of models is well argued in the literature.
In this paper, we present a new point-duration network model with metric constraints, MPDN, which subsumes some previous formalisms for temporal reasoning with points and/or durations [3, 11].
Since the consistency problem for these models is NP-complete, we cannot expect better complexity results for a MPDN.
So, we  Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTL'03) 1530-1311/03 $17.00 (c) 2003 IEEE  introduce a tractable fragment, simple MPDN, which is a nice tradeoff between expressive power and time complexity.
The consistency checking algorithm we provide for a simple MPDN supposes a significant improvement over previous non-specific algorithms that can be applied to solve the consistency problem [7, 5, 13].
Example 1 To illustrate the usefulness of the new tractable fragment we adapt the example proposed in [10] and we include additional information about durations of events.
The temporal information provided in this story can be managed with a simple MPDN, as we will show later.
"Bob, Fred and John work for a company that has main office in Los Angeles.
It takes John less than 20 minutes and Fred 15-20 minutes to get to work.
Today John left home between 7:05-7:10 a.m. and Fred arrived at work between 7:50-7:55 a.m. We know that Fred and John met a traffic light on their way to work.
Today Bob left home before 7:45 a.m. and takes 5-10 minutes less than Fred to go to work".
2  Preliminaries  A metric constraint (or quantitative constraint) is represented by a set of real intervals C = {I1 , .
.
.
, Ik }.
A unary metric constraint Ci restricts the domain of variable xi to the given set of intervals, while a binary metric constraint Ci,j restricts the feasible values for the time-distance xj - xi .
A TCSP [3] is a binary network involving a set of point variables and sets of unary and binary metric constraints among them.
A special case is an STP where each constraint is given by a single interval.
We will use the metric algebra [3], that is provided with operations of set intersection, inverse (-1 ) and composition ([?])
of metric constraints.
Given two quantitative constraints C and C  , the composition C [?]
C  can be computed as the union of pair-wise sum of intervals, that is:  C [?]
C  = Ij [?
]C,Ik [?
]C  Ij + Ik = [aj , bj ] + [ak , bk ] = [aj + ak , bj + bk ] =  The inverse C -1 is obtained as C -1 Ij-1 | Ij [?]
C , where the inverse of an interval [a, b] is the interval [-b, -a].
Definition 1 A metric point-duration network, MPDN, is an structure SP D = NP , ND , Rel(P, D)fi formed by two TCSPs, NP and ND , and a set of ternary constraints Rel(P, D) relating points and durations, where: * NP is determined by a set P = {p1 , .
.
.
, pn } of time-point variables that take values over R+ 0, and a set of unary and binary metric constraints between points.
* ND is given by a set D = {dij | pi , pj [?]
P } of duration variables over R+ 0 and a set of unary and binary metric constraints between durations.
* Rel(P, D) is given by triplets of real values, (Pi , Pj , Dij ), for points and durations that satisfy the Euclidean distance equation dij = |pi - pj |, for echa duration dij .
A MPDN with n points and d durations is consistent if at least one solution S = (AP , AD ) exists, where AP is a n-tuple of pairs, where each pair < pi , Pi > denotes the assignment of a value Pi to point variable pj , and AD is a d-tuple of pairs < dij , Dij >, where a value is assigned to each duration variable, so that all unary, binary and ternary constraints are satisfied.
A constraint is feasible is there is a solution that satisfies this constraint.
The minimal MDPN [3] equivalent to a given one is represented by all feasible unary and binary constraints, what means that these constraints are as explicit as possible.
Definition 2 A simple MPDN is a MPDN such that each network NP and ND represents an STP, and for every duration dij it must be pi <= pj , that is Ci,j [?]
[0, [?]).
This way Rel(P, D) is obtained upon the linear equation dij = pj -pi for each duration dij .
In order to deal with consistency and other reasoning tasks, it is useful to represent a MPDN (or simple MPDN) by means of two directed constraint graphs, GP = (VP , EP ) and GD = (VD , ED ), that explicitly show binary constraints affecting points and durations, respectively.
One node represents a point or duration variable, that may be labelled with its unary constraint.
Each arc is labelled with the corresponding binary constraint.
Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTL'03) 1530-1311/03 $17.00 (c) 2003 IEEE  Example 2 The temporal information given in the story of example 1 can be managed with a simple MPDN.
Let b- , b+ , f - , f + , j - , j + denote the time points that Bob, Fred and John, respectively, leave home and arrive at the office.
The constraint graphs GP and GD depicted in figure 1, show the unary and binary metric constraints between points and durations that can be extracted from the story.
All arcs are supposed to be labelled with (0, [?
]), which is equivalent to the qualitative relation < [10].
All times in Gp are relative to the "beginning of the world", chosen at 7:00 a.m. For instance, from the given information that Fred arrives at work between 7:50-7:55 a.m., the domain of f + is restricted to the time interval (50,55).
The duration of Fred going to work is also limited to (15,20).
The incomplete qualitative information that "Fred and John met at a traffic light on their way to work" can be interpreted as the IA-relation [1] {start, started-by, during, contain, finish, finished-by, overlapped, overlapped-by, equal} between the two interval events of can be represented by a conjunction of PA-relations (in this case <-relation or equivalently (0, [?]))
between the endpoints of the intervals.
(5.10) j- 6  f-  Graph Gp - j+ 3 ~ -  b-  (50,55) f-  (5.10)  j-j+  Definition 3 Let SSM P D be a simple MPDN.
The STP-P of SSM P D is a constraint graph whose nodes represent the points in NP plus the beginning point p0 , and for every pair of points pi , pj there is an arc Ti,j  i -- j, such that, * Ti,j = Ci,j [?]
Cij , if dij [?]
D * Ti,j = Cj , if i = 0 * Ti,j = Ci,j , otherwise.
Definition 4 Let SSM P D be a simple MPDN.
The STP-D of SSM P D is a constraint graph whose nodes represent the durations in ND plus the null-duration d00 , and for every pair of durations dij , dkm there is Tij,km  an arc ij -- km, such that, * Tij,km = Cij,km if ij  = 00.  ?
* Tij,km = Ckm [?]
Ck,m if ij = 00.  b-  Graph Gd b- b+  (0,45)  p0 and pi .
Similarly, a unary constraint Cij for a duration dij can be expressed as a binary constraint C00,ij between the null duration d00 and dij .
Notice that the domain (i.e., unary metric constraint) Cij for duration dij can be considered as a binary metric constraint Ci,j between points pi and pj , since dij = pj - pi .
For instance, in the graph Gp of figure 1, binary constraint between points f - and f + may be updated to Cf - ,f + = (15, 20), since Cf - f + = (15, 20).
Now we define two STPs associated to binary constraints for points and durations in a simple MPDN.
3  Tractability of the simple MPDN fragment  (15,20)  - f -f +  (0,20)  Figure 1.
Constraint graphs for example 1  A unary constraint Ci for a point pi can be turned into a binary constraint C0,i between the beginning point  The main temporal reasoning task within a temporal constraint model is determining the consistency or satisfiability of the network.
The consistency problem for either PDN and APDN point-duration formalisms is NP-complete [11] and tractable classes of these models have been identified, but they have a limited expressive power.
In this work we identify a new tractable and quite expressive fragment for handling with metric temporal information between points and durations, as we show in the next theorem.
Theorem 1 The consistency of a simple MPDN can be decided in polynomial time.
Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTL'03) 1530-1311/03 $17.00 (c) 2003 IEEE  Proof.- It is easy to see that all the constraints in a simple MPDN can be turn into Horn constraints [7, 5], i.e., a set of disjunctions of weak linear inequalities and linear inequations, with at most one inequality per disjunction.
Hence, Koubarakis' C ONSISTENCY algorithm [7], which is polynomial, can be used in the simple MPDN fragment.
 The major drawback of Koubarakis' algorithm is its high complexity.
It is based on the application of a polynomial linear programming method with high complexity1 .
Hence, some specific and efficient method is needed for our simple MPDN fragment.
For this reason we are going to investigate under which conditions one has the certainty that a simple MPDN is consistent.
Suppose we have three pi , pj , pk points and pairs of durations in which these points are involved.
The following equations show the influence of binary constraints between points over binary constraints between durations and vice versa: dik - dij = (pk - pi ) - (pj - pi ) = pk - pj  (1)  dkj - dij = (pj - pk ) - (pj - pi ) = pi - pk  (2)  Definition 5 Upon equations (1),(2) we say that a simple MPDN satisfy PD3-conditions if and only if, [?]
dij , dik [?]
D : Tij,ik = Tj,k [?]
dij , dkj [?]
D : Tij,kj = Tk,i where each binary metric constraint corresponds to the constraint given by the STP-P or STP-D of the simple MPDN.
Suppose now we have four points pi , pj , pk , pm and pairs of durations in which these points appear.
The influence of binary constraints between points over binary constraints between durations and vice versa is shown in the following equations: pm - pj = (dkm - dij ) + (pk - pi ) (3) pk - pi = (dij - dkm ) + (pm - pj ) (4) dkm - dij = (pi - pk ) + (pm - pj ) (5) dkm - dij = (pm - pj ) - (pk - pi ) = djm - dik (6) dkm - dij = (pi - pk ) - (pj - pm ) = dki - dmj (7) 1 A linear programming problem in n variables can be solved in O(n5 log T ) arithmetic operations on numbers with O(n3 log T ) digits, where T is the maximum absolute value of the entries.
Definition 6 Upon equations (3)-(7) we say that a simple MPDN satisfy PD4-conditions if and only if, [?]
pi , pj , pk , pm [?]
P, [?]
dij , dkm [?]
D :   Tj,m [?]
Tij,km [?]
Ti,k T [?]
Tkm,ij [?]
Tj,m  i,k Tij,km [?]
Tk,i [?]
Tj,m [?]
dij , dkm , dik , djm [?]
D : Tij,km = Tik,jm [?]
dij , dkm , dki , dmj [?]
D : Tij,km = Tmj,ki We refer to PD3 and PD4-conditions altogether as PDconditions.
Theorem 2 A simple MPDN is consistent if STP-P is path consistent [9], STP-D is path consistent and PDconditions are satisfied.
Proof.- Let SSM P D =< NP , ND , Rel(P, D) > be a simple MPDN.
Satisfiability of binary constraints alone is guaranteed since both binary networks NP and ND , represented as STP networks, are path consistent and minimal and so consistent [3].
We show that ternary constraints in Rel(P, D) are also satisfied if all PD-conditions hold.
Suppose SSM P D is inconsistent, but STP-P and STP-D are path consistent.
The only source of inconsistency is due to the influence of binary constraints between points over binary constraints between durations and vice versa.
This influence has been shown in the equations (1)(7), upon which PD3 and PD4-conditions have been obtained.
Then, if SSM P D is inconsistent this is because some PD-condition is not satisfied.
For instance, if Cj,k = [-10, -8] and Cij,ik = [7, 12], the the simple MPDN is inconsistent because there is no assignment for points and durations such that ternary constraints dij = pj - pi and dik = pk - pi are satisfied.
Indeed, it must be 7 <= dik - dij <= 12, but 7 <= (pk - pi ) - (pj - pi ) <= 12, so that 7 <= pk - pj <= 12, which is not consistent with Cj,k = [-10, -8].
The inconsistency is due to Cij,ik [?]
Cj,k = [?
], so that one PD3-condition is not satisfied.
All the inconsistencies we can find in a simple MPDN with path consistent STP-graphs are due to empty intersections in PD3 or PD4 conditions.
Otherwise the network would be consistent.
In summary, conditions of theorem ??
are sufficient conditions to ensure the consistency of simple MPDN.
But necessary conditions are given by the fact that the STP-P and STP-D must be consistent and each intersection that substitutes = or [?]
in PDconditions must be non empty.
  Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTL'03) 1530-1311/03 $17.00 (c) 2003 IEEE  4  Consistency checking  We present now a consistency algorithm CONS (figure 2) that takes as input a simple MDPN and return TRUE when the network is consistent and FALSE otherwise.
This algorithm is based on Mackworth's PC-2 algorithm [9] for achieving path consistency.
Our goal is to accomplish, if possible, path consistency in the STP-P and STP-D graphs at the same time that satisfiability of PD-conditions is guaranteed.
Every different triple of point or duration-nodes, representing paths of length two, are added to the sets QP and QD , respectively.
For every triple we check if the label (constraint) of one of the arcs changes as a product of a composition operation or as a consequence of a call to procedures PD3 (figure 3) or PD4 (figure 4), that are used to ensure the satisfiability of PD-conditions.
When a label of an arc changes, its effect must be propagated, so we use a function REL PATHS that take an arc (between point or durations) and returns a set of triples representing all paths of length two in which the arc participates.
SMPDN  1.
2.
3.
4.
5.
6.
7.
8.
9.
10.
11.
12.
13.
14.
15.
16.
17.
18.
19.
20.
21.  repeat while QP = [?]
delete path (i, j, k) from QP ; t - Ti,k [?]
(Ti,j [?]
Tj,k ); PD3 (i, j, k, ); if Ti,k = t then Ti,k - t; if Ti,k = [?]
then exit (FALSE); QP - QP [?]
REL - PATHS (i, k, QP ); PD3 (i, j, k); if dik [?]
D then QD - QD [?]
REL - PATHS (00, ik, QD ); while QD = [?]
delete path (ij, pq, km) from QD ; t - Tij,km [?]
(Tij,pq [?]
Tpq,km ) if ij, km = 00 then if i = k then PD3 (j, i, m) else if j = m then PD3 (i, j, k) else PD4 (ij, km); if Tij,km = t then Tij,km - t; if Tij,km = [?]
then exit (FALSE); QD - QD [?]
REL - PATHS (ij, km, QD ); if ij = 00 then QP - QP [?]
REL - PATHS (k, m, QP ); if km = 00 then QP - QP [?]
REL - PATHS (i, j, QP ); if ij, km = 00 then if i = k then PD3 (j, i, m, ) else if j = m then PD3 (i, j, k) else PD4 (ij, km); until (QP = [?])
[?]
(QD = [?
]);  Figure 2.
Algorithm CONS - SMPDN (SSM P D )  1. if dji , djk [?]
D then 2. t - Tji,jk [?]
Ti,k ; if t = [?]
then exit (FALSE); 3. if Ti,k = t then 4.
Ti,k - t; QP - QP [?]
RELATED - PATHS (i, k, QP ); 5. if dik [?]
D then 6.
QD - QD [?]
RELATED - PATHS (00, ik, QD ); 7. if Tji,jk = t then 8.
Tji,jk - t; QD - QD [?]
RELATED - PATHS (ji, jk, QD ); 9. end-if;  Figure 3.
Procedure PD3 (i, j, k)  Theorem 3 The algorithm CONS - SMPDN correctly checks for consistency in a simple MPDN in O(n3 + d3 ), where n is the number of points, d is the number of durations.
Proof.- The correctness of the algorithm follows from the correctness of PC-2 algorithm for deciding consistency in the STP model [3] and necessary and sufficient conditions to ensure consistency of a simple MPDN (see theorem 2).
When the algorithm returns FALSE then the simple MPDN is inconsistent since necessary conditions for consistency are not satisfied (some constraint becomes empty).
When the algorithm returns TRUE the network is consistent, since sufficient conditions for consistency are fulfilled.
For the analysis of the time complexity we take as a reference the time complexity of PC-2 applied to an STP, which is O(n3 ) for n points [3].
In addition to the paths processed by PC-2, either in STP-P or STPD (O(n3 + d3 ) in total), here when a binary constraint Ti,j changes then at most O(d) paths are added to QD (if dij [?]
D) and when a binary constraint between durations changes then at most O(n) paths are added to QP (for constraints of the form T00,ij ).
In total, no more than O(n3 + n2 x d + d2 x n + d3 ) = O(n3 + d3 ) paths are processed.
 Since we know how to solve a simple MPDN, a backtracking algorithm could be devised for solving a MPDN following the same idea proposed for a TCSP [3], where, in addition, the network for durations must be considered now.
The consistency algorithm for a MPDN must find a consistent simple MPDN extracted from the input network.
If such a consistent subnetwork cannot be found the MPDN is inconsistent.
Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTL'03) 1530-1311/03 $17.00 (c) 2003 IEEE  1.
2.
3.
4.
5.
6.
7.
8.
9.
10.
11.
12.
13.
14.
15.
16.
17.
18.
19.
20.
21.
22.
23.
24.
25.  if dik , djm [?]
D then t - Tij,km [?]
Tik,jm ; if t = [?]
then exit (FALSE); if Tij,km = t then Tij,km - t; QD - QD [?]
REL - PATHS (ij, km, QD ); if Tik,jm = t then Tik,jm - t; QD - QD [?]
REL - PATHS (ik, jm, QD ); t - Tj,m [?]
(Tij,km [?]
Ti,k ); if t = [?]
then exit (FALSE); if Tj,m = t then Tj,m - t; QP - QP [?]
REL - PATHS (j, m, QP ); if djm [?]
D then QD - QD [?]
REL - PATHS (00, jm, QD ); t - Ti,k [?]
(Tkm,ij [?]
Tj,m ); if t = [?]
then exit (FALSE); if Ti,k = t then Ti,k - t; QP - QP [?]
REL - PATHS (i, k, QP ); if dik [?]
D then QD - QD [?]
REL - PATHS (00, ik, QD ); t - Tij,km [?]
(Tk,i [?]
Tj,m ); if t = [?]
then exit (FALSE); if Tij,km = t then Tij,km - t; QD - QD [?]
REL - PATHS (ij, km, QD ); end-if;  the office.
* Bob said he arrived at 7:40.
John was there and his boss was lying on the floor.
* Fred said he arrived at 7:53 and, apart from the dead body, Bob and John were there with angry faces".
What can be said about these declarations above?
Applying our algorithm CONS - SMPDN to the corresponding simple MPDN (see example 2) give rise to the minimal STP-D depicted in figure 5.
Part of the minimal STP-P that is relevant at this point is also shown in the figure.
Fred certainly was not at the office at 7:25, when the crime took place, but John and Bob could have been there.
Bob and John's declarations are inconsistent, so one of them may be the murder.
The inspector has found out (with the help of the minimal STP-P) that it was impossible that John arrived at the office at 7:35 a.m. John lies, but is he the murder?
This is another question.
STP-P  Figure 4.
Procedure PD4 (ij, km)  (5,30) Theorem 4 The consistency problem for a metric point-duration network is NP-complete.
Proof.- A non-deterministic algorithm can check for consistency in a MPDN in polynomial time, using the algorithm CONS - SMPDN with each simple subnetwork extracted from the MPDN.
So, solving a MPDN is NP.
Moreover, it is NP-complete because deciding consistency of a TCSP is NP-complete [3] and this model can be considered as a special case of a MPDN with no duration variables.
 Example 3 The story of example 1 continues... "Bob, Fred and John's boss has been found murdered this morning at office.
The police inspector has been asking some questions and he has found out that:  (5,10) -j -  p0 (0,45)  (5,60)    b-  w -  (5,15)  b+  z + j :  (0,20)  (50,55) zf + (30,40) j  f-  1  (15,20)  - +  d00  (5, 10) (5,15) 1b b q (-15,15) - + (15,20) -f f  (0,20) s  ?
  j-j+  (-20,5)  Minimal STP-D  * A neighbor heard a shot gun at 7:25 a.m. * John declared to arrive at the office at 7:35 a.m. His boss was already dead and Bob also was at  Figure 5.
Minimal STP-D and STP-P  Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTL'03) 1530-1311/03 $17.00 (c) 2003 IEEE  5  Discussion  Two point-duration network based models has been previously identified [11], PDN and APDN.
The first one consists on two point algebra (PA) networks [14] related by ternary constraint as in Rel(P, D) and the second one is given by two augmented PA networks [10] with ternary constraints.
The APDN model is an extension of a TCSP which allows for duration reasoning [11].
Here we further extend the APDN since point and duration variables are now related by metric constrains, and every qualitative relation in the PA can be turned into a metric constraint [10].
Notice that each duration variable dij in the MPDN model represents the elapsed time between two temporal points pi and pj , but it does not supposes anything about the relative position of these points.
This is because we use the Euclidean distance dij = |pi - pj | to relate points with durations.
It is worth noting that the these constraints cannot be represented with disjunctive linear relations (DLRs) [5, 7], which is known to be a very expressive formalism to deal with temporal constraints.
The tractable fragment, simple MPDN, we identify here is not very restrictive since condition pi <= pj for a duration dij is not so strong.
This is similar to say, in the interval algebra context [1], that the start point of a time interval is before its end point.
A simple MPDN can be represented as a pre-convex PIDN [13].
In this fragment of the PIDN model, checking for consistency requires a 4-consistency algorithm which is at least O(t4 ) [2], being t the number of temporal objects (points or intervals).
New composition, inverse and intersection operations must be used with de consistency algorithm, which is not shown in [13].
Our consistency checking algorithm for a simple MPDN is an easy path consistency like algorithm and it improves the complexity of the algorithm for the pre-convex PIDN fragment by at least a linear factor- a significant speed up.
This is because, in order to represent p points and d durations in a pre-convex PIDN, one needs O(max(p / 2, d)) objects, so that when d > p / 2 our algorithm is always better and when d <= p / 2 our algorithm is better for p > 4.
6  Conclusion  We have introduced a new model, MPDN, for metric temporal reasoning with points and durations, that supposes an extension of the TCSP formalism [3] and previous point-duration network models [11].
The problem of deciding consistency for a MPDN is shown to be NP-complete.
We have identified a tractable fragment of the MPDN model which reflects a good tradeoff between expressive power and complexity.
This class, simple MPDN, allows representing points and durations as temporal objects and can manage with simple metric constraints.
We have investigated necessary and sufficient conditions to ensure the consistency of a simple MPDN and, using these conditions, a constraint propagation algorithm for consistency checking has been designed.
With our consistency algorithm, non-binary constraints (e.g., ternary relations and 4-ary implicit constraints among points involved in a binary constraint between duration) are managed with a formalism that integrates two well studied binary constraint networks.
The time complexity of the algorithm is cubic in the number of variables what supposes a nice improvement, not only in computational complexity, but also in simplicity, over previous non-specific algorithms that can be applied to solve the consistency problem.
An easy extension to the simple MPDN fragment is to cope with binary constraints expressed as intervals with holes, so that we can obtain algorithms for consistency checking and finding the minimal network following the ideas presented in [4, 8].
We are also working in an algorithm for finding a solution to a simple MPDN that it may be useful for several applications, specially for those where the STP fragment [3] has been used.
Acknowledgments  This work has been partially supported by the Spanish MCyT under projects TIC2001-4936-E and TIC2000-0873-C02-02.
Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTL'03) 1530-1311/03 $17.00 (c) 2003 IEEE  References [1] J. Allen.
Maintaining knowledge about temporal intervals.
Communications of the ACM, 26(11):832-843, 1983.
[2] M. Cooper.
An optimal k-consistency algorithm.
Artificial Intelligence, 41:89-95, 1989/90.
[3] R. Dechter, I. Meiri, and J. Pearl.
Temporal constraint networks.
Artificial Intelligence, 49:61- 95, 1991.
[13] A. Pujari and A. Sattar.
A new framework for reasoning about points, intervals and durations.
In Proceedings of IJCAI-99, pages 1259-1264, 1999.
[14] M. Vilain and H. Kautz.
Constraint propagation algorithms for temporal reasoning.
In Proceedings of the National Conference on Artificial Intelligence (AAAI-86), pages 377-382, 1986.
[4] A. Gerevini and M. Cristani.
On finding a solution in temporal constraint satisfaction problems.
In Proceedings of IJCAI-97, pages 1460-1465, 1997.
[5] P. Jonsson and C. Backstrom.
A unifying approach to temporal constraint reasoning.
Artificial Intelligence, 102(1):143-155, 1998.
[6] H. Kautz and P. Ladkin.
Integrating metric and qualitative temporal reasoning.
In Proceedings of AAAI-91, pages 241-246, 1991.
[7] M. Koubarakis.
Tractable disjunctions of linear constraints.
Lecture Notes in Computer Science, 1118:297-307, 1996.
[8] M. Koubarakis.
From local to global consistency in temporal constraint networks.
Theoretical Computer Science, 173(1):89-112, 1997.
[9] A. Mackworth and E. Freuder.
The complexity of some polynomial network consistency algorithms for constraint satisfaction problems.
Artificial Intelligence, 25:65-74, 1985.
[10] I. Meiri.
Combining qualitative and quantitative constraints in temporal reasoning.
Artificial Intelligence, 87:343-385, 1996.
[11] I. Navarrete, A. Sattar, R. Wetprasit, and R. Marin.
On point-duration networks for temporal reasoning.
Artificial Intelligence, 140:39-70, 2002.
[12] A. Pujari, G. Kumari, and A. Sattar.
Induqualitative-interval-duration network.
In Australian Joint Conference on Artificial Intelligence, pages 291-303, 1999.
Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTL'03) 1530-1311/03 $17.00 (c) 2003 IEEE