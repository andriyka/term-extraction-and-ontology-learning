Extending the Point Algebra into the Qualitative Algebra Andrei Krokhin Oxford University Computing Laboratory Wolfson Building, Parks Road, OX1 3QD Oxford, UK email: andrei.krokhin@comlab.ox.ac.uk Peter Jonsson Department of Computer and Information Science LinkAsping University, S-581 83 LinkAsping, Sweden email: peter.jonsson@ida.liu.se  Abstract  intervals and intervals with intervals using an expressive set of qualitative relations.
In contrast with Allenas algebra and the point-interval algebra, the point algebra is known to be tractable.
In this paper, we show how to maximally extend the point algebra with point-interval and intervalinterval relations so that the obtained extension remains tractable.
Moreover, we prove that all other extensions are NP-complete.
In fact, our classification result holds under the following weaker assumption: the point-point relation aless thana is a member of the set under consideration.
By using combinatorial techniques, we can prove this result without using computer-assisted enumeration methods.
A related result has been proved by Broxvall and Jonsson [3]athey identify all tractable fragments of the point algebra extended with disjunctions.
The paper is organised as follows: in Section 2 we give the basic definitions and present the maximal tractable subclasses.
In Section 3 we formally state the classification result and prove it; Subsection 3.1 contains some tractability results and Section 3.2. contains the classification proof together with a few proof techniques.
Some concluding remarks are collected in Section 4.
We study the computational complexity of the qualitative algebra which is a temporal formalism that combines the point algebra, the point-interval algebra and Allenas interval algebra.
We identify all tractable fragments containing the point algebra and show that, for all other fragments containing the point algebra, the problem is NP-complete.
1 Introduction Reasoning about temporal knowledge is a common task in many branches of computer science and elsewhere, cf.
Golumbic and Shamir [6] for a list of examples from a wide range of applications.
Knowledge of temporal constraints is typically expressed in terms of collections of relations between time points and/or time intervals.
Reasoning tasks include determining the satisfiability of such collections and deducing new relations from those that are known.
Basic temporal formalisms can only be used for reasoning about objects of a single typeafor instance, the point algebra [16] is only useful for time points and Allenas interval algebra [1] is only useful for time intervals.
Such restricted languages may not be sufficient for modelling realworld problems so several formalisms for multisorted temporal reasoning have been proposed [2, 7, 9, 13, 15].
However, the basic temporal formalisms are much easier to analyse from a complexity-theoretic standpoint; all tractable subclasses of Allenas interval algebra are known, for instance [10].
The goal of this paper is to study the computational complexity of Meirias [13] Qualitative Algebra which is a temporal formalism able to represent both time points and time intervals.
Thus, we can relate points with points, points with  2 Preliminaries In the Qualitative Algebra (QA) [13], a qualitative constraint between two objects Oi and Oj (each may be a point or an interval), is a disjunction of the form  (Oi r1 Oj ) _ : : : _ (Oi rk Oj ) where each one of the ri0 s is a basic qualitative relation that may exist between two objects.
There are three types of basic relations.
1  use the symbol , which should be interpreted as follows.
A condition involving  means the conjunction of two conditions: one corresponding to + and one corresponding to ?.
For example, condition (o)1  r , (d)1  r means that both (o)  r , (d)  r and (o?1 )  r , (d?1 )  r hold.
Note that implication takes precedence over conjunction in the descriptions.
The following notation is used in Figure 3 to describe the tractable subalgebras of A.
Let q0 = (pmo).
Further, let q1 = q0 [ (d?1 f?1 ), q2 = q0 [ (df), q3 = q0 [ (df?1 ), q4 = q0 [ (ds), q5 = q0 [ (d?1 s?1 ), q6 = q0 [ (d?1 s).
1.
Point-point (PP) relations that can hold between a pair of points.
2.
Point-interval (PI) and interval-point (IP) relations that can hold between a point and an interval and viceversa.
3.
Interval-interval (II) relations that can hold between a pair of intervals.
The basic relations are shown in Table 1.
Note that we use different fonts to distinguish between PI- and II-relations.
The endpoint relation I ?
< I + that is required for all intervals has been omitted.
For the sake of brevity, we will write expressions of the form (Oi r1 Oj ) _ : : : _ (Oi rk Oj ) as Oi (r1 : : : rk )Oj .
Let ; denote the empty relation.
Let PP , PI and II denote the sets of all PP-relations, PI-relations and II-relations, respectively, and let QA = PP[PI [II .
The problem of satisfiability (Q A -S AT) of a set of point and interval variables with relations between them is that of deciding whether there exists an assignment of points and intervals on the real line for the variables, such that all of the relations are satisfied.
This is defined as follows.
PP is tractable.
Theorem 3 (Jonsson et al [8]) PI contains 5 maximal tractable subclasses VH ; VS ; VE ; Vs and Vf (see Table 2).
Theorem 4 (Krokhin et al [10]) II contains 18 maximal Theorem 2 (Vilain et al.
[16])  tractable subclasses (see Table 3).
Let II tr denote the set of maximal tractable subclasses of II-relations.
In some previous papers, the subclasses in Tables 2 and 3 were defined in other ways.
However, in all cases except for H, it is very straightforward to verify that our definitions are equivalent to the original ones.
The subclass H was originally defined as the aORD-Horn algebraa [14], but has also been characterized as the set of apre-convexa relations (see, e.g., [12]).
Using the latter description it is not hard to show that our definition of H is equivalent.
Definition 1 Let X  QA.
An instance  of Q A -S AT(X ) consists of a set Vp of point variables, a set VI of interval variables and a set of constraints of the form xry where x; y 2 Vp [ VI and r 2 X .
We require that Vp \ VI = ;.
The question is whether  is satisfiable or not, i.e.
whether there exists a function M , called a model, satisfying the following:  2 Vp , M (v) 2 R; for each v 2 VI , M (v ) = (I ?
; I + ) 2 R  R and  1. for each v 2.
3 Main Result  I ?
< I +.
Our main result is the identification of all tractable subclasses S of QA satisfying the side condition (<) 2 SPP .
Let W  II and V  PI .
Let WV denote the set W [ V [ PP .
We remind the reader that exact definitions of the subalgebras can be found in Tables 2 and 3.
2 C , M (x)rM (y) holds.
It is easy to show that Q A -S AT is in NP.
Let X  QA and 3. for each constraint xry  assume that  = (Vp ; VI ; C ) is an instance of Q A -S AT.
We define Var() as the set of variables in  and XPP , XPI , XII as X \PP , X \PI , X \II , respectively.
We extend the notation to sets of constraints and problem instances, i.e.
II denotes the subinstance only containing II-constraints: (;; VI ; fIrJ 2 C j I; J 2 VI g).
If there exists a polynomial-time algorithm solving all instances of Q A -S AT(X ) then we say that X is tractable.
On the other hand, if Q A -S AT(X ) is NP-complete then we say that X is NP-complete.
Since QA is finite, the problem of describing tractability in QA can be reduced to the problem of describing the maximal tractable subclasses in QA, i.e., subclasses that cannot be extended without losing tractability.
The complexity of Q A -S AT(S ) has been completely determined earlier when S is a subset of PP , PI or II .
In order to simplify the presentation of tractable subclasses, we  Theorem 5 Let X  QA satisfy (<) 2 X .
Then Q A S AT(X ) is tractable iff X is a included in one of the subclasses defined below.
Otherwise, Q A -S AT(X ) is NPcomplete.
      WVb and WVa if W 2 II tr ?
fSp ; Epg WVd if W 2 II tr ?
fH; Sp; Epg HVH , Sp VS , EpVE WVSH if W 2 fSd; So ; S  g WVEH if W 2 fEd; Eo ; E  g  The rest of this section is structured as follows.
In Subsection 3.1, we prove the tractability of a number of subclasses and we give the proof of Theorem 5 in Subsection 3.2.
2  3.1 Tractability results Basic relation p before q  <  p equals q  =  p after q  >  Basic relation p before I  b  p starts I  s  p during I  d  p finishes I  f  p after I  a  Example p q p q p q  Example p III p III p III p III  Endpoints  p<q  We shall now show that all subclasses in Theorem 5 are tractable.
p=q  Lemma 6  fSp; Ep g.  p>q  Proof.
We give a proof for the case X = WVb ; the other case is analogous.
Let  be an arbitrary instance of Q A S AT(X ) and assume without loss of generality that no constraint is trivially unsatisfiable, i.e.
of the form x;y .
We claim that  is satisfiable iff PP and II are satisfiablea obviously, this can be checked in polynomial time by the choice of W .
If PP or II are not satisfiable, then  is not satisfiable.
Otherwise, there exists two models MPP and MII of PP and II , respectively.
We can, without loss of generality, assume that MPP has the following additional property: MPP (p) < MII (I ? )
for all p 2 Var(PP ) and I 2 Var(II ).
We construct a model M of  as follows:  Endpoints  p < I?
p = I?
I?
< p < I+ p = I+ p  p > I+  M (x) =  III  Basic relation I precedes J J preceded by I I meets J J met by I I overlaps J J overl.
by I I during J J includes I I starts J J started by I I finishes J J finished by I I equals J  Example p p?1 m m?1 o o?1 d d?1 s s?1 f f?1    III JJJ IIII JJJJ IIII JJJJ III JJJJJJJ III JJJJJJJ III JJJJJJJ IIII JJJJ  WVb and WVa are tractable if W 2 II tr ?
  MPP (x) if x 2 Var(PP ) MII (x) if x 2 Var(II )  It follows that M is a model of  since every constraint in PI contains the relation b.
2  Endpoints  I+ < J?
I+ = J?
Lemma 7  WVd is tractable if W 2 II tr ?
fH; Sp; Ep g.  Proof.
Assume  is a satisfiable instance of Q A -S AT(X ) where X 2 II tr ?
fH; Sp ; Ep g By studying the correctness proofs of the algorithms for these subclasses [4, 5], one notices that  always has a model M such that the intersection of all intervals is itself a non-empty interval, say J.
Thus, we can use a similar trick as in the proof of Lemma 6: instead of moving the points to a position before or after the intervals, we scale the points and move them to 2 a position within the interval J .
I ?
< J ?
< I +, I+ < J+ I ?
> J ?, I+ < J+ I ?
= J ?, I+ < J+ I + = J +, I?
> J?
I ?
= J ?, I+ = J+  For proving tractability of the remaining subclasses, we define the function S : QA !
II such that  Table 1.
Basic PP-, PI- and II-relations.
S (<) = (pmod?1 f?1 ) S (>) = (p?1 m?1 o?1 df) S (s) = ( ss?1 ) S (f) = (m?1 )  VH = fr j r \ (bs) 6= ; & r \ (fa) 6= ; ) (d)  rg VSH = fr j r \ (fa) 6= ; ) (d)  rg VEH = fr j r \ (bs) 6= ; ) (d)  rg VS = fr j r \ (df) =6 ; ) (a)  rg VE = fr j r \ (sd) =6 ; ) (b)  rg V = fr j r =6 ; ) (r)  rg where r 2 fb; s; d; f; ag  S (=) = ( ss?1 ) S (b) = (pmod?1 f?1 ) S (d) = (o?1 df) S (a) = (p?1 )  and S (r) = r if r is a basic II-relation.
We extend S such that S (r) = S (r1 ) [ : : : [ S (rn ) if r = (r1 ; : : : ; rn ), and given a set X  QA, we define S (X ) = fS (r) j r 2 X g. The idea is to transform instances of Q A -S AT(X ) into instances of Q A -S AT(X \ II )athis will avoid the need for constructing completely new algorithms.
r  Table 2.
Subsets of PI-relations.
3  Lemma 8 Let  = (Vp ; VI ; C ) be an instance of Q A S AT(X ).
Let VI0 = VI and Vp0 = fIp0 j p 2 Vp g (where we assume that VI0 \ Vp0 = ;).
Define an instance  3.2 Proof of Theorem 5 One of our main tools for proving the result is the notion of derivations.
Suppose X  QA and  is an instance of Q A -S AT(X ).
Let the two variables x; y appear in .
Furthermore, let r 2 QA be the relation defined as follows: a basic relation r0 is included in r if and only if the instance obtained from  by adding the constraint xr0 y is satisfiable.
In this case, we say that r is derived from X .
It should be noted that if the instance 1 =  [ fxr0 y g is satisfiable, then, for any two points or intervals i1 ; j1 such that i1 r0 j1 , there is a model M of  such that M (x) = i1 and M (y ) = j1 .
This can be established as follows: since 1 is satisfiable, it has a model M 0 .
Denote M 0 (x) by i2 and M 0 (y ) by j2 ; then i2 r0 j2 .
There exists a continuous monotone injective mapping  of the real line into itself such that  takes i2 to i1 and j2 to j1 .
Obviously,  maps intervals to intervals, and it does not change the relative order between points and intervals.
Therefore, by combining  and M 0 we obtain the required model M .
It can easily be checked that adding a derived relation r to X does not change the complexity of Q A -S AT(X ) because, in any instance, any constraint involving r can be replaced by the set of constraints in  (introducing fresh variables when needed), and this can be done in polynomial time.
We will sometimes use a principle of duality for simplifying proofs.
We make use of a function reverse which is defined on the basic relations of QA by the following table:  0 = (;; VI0 [ fIp0 j p 2 Vp g; C 0 ) of Q A -S AT(II ) where C 0 = fIp0 S (r)Iq0 j prq 2 CPP g [ fIp0 S (r)I 0 j prI 2 CPI g [ fI 0 S (r)J 0 j IrJ 2 CII g. Then,  is satisfiable iff 0 is satisfiable.
Proof.
only-if: Let M be a model of .
Construct an interpretation M 0 of 0 as follows: 1. for each interval I 0 2 VI0 , let M 0 (I 0 ) = M (I ); and 2. for each interval Ip0 2 Vp0 , let M 0 (Ip0 ) = [M (p); M (p) + 1].
It is straightforward to verify that M 0 is a model of 0 .
As an example, assume that p(bs)I 2 C , M (p) = 1 and M (I ) = [2; 4].
Then, Ip0 ( pmod?1 ss?1 f?1 )I 0 2 C 0 , M 0 (Ip0 ) = [1; 2] and M 0 (I 0 ) = [2; 4]; consequently, the relation between Ip0 and I 0 is satisfied.
if: Let M 0 be a model of 0 .
Construct an interpretation M of  as follows: 1. for each point p 2 Vp , let M (p) = M 0 (Ip?
); and 2. for each interval I  2 VI , let M (I ) = M 0(I 0 ).
Once again, it is straightforward to verify that M is a model of .
We take the same example as before: Assume Ip0 ( pmod?1 ss?1 f?1 )I 0 2 C 0 , M 0 (Ip0 ) = [1; 2] and M 0 (I 0 ) = [2; 4].
Then, we know that p(bs)I 2 C , M (p) = 1 and M (I ) = [2; 4].
2  r reverse  r reverse  As is evident in the proof, function S identifies the points with the left endpoint of intervals while the relations between the right endpoints are arbitrary; thus, we can symmetrically define a function E that identifies points with the right endpoint of intervals.
< >  (r)  b  s  d  f  a  a  f  d  s  b  p  p?1  m  m?1   reverse(r)  r r reverse  E (<) = (pmods) E (=) = ( ff?1 ) ?
1 ?1 ?1 ?1 ?1 E (>) = (p m o d s ) E (b) = (p) E (s) = (m) E (d) = (ods) E (f) = ( ff?1 ) E (a) = (p?1 m?1 o?1 d?1 s?1 )  = =  (r)  (r)  d d  p?1 d?1 d?1  > <  p s f  m?1 s?1 f?1  m f s  o  o?1 f?1 s?1  o?1 o  and is definedSfor all other elements in QA by setting reverse(R) = r2R reverse(r).
Let  be any instance of Q A -S AT, and let 0 be obtained from  by replacing every relation r with reverse(r).
It is easy to check that  has a model M if and only if 0 has a model M 0 given by  Lemma 9 Let X be one of the subclasses in Theorem 5 that is not covered by Lemmata 6 or 7.
Then, X is tractable.
M 0 (x) =  Proof.
Assume X 0 is a tractable subset of II .
If S (X )  X 0 or E (X )  X 0 , then X is tractable by Lemma 8.
It can be verified that either S (X ) or E (X ) is a subset of X \ II and the lemma follows since X \ II is tractable.
2  (  ?M (x) if x 2 Var(PP ) [ ?
M (x)+ ; ?M (x)? ]
if x 2 Var(II )  In other words, M 0 is obtained from M by redirecting the real line and leaving all intervals (as geometric objects) in their places.
This observation leads to the following lemma.
4  Sp = fr j r \ q11 6= ; ) (p)1  rg Sd = fr j r \ q11 6= ; ) (d?1 )1  rg So = fr j r \ q11 6= ; ) (o)1  rg A1 = fr j r \ q11 =6 ; ) (s?1 )1  rg A2 = fr j r \ q11 =6 ; ) (s)1  rg A3 = fr j r \ q21 =6 ; ) (s)1  rg A4 = fr j r \ q31 =6 ; ) (s)1  rg  Ep = fr j r \ q41 6= ; ) (p)1  rg Ed = fr j r \ q41 6= ; ) (d)1  rg Eo = fr j r \ q41 6= ; ) (o)1  rg B1 = fr j r \ q41 =6 ; ) (f?1 )1  rg B2 = fr j r \ q41 =6 ; ) (f)1  rg B3 = fr j r \ q51 =6 ; ) (f?1 )1  rg B4 = fr j r \ q61 =6 ; ) (f?1 )1  rg  S =  (       1) r \ q11 6= ; ) (f?1 )1  r; 2) r \ (ss?1 ) 6= ; ) ()  r  E =  (       1) r \ q41 6= ; ) (s)1  r; 2) r \ (ff?1 ) 6= ; ) ()  r  r  r  )  )  A = fr j r 6= ; ) ()  rg H=  8   > <    > :    r  1) r \ (os)1 6= ; & r \ (o?1 f)1 6= ; ) (d)1  r, and 2) r \ (ds)1 6= ; & r \ (d?1 f?1 )1 6= ; ) (o)1  r, and 3) r \ (pm)1 6= ; & r 6 (pm)1 ) (o)1  r  9 > = > ;  Table 3.
The tractable subalgebras of Allenas algebra.
= fr1 ; : : : ; rn g  QA and X 0 =  QA be such that, for all 1  k  n, = reverse(rk ).
Then X is tractable (NP-complete) if  of r1 ; r2 2 SPI such that (b) 6 r1 and (a) 6 r2 and show that SPI is contained in one of VSH or VEH , or else the previous step applies.
Step 4.
Finally, we show that if SPI  VSH or SPI  VEH, then either S is NP-complete or is contained in one of the tractable subclasses listed in Theorem 5.
Lemma 10 Let X  fr10 ; : : : ; rn0 g 0 rk  and only if X 0 is tractable (NP-complete).
Lemma 10 implies that a proof of NP-completeness for, say,  f(<); (bf); (ods?1 )g, immediately yields a proof of NPcompleteness for f(>); (sa); (o?1 df?1 )g.  Before the proof, we present a number of derivations that will be frequently used.
The classification proof has four step.
In each step, it is proved that if a subclass S satisfies a certain condition, then either S is NP-complete, contained in one of the tractable subclasses or S satisfies the conditions of some earlier step.
Throughout the proof, we assume that S is closed under derivations and (<) 2 S .
We say that a relation is nontrivial if it is not equal to the empty relation.
Lemma 11 Assume r 2 S is a non-trivial relation.
Then, 1. if (b) 6 r and r \ (sd) 6= ; , then (dfa) 2 S ;  2. if (b) 6 r and r \ (sd) = ; , then (a) 2 S ; 3. if (a) 6 r and r \ (df) 6= ; , then (bsd) 2 S ;  Step 1.
We begin by proving that S is NP-complete unless SPI is a subset of VH , VS or VE .
Step 2.
Assume now that SPI contains two non-trivial relations r1 ; r2 such that r1  (fa) and r2  (bs).
This implies that S is NP-complete or S is included in one of HVH, Sp VS or EpVE .
Step 3.
We note that if (b)  r for all r 2 SPI or (a)  r for all r 2 SPI , then S is NP-complete or contained in one of the tractable subclasses.
Thus, we assume the existence  4. if (a) 6 r and r \ (df) = ; , then (b) 2 S ; Proof.
The cases are similar so we only consider the first one: the relation p(dfa)I is derived from fqrI; p > q g. 2 Lemma 12 S is NP-complete or of VH , VS , VE .
5  SPI is contained in one  Proof.
Suppose that SPI is not NP-complete.
By Theorem 3, it is contained in one of VH , VS , VE , Vs , Vf .
Assume that SPI  Vs .
If (b)  r for every non-trivial r 2 SPI then SPI  VE .
Suppose there is a non-trivial r 2 SPI such that (b) 6 r. Then SPI \ f(a); (dfa)g 6= ; by Lemma 11, a contradiction.
The argument is dual when SPI  Vf .
2  p(dfa)I 2 S by Lemma 11, and we have (pmod?1 f?1 ) 2 SII because I (pmod?1 f?1 )J is derived from fp(dfa)I; p(b)J g. In particular, we obtain that  From now on we will assume that SPI is contained in one of VH , VS , VE .
We define the relation as rd = T fr 2 SPI j (d)  rg and note that rd 2 SPI since it is derived from the relations in SPI .
r7  SII  H or SII  Sp .
If SII  Sp then S  Sp VS .
Otherwise there is a relation r6 2 SII such that r6 \ (pmod?1 f?1 ) = 6 ; but (p) 6 r6 .
If r6 \ (mo) =6 ;, then p(d)J is derived from fIr6 J; Jr6 K; p(a)I; p(b)K g and we have a contradiction.
Otherwise we get  = r6 \ (pmod?1 f?1 )  (d?1 f?1 ).
Note that r7 2 SII .
Now one can check that the constraint p(d)I is derived from fIr7 J; p(dfa)I; p(b)J g which leads to a contradiction.
2 Assume that (b)  r for all r 2 SPI or (a)  r for all r 2 SPI .
By using Lemma 6, we see that either S is NPcomplete (if SII is NP-complete) or contained in one of the tractable subclasses WVa or WVb where W 2 II tr .
Lemma 13 Suppose that SPI contains two non-trivial relations r1 ; r2 such that r1  (af) and r2  (bs).
Then either S is NP-complete or is contained in one of HVH , Sp VS or EpVE .
Proof.
First note that f(a); (b)g  SPI by Lemma 11.
Now, I (p)J is derived from fp(a)I; p(b)J g. It follows from Theorem 4 that either SII is NP-complete or it is contained in one of H, Sp , Ep .
Suppose first that we have (d)  rd  (dsf).
By using Lemma 12, we conclude that either SPI is NP-complete or SPI  VH .
Furthermore, I ( oo?1 dd?1 ss?1 ff?1 )J is derived from fprd I; prd J g. Therefore we have ( oo?1 dd?1 ss?1 ff?1 ) 2 SII which now implies that either SII is NP-complete or SII  H. We conclude that either S is NP-complete or S  HVH .
We can now assume that rd contains (a) or (b) (or both).
Suppose we have (a)  rd ; the second case is dual.
It follows that, for every r 2 SPI , (d)  r implies (a)  r. If there exists r0 2 SPI such that r0 \ (fa) = (f) then SPI \f(b); (bsd)g 6= ; by Lemma 11 which contradicts the assumption just made.
It can now be checked that SPI  VS and we complete the proof by considering two cases.
Case 1.
SPI  VS \ VE .
If SII  Sp or SII  Ep then we get the required result.
Otherwise there exist r3 ; r4 2 SII such that r3 62 Sp and r4 62 Ep , that is, r3 \ (pmod?1 f?1 ) 6= ; but (p) 6 r3 , and r4 \ (pmods) 6= ; but (p) 6 r3 .
Now one can check that the constraint p(d)y is derived from fIr4 J; Jr3 K; p(a)I; p(b)K g. Indeed, suppose these constraints are satisfied.
Then p(a)I , p(b)K imply I + < p < K ?
.
Since (p) 6 r4 and (p) 6 r3 , we have J ?
 I + and K ?
 J + .
It follows that J ?
< p < J + , that is p(d)J .
On the other hand, if p(d)J then, for any choice of r3 \ (pmod?1 f?1 ) and r4 \ (pmods), it is easy to find intervals I and K such that the constraints fIr4 J; Jr3 K; p(a)I; p(b)K g are satisfied.
This contradicts the fact that rd contains a and/or b.
Case 2.
SPI 6 VE .
It is easy to check that SPI contains r5 2 f(sa); (da); (sda); (sfa); (dfa); (sdfa)g. Then,  Lemma 14 Suppose there exist r1 ; r2 2 SPI such that (b) 6 r1 and (a) 6 r2 .
Then, S is NP-complete, SPI is contained in one of VSH ; VEH , or Lemma 13 applies.
Proof.
S is NP-complete if SPI is not a subset of VH , VS or VE by Lemma 12.
Thus, we consider three cases depending on which of these sets SPI is included in.
The claim obviously holds if SPI  VH by the definitions of VSH and VEH .
Suppose SPI  VS ; then r2  (bs).
If r1 can be chosen so that r1  (sfa) and r1 6= (s), then we can apply Lemma 13 with r1 if (s) 6 r1 and with r1 \ (dfa) otherwise (since (dfa) 2 SPI by Lemma 11).
If there is no such r1 then SPI  VEH .
For SPI  VE the argument 2 is dual.
By duality, it is sufficient to consider  VSH .
SPI  with  SPI   Lemma 15 If SPI  VSH then either S is NP-complete or is contained in one of the tractable subclasses listed in Theorem 5.
Proof.
We consider three different cases depending on the value of rd \ (ba).
Case 1. rd \ (ba) 2 f(b); (ba)g (i.e.
(b)  rd ).
In this case we have (s) 62 SPI , since otherwise (dfa) 2 SPI by Lemma 11 and rd  (dfa).
Thus (b) is contained in every non-trivial relation from SPI , and we get the required result by Lemma 6.
Case 2. rd \ (ba) = (a).
Note that in this case we also have SPI  VS so SPI  VS \VSH .
We have (dfa) 2 SPI by Lemma 11 since (d)  rd 2 SPI .
If SPI \ f(b); (s); (bs)g = ; then (a) is contained in every non-trivial relation from SPI , and we get the required result by Lemma 6.
Otherwise we have (b) 2 SPI (repeating the argument from the beginning of Lemma 13).
6  Then I (pmod?1 f?1 )J is derived from fp(dfa)I; p(b)J g. If (pmod?1 f?1 ) 2 SII then, as follows from Theorem 4, either SII is NP-complete or it is contained in one of H, Sp , So , Sd , S  .
Thus, if SII is not NP-complete then S is contained in one of the known tractable subclasses HVH (since VSH  VH ), Sp VS , So VSH , Sd VSH , S  VSH .
Case 3. rd \ (ba) = ;.
Since p(d)I is derived from fq1 rd I; q2 rd I; q1 < p < q2 g, it follows that rd = (d).
We have ( oo?1 dd?1 ss?1 ff?1 ) 2 SII because this relation is derived from fp(d)I; p(d)J g. In particular, either SII is NP-complete or is contained in some maximal tractable subclass of A other than Sp and Ep.
If SPI \ f(b); (s); (bs)g 6= ; then (b) 2 SPI by Lemma 11, and I (pmod?1 f?1 )J is derived from fp(d)I; p(b)J g. Therefore either SII is NP-complete or contained in one of H, So , Sd , S  .
Thus, if SII is not NPcomplete then S is contained in one of the tractable subclasses HVH , So VSH , Sd VSH , S  VSH .
Otherwise, every non-trivial relation in SPI contains (d).
If SII is included in some tractable subclass except H, the result follows immediately from Lemma 7.
If that is not the case, then S  HVH .
2  References [1] J. F. Allen.
Maintaining knowledge about temporal intervals.
Communications of the ACM, 26(11):832a 843, 1983.
[2] F. Barber.
Reasoning on interval and point-based disjunctive metric constraints in temporal contexts.
Journal of Artificial Intelligence Research, 12:35a86, 2000.
[3] M. Broxvall and P. Jonsson.
Disjunctive temporal reasoning in partially ordered time structures.
In Proceedings of the Seventeenth National Conference on Artificial Intelligence (AAAI-2000), pages 464a469.
AAAI Press, 2000.
[4] T. Drakengren and P. Jonsson.
Eight maximal tractable subclasses of Allenas algebra with metric time.
Journal of Artificial Intelligence Research, 7:25a45, 1997.
[5] T. Drakengren and P. Jonsson.
Twenty-one large tractable subclasses of Allenas algebra.
Artificial Intelligence, 93:297a319, 1997.
[6] M. C. Golumbic and R. Shamir.
Complexity and algorithms for reasoning about time: A graph-theoretic approach.
Journal of the ACM, 40(5):1108a1133, 1993.
[7] P. Jonsson and C. BA$?ckstrAsm.
A unifying approach to temporal constraint reasoning.
Artificial Intelligence, 102(1):143a155, 1998.
4 Conclusion We have studied the computational complexity of a temporal formalism that combines the point algebra, the pointinterval algebra and Allenas interval algebra.
By assuming that (<) is always included in the set of relations under consideration, we have identified all maximal tractable fragments of this formalisms.
There is an obvious two-step continuation of this work.
In the first step, the additional requirement on point-point relations must be removed so a complete classification of the formalism is obtained.
In the second step, metric constraints should be added to the formalismathus yielding a classification of the extended QA suggested by Meiri [13].
The first step can probably be carried out using methods similar to those found in [10].
The second step is more of a challenge even though there has been some progress in the study of metric temporal formalisms, cf.
[11].
[8] P. Jonsson, T. Drakengren, and C. BA$?ckstrAsm.
Computational complexity of relating time points with intervals.
Artificial Intelligence, 109(1a2):273a295, 1999.
[9] M. Koubarakis.
Tractable disjunctions of linear constraints: Basic results and applications to temporal reasoning.
Theoretical Computer Science, 266(1a 2):311a339, 2001.
[10] A. Krokhin, P. Jeavons, and P. Jonsson.
Reasoning about temporal relations: The tractable subalgebras of Allenas interval algebra.
Technical Report PRG-RR-01-12, Computing Laboratory, Oxford University, 2001.
Available from web.comlab.ox.ac.uk/oucl/ publications/tr/rr-01-12.html.
[11] A. Krokhin, P. Jeavons, and P. Jonsson.
The complexity of constraints on intervals and lengths.
In Proceedings of the 19th Annual Symposium on Theoretical Aspects of Computer Science (STACS-2002), pages 443a 454, AntibesaJuan les Pins, France, 2002.
Acknowledgements This research was partially supported by the UK EPSRC grant GR/R29598 and the Swedish Research Council (VR) grant 221-2000-361.
[12] G. Ligozat.
aCornera relations in Allenas algebra.
Constraints, 3(2/3):165a177, 1998.
7  [13] I. Meiri.
Combining qualitative and quantitative constraints in temporal reasoning.
Artificial Intelligence, 87(1-2):343a385, 1996.
[14] B. Nebel and H.-J.
BAzrckert.
Reasoning about temporal relations: A maximal tractable subclass of Allenas interval algebra.
Journal of the ACM, 42(1):43a66, 1995.
[15] A. K. Pujari and A. Sattar.
A new framework for reasoning about points, intervals and durations.
In Proceedings of the 16th International Joint Conference on Artificial Intelligence (IJCAI-99), pages 1259a1267, Stockholm, Sweden, 1999.
[16] M. B. Vilain, H. A. Kautz, and P. G. van Beek.
Constraint propagation algorithms for temporal reasoning: A revised report.
In D. S. Weld and J. de Kleer, editors, Readings in Qualitative Reasoning about Physical Systems, pages 373a381.
Morgan Kaufmann, San Mateo, Ca, 1989.
8