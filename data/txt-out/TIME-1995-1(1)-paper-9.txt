Formalizing Actions in Branching Time: Model-Theoretic Considerations Munindar P. Singh  Microelectronics and Computer Technology Corporation 3500 W. Balcones Center Drive Austin, TX 78759-5398 USA msingh@mcc.com  Abstract  The formalization of actions is essential to AI.
Several approaches have been proposed over the years.
However, most approaches concentrate on the causes and effects of actions, but do not give general characterizations of actions themselves.
A useful formalization of actions would be based on a general, possibly nondiscrete, model of time that allows branching (to capture agents' choices).
A good formalization would also allow actions to be of arbitrary duration and would permit multiple agents to act concurrently.
We develop a branching-time framework that allows great exibility in how time and action are modeled.
We motivate and formalize several coherence constraints on our models, which capture some nice intuitions and validate some useful inferences relating actions with time.
1 Introduction  Actions and time have drawn much attention in arti	cial intelligence (AI).
Whereas much progress has been made in modeling time, corresponding progress has not been made in modeling actions.
Temporal approaches run the gamut from discrete to continuous, point-based to interval-based, and linear to branching.
By contrast, approaches to formalizing actions tend to be restricted to discrete models, typically linear and with additional assumptions such as that exactly one action happens at a time, and all actions have the same duration.
Reasoning about actions focuses on the possible causes and e ects of the actions, but not on their structure.
This work is undoubtedly of value.
However, we submit that its full potential can be realized only if actions themselves are formalized in a general framework.
What are the properties that intuitively acceptable and technically feasible models of actions and time should support?
We  address this question here.
A general model of actions would provide the underpinnings for work on concepts|such as intentions, ability, and know-how|that supervene on actions.
When actions are modeled restrictively, the technical results obtained on the above concepts end up with potentially superuous or even pernicious restrictions.
It is easy to obtain spurious results on the above concepts that rely on some irrelevant aspect of the underlying model of actions Singh, 1992].
Our main interest is in formalizing the above concepts, but we must model actions properly to succeed Singh, 1994].
We introduce this formalization to the temporal representation community here.
Our framework allows (a) time to branch to model agents' choices, (b) multiple agents to act simultaneously, (c) actions to be of varying durations relative to one another, and (d) time to be nondiscrete.
Thus choice and control can be properly captured in this framework.
Our approach is nonrei	ed Bacchus et al., 1989], as is common in the non-AI literature Emerson, 1990].
Time can variously be modeled as linear or branching.
Allen presents an interval-based linear-time theory of actions in 1984].
Turner (p. 88) and Shoham 1988, ch.
2] show that Allen's theory is not conceptually clear, especially with regard to intervals.
Shoham too restricts his models to be linear.
Allen (p. 131) and Shoham (p. 36) argue that branching time is unnecessary since the agents' ignorance can be modeled in other ways.
However, branching into the future is not a matter of ignorance, but of choice.
That is why, ignorance apart, the past can be linear but the future must branch.
(Sometimes, eciency may be gained by treating even the past as branching: we allow this.)
Galton 1990] improves over Allen's approach in some respects but does not address constraints on actions per se.
McDermott's approach, like ours, is point-based and involves branching-time 1982].
But, McDermott requires his models to be dense also, clock values are essential to his semantics.
McDermott notes, correctly, that an action cannot hap-  pen over overlapping intervals: we capture this differently.
But a lot more must be said that his and other approaches do not say.
Related research includes Thomason & Gupta, 1981 van Frassen, 1981 Haddawy, 1990 Dean & Boddy, 1988], but it does not model actions as motivated here.
We present our formal language and model next and discuss our key operators informally.
Then we motivate and formalize a number of coherence constraints on our models that are required for various useful properties.
We use these to prove some important results relating actions and time.
We close with a discussion of some open problems.
2 Technical Framework  The proposed formal model is based on a set of moments with a strict partial order, which denotes temporal precedence.
Each moment is associated with a possible state of the world, which is identi	ed by the atomic conditions or propositions that hold at that moment.
A scenario at a moment is any maximal set of moments containing the given moment, and all moments in its future along some particular branch.
 .. .. ..     q X HX  HX  XX .
.
.
t 1 HX  H   q .
.
.
HH .
.
.
a k c  a k d t2    XHXHXXX b k c  qq .. .. ..   t0 HH XXX   HHH XXXr X HHXXXX q .
.
.
HH t3HX bkd HH q .
.
.
HHH q .
.
.
t4  does action a, then whether t1 or t2 becomes the case depends on whether the second agent does c or d. Intuitively, actions are package deals.
They correspond to the granularity at which an agent can make his choices.
In Figure 1, the 	rst agent can choose between t1 and t2, on the one hand, and between t3 and t4 , on the other hand.
However, he cannot choose between t1 and t2 , or between t3 and t4 .
Both choice and limited control are thus captured.
2.1 The Formal Language  We use a qualitative temporal language, L, based on CTL* Emerson, 1990].
This captures the essential properties of actions and time that are of interest.
Formally, L is the minimalset closed under the following rules.
Here L is the set of \scenario-formulae," which is used as an auxiliary de	nition.
is a set of atomic propositional symbols, A is a set of agent symbols, B is a set of basic action symbols, and X is a set of variables.
L1.
 2  implies that  2 L L2.
p Wq 2 L and a 2 B implies that p ^ q, :p, Pp, ( a : p) 2 L s  LL L4.
p q 2 L , x 2 A, and a 2 B implies that p ^ q, :p, pUq, xa]p, xhaip, xjhaijp 2 L L5.
p 2 L implies that Ap 2 L W L6.
p 2 (L ; L) and a 2 X implies that ( a : p) 2 L 2.2 The Formal Model A model for L is a four-tuple, M = (T < A  ] ).
Here T is a set of possible moments ordered by <.
A assigns agents to di erent moments i.e., A : T 7!
}(A).  ]
is described below.
The relation < is a L3.
s  s  s  s  s  s  strict partial order:  	 Transitivity: (8t t  t 2 T : (t < t ^ t < t )) t < t ) 	 Asymmetry: (8t t 2 T : t < t ) t 6< t) 	 Irreexivity: (8t 2 T : t 6< t) 0  00  Figure 1: The Formal Model Figure 1 shows a schematic picture of the formal model.
Time may branch into the future and, in any interesting application, does.
It may be taken as linear in the past, although nothing hinges upon this.
The agents' ignorance about the past, as about anything else, is captured by beliefs (not discussed here).
Each agent inuences the future by acting, but the outcome also depends on other events.
Figure 1 is labeled with the actions of two agents.
The 	rst agent can constrain the future to some extent by choosing to do action a or action b.
If he does a, then the world progresses along one of the top two branches out of t0  if he does b, then it progresses along one of the bottom two branches.
However, the agent cannot control what exactly transpires.
For example, if he  00  0  0  00  0  0  0  A scenario at a moment t is any single branch of the relation < that includes t and all moments in some future of t that is a linear subrelation of <.
Di erent scenarios correspond to di erent ways in which the world may develop, as a result of the actions of agents and events in the environment.
Formally, a scenario at t is a set S  T that satis	es the following.
Rootedness: t 2 S 	 Linearity: (8t  t 2 S : (t = t ) _ (t < t ) _ 0  (t < t )) 00  00  0  00  0  00  0  	 Relative Density: (8t  t 2 S t 2 T : (t < t < t )) t 2 S ) 0  000  00  000  00  000  0  	 Relative Maximality: (8t 2 S t 2 T : (t < t )) (9t 2 S : (t < t ) ^ (t 6< t ))) 0  00  000  0  00  000  000  0  00  It is possible to extend S (here to t ), then it is extended, either to t (when t = t ), or along some other branch.
By itself, this does not entail that time be eternal.
S is the set of all scenarios at moment t. Since each scenario at a moment is rooted at that moment, the sets of scenarios at di erent moments are disjoint, that is, t 6= t ) S \ S = .
If t is such that t < t , then for every scenario, S 2 S , there is a scenario, S , such that S  S and S 2 S .
Conversely, for every scenario S 2 S , for each moment t 2 S , there is a scenario S 2 S , such that S  S .
S  t t ] denotes a period on scenario S from t to t , inclusive, i.e., the subset of S from t to t .
Thus, if S0 t t ]  S1 , then S0  t t ] = S1  t t ].
However, in general, S0 t t ] 6= S1 t t ].
For notational simplicity, S  t t ] presupposes t t 2 S and t  t .
00  00  000  00  t  0  t0  t  0  0  0  t0  0  t  t  0  t0  0  0  0  0  0  0  0  0  0  0  0  0  0  2.3 Semantics For p 2 L, M j= p expresses \M satis	es p at t." For p 2 L , M j= p expresses \M satis	es p at moment t on scenario S " (we require t 2 S ).
We say p is satisable i  for some M and t, M j= p. The t  s  St  t  satisfaction conditions for the temporal operators are adapted from those in Emerson, 1990].
It is assumed that each action symbol is quanti	ed over at most once in any formula.
Below, pj is the formula resulting from the substitution of all occurrences of a in p by b.
Two useful abbreviations are false  (p ^ :p), for any p 2 , and true  :false.
Formally, we have: M1.
M j=  i  t 2  ] , where  2  M2.
M j= p ^ q i  M j= p and M j= q M3.
M j= :p i  M 6j= p M4.
M j= Ap i  (8S : S 2 S ) M j= p) M5.
M j= Pp i  (9t : t < t and M j= p) W M6.
M j= ( a : p) i  (9b : b 2 B and M j= pj ), where p 2 L W M7.
M j= ( a : p) i  (9b : b 2 B and M j= pj ), where p 2 (L ; L) q and M8.
M j= pUq i  (9t : t  t and M j= (8t : t  t  t ) M j= p)) M9.
M j= xa]p i  (8t 2 S : S  t t ] 2  a] implies that (9t : t < t  t and M j= p)) M10.
M j= xhaip i  (9t 2 S : S  t t ] 2  a] and (9t : t < t  t and M j= p)) M11.
M j= xjhaijp i  (9t 2 S : S  t t ] 2  a] and (9t : t < t  t and (8t : t < t  t implies that M j= p))) M12.
M j= p ^ q i  M j= p and M j= q M13.
M j= :p i  M 6j= p M14.
M j= p i  M j= p, where p 2 L a b  t t  t  t  t  t  t  t  0  t  St  0  t0  t  : c :  00  x  x  0  0  0  St  St  St 00  0  0  St  x  0  0  00  0  St0  St00  0  St  Figure 2: Actions: Nonsynchronized and of Varying Durations Basic actions can be of arbitrary durations.
Multiple agents may act simultaneously.
The set of actions available to an agent can be di erent at di erent moments.
For example, the actions of moving a block may take more or less time than the action of turning a knob.
This case is diagramed in Figure 2, which also shows that actions may begin and end arbitrarily.
The intension,  ] , of an atomic proposition is the set of moments at which it is true.
The intension of an action symbol a is, for each agent symbol x, the set of periods in which an instance of a is performed by x.
Thus t 2  p] means that p is true at moment t and, S  t t ] 2  a] means that agent x is performing action a from moment t to moment t .
When S  t t ] 2  a] , t corresponds to the ending of a, but t does not correspond to the initiation of a.
This is because a may already be in progress before t. Constraints C1 and C2 of section 3 pertain to this aspect.
All basic actions take time.
That is, if S  t t ] 2  a] , then t < t .
a b  s  00  b = move a block a = turn a knob  0  St  a b  b 9 : 9 9 a XXyXXXXX XyXXXXb XXXXX zXXX yXXXXXXXXXX a XXX z XXXXX XdX zX X  t  00  0  00  0  St00  0  00  x  x  0  0  St00  0  00  0  0  000  x  000  00  St000  St  St  St St  St  St  t  2.4 Temporal and Action Operators: Discussion  pUq is true at a moment t on a scenario, i  q holds at a future moment on the given scenario and p holds on all moments between t and the selected occurrence of q. Fp means that p holds sometimes in the future on the given scenario and abbreviates trueUp.
Gp means that p always holds in the future on the given scenario it abbreviates :F:p. Pp denotes p held at  some moment in the past.
The branching-time operator, A, denotes \in all scenarios at the present moment."
Here \the present moment" refers to the moment at which a given formula is evaluated.
A useful abbreviation is E, which denotes \in some scenario at the present moment."
In other words, Ep  :A:p. For example, in Figure 1, EFr and AFq hold at t0 , since r holds on some  moment on some scenario at t0 and q holds on some moment on each scenario.
L also contains operators on actions.
These are based on operators in dynamic logic, but are given a linear rather than a branching semantics.
For an action symbol a, an agent symbol x, and a formula p, xa]p holds on a given scenario S and a moment t on it, i , if x performs a on S starting at t, then p holds at some moment while a is being performed.
The formula xhaip holds on a given scenario S and a moment t on it, i , x performs a on S starting at t and p holds at some moment while a is being performed.
These de	nitions require p to hold at any moment in the (left-open and right-closed) period in which the given action is being performed.
Thus they are weaker than possible de	nitions that require p to hold at the moment at which the given action completes.
It is essential to allow the condition to hold at any moment in the period over which the action is performed.
This is because we are not assuming that time is discrete or that all actions are of equal durations and synchronized to begin and end together.
Intuitively, if we insisted that the relevant condition hold at the end of the action, then an agent could e ectively leap over a condition.
In that case, even if a condition occurs while an action is performed, we may not have xhaip.
For example, if p is \the agent is at the equator," and the agent performs the action of hopping northwards from just south of the equator, he may end up north of the equator without ever (of	cially) being at it.
That would be quite unintuitive.
For this reason, the present de	nitions are preferred although as a consequence, the operators h i and  ] are not formal duals of each other.
But this is made up for by having a more intuitive set of de	nitions, which also enable the right relationship between the action operators and F, G, and U to be captured.
Recall from above that pUq considers all moments between the given moment and the 	rst occurrence of q, not just those at which di erent actions may end.
Further, xjhaijp holds on a scenario S and moment t if x performs action a starting at t and p holds in some initial subperiod of the period over which a is performed.
This operator is necessary to relate actions with time for the following reason.
We allow actions to happen over periods which contain moments between their endpoints.
Such cases can arise even in discrete models if all actions are not unit length.
Consequently, if a is performed at t and q holds at an internal moment of a and p holds throughout, then pUq holds at t. But absent the jh ij operator, we cannot characterize pUq recursively in terms of actions.
One useful characterization is given in section 4: this helps in giving the 	xed point semantics of the temporal operators, which is essential to computing them eciently.
The above action modalities yield scenarioformulae, which can be combined with the branchingtime operators A and E. Axa]p denotes that on all  scenarios S at the present moment, if a is performed on S , then p holds at some moment on S between the present moment and the moment at which a is completed.
Similarly, Exhaip denotes that a is being performed on some scenario at the present moment and that on this scenario p holds at some moment between the present moment and the moment at which a is completed.
In other words, Axa]p corresponds to the necessitation operator and Exhaip to the possibility operator in dynamic logic.
Existential quanti	cation over basic actions is a useful feature.
Of the several basic actions that an agent may do at a given moment, we would often like to talk restrictively of the subset of actions that have some interesting property.
Indeed, we need something like this to formally express the idea of choice: an agent may be able to do several actions, but would, in fact, choose to do one, e.g., one of those that ensure success.
3 Coherence Constraints  For the above models to be coherent and useful, further technical constraints are required.
These are motivated and formalized below.
z z  t0 t1  a }|  }|a  { {  t3  t2  Figure 3: Case Disallowed by Action Uniqueness (1) z  t0  }|a  {  t1  z  a}|  t2  {  t3  Figure 4: Case Disallowed by Action Uniqueness (2) C1.
Uniqueness of Termination of Actions:  Starting at any given moment, each action can be performed in at most one way on any given scenario.
In other words, for any action a, scenario S , and moments t0  t1 t2 t3 in S , we have that S  t0 t2] 2  a] and S  t1 t3] 2  a] implies that, if t0  t1 < t2 , then t2 = t3.
This is needed to exclude ill-formed models in which an action does not have a unique moment of ending (see Figures 3 and 4).
If an agent performs an action and then repeats it, the repetition counts as a separate instance, because it has a distinct starting moment.
This constraint permits di erent actions with possibly distinct endpoints to happen simultaneously.
In discrete models with unit length actions, both endpoints are necessarily unique here only the termination point is assumed to be unique.
a }|  z  t  ...  t  00  z  }|  in Figure 6, would allow a condition to be inevitable and yet unreachable though any 	nite sequence of actions.
It is important that this not be the case for inevitability to relate properly with know-how.
This constraint always holds in discrete models.
{  a  {  t  ... S  0  Figure 5: Actions in Progress  Actions in Progress: It helps in relating moments with actions to require that S  t t ] 2  a] ) (8t : t  t < t ) S  t  t ] 2  a] ).
This allows us to talk of an agent's actions at any moment at which they are happening, not just where they begin.
However, in accordance with constraint C1, actions begun at a moment still have a unique ending moment.
As a result of this constraint, the actions operators behave properly.
For example, if an agent can achieve a condition by performing some action, then he can also achieve it while in the process of performing that action (until it happens).
This constraint holds vacuously in discrete models.
Figure 5 shows how this constraint causes the intension of an action to be 	lled out by suxes of the period over which it is performed.
The period S  t  t ] is not added to  a] , since that would lead to a violation of our assumption that S  t t ] 2  a] implies that t < t .
This would cause ambiguity between an action instance ending at t and another beginning there.
C3.
Passage of Time: Something must be done by each agent along each scenario in the model, even if it is some kind of a dummy action.
This assumption ensures that time does not just pass by itself, and is needed to make the appropriate connections between time and action.
Formally, (8t 2 T x 2 A(t) S 2 S ) ((9t 2 S )) (9t 2 S a : S  t t ] 2  a] ))).
C2.
00  0  0  00  0  0  0  0  0  0  t  x  0  t  t  0  0  t  ... S  00  Figure 6: Limit Sequences Disallowed by Reachability of Moments C4.
S0  0  00  Reachability of Moments: For any scenario and two moments on it, there is a 	nite number of actions of each agent that, if performed on that scenario starting at the 	rst moment, will lead to a moment in the future of the second moment.
Formally, (8S : (8t t 2 S : t < t ) (9t : t  t and (9a1  .
.
.
 a and S  t t ] 2  a1 .
.
.
 a ] )))).
This condition is intended to exclude models in which there are moments that would require in	nitely long action sequences to reach.
Such models, e.g., as 0  0  00  00  0  00  n  n  t  tX 0    a  X-XXXX XXXXX t1 S1  Figure 7: Actions Cannot be Partially Performed on any Scenario  Atomicity of Basic Actions: If an agent is performing an action over a part of a scenario, then he completes that action on that scenario.
This makes sense since the actions in the model are basic actions, performed with one atomic choice by their agent.
If an action in some domain can in fact be chopped into a pre	x and sux such that the sux is optional, then it should be modeled as two separate basic actions, the 	rst of which completes entirely and the second of which may not be begun at all.
Formally, let t t  t1 2 T, such that t < t < t1.
Let S0  S1 2 S , such that S1  t t ] 2 S0 .
Then S1 t t1] 2  a] implies that (9t0 2 S0 : S0 t t0] 2  a] ).
Intuitively, S1 t t1] 2  a] means that x is performing a from t to t1.
Therefore, he must be performing a in any subperiod of that, including S1 t t ], which is the same as S0  t t ].
Thus, a must be completed on S0 .
Higher-level actions do not satisfy this.
For example, Al may be crossing the street (on a scenario) even if he did not cross it successfully on that scenario, e.g., by being run over by a bus.
Our models represent physical systems, albeit nondeterministic ones.
The actions available to the agents and the conditions that hold on di erent scenarios leading from a given state are determined by that state itself.
Constraints on agent's choices, abilities, or intentions can thus be exibly modeled.
A well-known alternative characterization of models of time is by the set of all scenarios at all states.
We relate moments and states as follows.
De	ne a relation  to indicate the state-equivalence of moments and periods.
The state at a moment is precisely characterized by the atomic propositions that hold at that moment.
For moments, t and t , we de	ne t  t i  f 2 jt 2  ] g = f 2 jt 2  ] g. For sets of C5.
0  0  t  0  x  x  x  0  0  0  0  0  moments, L and L , we de	ne L  L in terms of an order-isomorphism, f .
Given two sets L and L with an order <, a map f from L to L is an orderisomorphism i  (a) f is onto, (b) (t 2 L i  f (t) 2 L ), and (c) (8t t0 2 L : t < t0 i  f (t) < f (t0 )).
We can now de	ne L  L as L  L i  (9f : f is an orderisomorphism and (8t 2 L) t  f (t))).
Observation 1  is an equivalence relation 2 Thus, t  t means that the same physical state occurs at moments t and t .
Thus, states are the equivalence classes of  on moments.
L  L means that the moments in L and L represent the same states occurring in the same temporal order.
In other words, L and L represent the same trajectory in state-space.
For a model to represent a physical system and be speci	able by a transition relation among di erent states, the corresponding set of scenarios, S, must satisfy the following closure properties Emerson, 1990].
We generalize these from discrete time.
Sux closure: If S 2 S, then all suxes of S belong to S. 	 Limit closure: If for a set of states T = ft0 .
.
.
t .
.
.g, scenarios containing t0 .
.
.
t , for n  0 are in S, then a scenario S such that T  S is also in S. 	 Fusion closure: If S0 = S0  t  S0 and S1 = S1  t  S1 in S include the same state t, then the scenarios S0  t  S1 and S1  t  S0 formed by concatenating the initial and later parts of S0 and S1 also belong to S ( indicates concatenation).
Lemma 2 By construction, S derived from our models satis	es sux and limit closures.
2 0  0  0  0  0  0  0  0  0  0  0  0  n  n  p  p  f  p  z  f  f  p  a  ...  }|  ...  f  {      t0    0  0  t  x  x  0  t0  4 Results on Time and Actions  It is helpful in intuitively understanding formal de	nitions to attempt to prove some technical results that should follow from them.
For this reason, we state and discuss some consequences of the above model and semantic de	nitions next.
We believe constraint C1 is what McDermott intends by requiring that actions do not overlap.
But, that also eliminates C2, which is essential, e.g., so that Fp can be concluded at all moments which precede p (Observation 6).
Constraints C3 and C4 are required for Observation 6 and related results about G and U.
We also use the fact that x:a]:p means that a is performed and p holds throughout a.
Observation 4 (xhaip)!
Fp 2  Observation 5 (xhaiFp)!
Fp 2 Observation 6 Fp!
p _ (W a : xhaiFp) 2 Observation 8 Gp!
(W a : x:a]:Gp) 2  XXXX  a  t  0  0  Observation 7 Gp!
p 2  XXXXX XXXX6X 6 XXXX6 XXX  t  Weak Determinism: If two moments satisfy exactly the same atomic propositions, then the fragments of the model rooted at those moments must be isomorphic with respect to the temporal precedence relation and the atomic propositions in the formal language.
Thus, we can de	ne weak determinism as the following constraint.
(8x 2 A a 2 B t t  t0 2 T S0 2 S : t  t ) (S0  t t0] 2  a] ) (9S1 2 S  t1 : S1 t  t1 ] 2  a] and S0  t t0]  S1  t  t1]))) Lemma 3 Under weak determinism, S derived from our models satis	es fusion closure.
2 C6.
?z .
.
.
}| ?
.
.
.
{ ?t1 XXXXX XXXXX XXXX XXXXX XX Figure 8: Weak Determinism  However, fusion closure is not satis	ed in general.
We show next how to satisfy it.
Observation 9 (p ^ x:a]:Gp)!
Gp 2 Observation 10 (p ^ q)!
pUq 2 Observation 11 (p ^ x:a]:(pUq))!
pUq 2 Observation 12 (p ^ xjhaij(pUq))!
pUq 2 Observation 13 pUq!
((p ^ q)_W W (p ^ ( a : x:a]:(pUq))) _ (p ^ ( a : xjhaij(pUq)))) 2  Observation 14 In discrete models with unit length actions, xhaip  x:a]:p and xhaip  xjhaijp.
Thus one action operator suces in such models.
2  5 Conclusions and Open Problems  Actions and time are crucial to several subareas of AI.
We sought to generalize the formalization of actions, so that several important properties are not excluded.
These include the actions being of di erent durations, the actions being performed concurrently by di erent agents.
the underlying notion of time being variously continuous or discrete, and the underlying notion of time allowing branching into the future.
We stated various coherence constraints that capture the intuitive properties of actions in di erent cases of interest.
Or model can thus serve as an underpinning for further research on notions such as intentions and know-how.
Previous research on these concepts has been shackled by poor models of time and action, thereby leading to spurious results Singh, 1992].
The logic CTL* was designed over a decade ago for reasoning about programs.
Usually, its models are discrete with unit length actions performed one at a time.
We extended CTL* with new operators and gave our language a more general semantics that allows time to be discrete, dense, or continuous.
One of our concerns was that our de	nitions specialize to each case properly.
This is useful since AI models must often function at multiple levels of abstraction.
We also discovered that several constraints must be stated on models to capture the AI notion of basic actions.
The sole traditional constraint of no overlap McDermott, 1982] says too little and sometimes is too strong.
Even though several decision procedures are known for CTL*, no closed-form axiomatization is still known.
This is an important open problem, as is determining an axiomatization for our language, L. Further research is required to determine the role of past time operators for AI purposes.
Such operators are known to make formulae drastically compact in some cases, but they also raise the complexity of the required decision procedures signi	cantly.
Would it help for AI to augment L with operators such as since ?
For models with exclusively unit length actions, one action operator is enough (instead of three).
Are there other interesting classes of models for which L can be simpli	ed?
We have focused here on representational issues.
We have not explored the tradeo s between expressiveness and computational complexity.
Clearly, eciency can be gained by simplifying the formal language and model.
One class of reasoning techniques that is likely to prove of much value is the one developed in the qualitative reasoning community, which routinely deals with continuous phenomena and looks for ways to express them in terms of signi	cant transitions Kuipers, 1986 Sandewall, 1989].
Model checkers (programs which check whether a given model satis	es a given formula) have drawn much attention lately Burch et al., 1990].
One such  can fairly easily be constructed for L by generalizing the ones known for CTL*.
The recursive characterizations of the temporal operators in terms of actions go a long way in designing this.
Instead of points in discrete models, we have to maintain periods in our model.
Clearly, if a model is 	nitely speci	able in terms of periods, we can compute on it in 	nite time using standard techniques.
However, ecient, specialized data structures for periods would be essential in practice.
References  Allen, 1984] Allen, James F. 1984.
Towards a general theory of action and time.
Articial Intelligence 23(2):123{154.
Bacchus et al., 1989] Bacchus, Fahiem Tenenberg, Josh and Koomen, Johannes A. 1989.
A nonrei	ed temporal logic.
In First Conference on Knowledge Representation and Reasoning.
2{10.
Burch et al., 1990] Burch, J. R. Clarke, E. C. McMillan, K. L. Dill, D. L. and Hwang, L. J. 1990.
Symbolic model checking: 1020 states and beyond.
In LICS.
Dean & Boddy, 1988] Dean, Thomas and Boddy, Mark 1988.
Reasoning about partially ordered events.
Articial Intelligence 36:375{399.
Emerson, 1990] Emerson, E. A. 1990.
Temporal and modal logic.
In Leeuwen, J.van, editor, Handbook of Theoretical Computer Science, volume B. North-Holland Publishing Company, Amsterdam, The Netherlands.
Galton, 1990] Galton, Antony 1990.
A critical examination of Allen's theory of action and time.
Articial Intelligence 42:159{188.
Haddawy, 1990] Haddawy, Peter 1990.
Time, chance, and action.
In Sixth Conference on Uncertainty in AI.
Harper et al., 1981] Harper, William L. Stalnaker, Robert and Pearce, Glenn, editors.
IFS: Conditionals, Belief, Decision, Chance, and Time.
D. Reidel, Dordrecht, Netherlands.
Kuipers, 1986] Kuipers, Benjamin J. 1986.
Qualitative simulation.
Articial Intelligence 29:289{338.
McDermott, 1982] McDermott, Drew 1982.
A temporal logic for reasoning about processes and plans.
Cognitive Science 6(2):101{155.
Sandewall, 1989] Sandewall, Erik 1989.
Combining logic and di erential equations for describing realworld systems.
In Principles of Knowledge Representation and Reasoning.
Shoham, 1988] Shoham, Yoav 1988.
Reasoning About Change: Time and Causation from the Standpoint of AI.
MIT Press, Cambridge, MA.
Singh, 1992] Singh, Munindar P. 1992.
A critical examination of the Cohen-Levesque theory of intentions.
In 10th European Conference on Articial Intelligence.
Singh, 1994] Singh, Munindar P. 1994.
Multiagent Systems: A Theoretical Framework for Intentions, Know-How, and Communications.
Springer Ver-  lag, Heidelberg, Germany.
Thomason & Gupta, 1981] Thomason, Richmond H. and Gupta, Anil 1981.
A theory of conditionals in the context of branching time.
In Harper et al., 1981].
299{322. van Frassen, 1981] van Frassen, Bas C. 1981.
A temporal framework for conditionals and chance.
In Harper et al., 1981].
323{340.