Temporal Knowledge Representation and Organization for Case-Based Reasoning.
I. Bichindaritz  E. Conlon  LIAP-5, UFR de Math-Informatique Universiti: Rent5 Descartes - Paris 5 45 rue des Saints-Pkres 75006 Paris, France  LIAP-5, UFR de Math-Informatique Universiti!
Renk Descartes - Paris 5 45 rue des Saints-Pkres 75006 Paris, France  Abstract  follow-up and clinical research [3].
A first version of the system, which did not deal with temporal data, was able to provide assistance to the work of the clinical team.
The second version of the system, the memory of which is presented here, has been enriched with the processing of temporal data.
The second section presents the temporal knowledge representation of the cases and the trends.
The third section deals with the composition of the case memory and with its organization around trends, and the fourth section explains how trends are learnt.
The case-based reasoning process of the system is then briefly presented in the fifth section.
It is followed by a comparison with related work, then by the conclusion.
Thas artacle presents the temporal knowledge representataon and ats organzzataon an a case-based reasonang system called MNAOMIA.
The general casebased reasonzng methodology as grounded on a model of reasonang such that memory, learnzng and reasonang are anseparable.
Thas partacular focus forces pertanent knowledge representataon and organazataon an the system memory The maan aspects of the temporal damensaon of knowledge representataon and organzzataon of MNAOMIA are detaaled an thas paper, such as' the temporal representataon language for the cases, the automatac learnzng oftrends from the cases durang the reasonang process, and the organazatzon of the memory an generalazataon-based haerarchaes of trends under whach the cases are andexed  1  2 Knowledge Representation 2.1 Case Representation  Introduction  Initial Case Representation.
A case represents a patient evolution over time.
It is a conjunction of representation elements, each one associated to a definite date.
Some of these elements may be fixed in time, such as the surname, others can be recorded periodically, such as the weight for every day, else others can be recorded at different dates, such as the result of a diagnosis from an evaluation.
As stated before, an evolution is made up of the conjunction of all the above elements, also called events (see Figure 1).
An event is any fact about the patient recorded at a given time.
Case-based reasoning [lo] is an artificial intelligence methodology for the processing of empirical knowledge.
It reasons from cases, which are sets of empirical data, such as patients cases in a medical domain.
Previously processed cases are stored in a case-base, or memory, and used by such a system to process new cases.
The processing of a new case uses one or several memorized cases similar to the new case.
The specificity of the case-based approach of reasoning lies in its focus on the inseparability of reasoning from memory and from learning.
In particular, the organization and the composition of the memory, giving it the ability to be accessed and updated constantly during the reasoning process, are a key issue for a case-based reasoning system, even when the temporal dimension is not addressed.
The description of the knowledge representation language and of its organization permits to describe the memory adequately, and is thus the main subject of this paper, in relation with the temporal dimension.
The case-based reasoning (CBR) system presented here, called MNAOMIA, is a complete case-based reasoning system applied to the domain of eating disorders in psychiatry.
Its aim is to provide assistance to experts in the different cognitive tasks they perform, namely diagnosis, treatment planning, patients  Event  For example : Surname Event = <15/06/95, Surname, Catherine> Weight Event = <21/06/95, Weight, 38.9kg> Diagnosis Event = <17/06/95, Diagnosis, Anorexia> Abstract Case Representation.
An abstract case represents a patient evolution over time, such as given in the initial case representation, but in a summarized way.
A sequence of similar events can be summarized as an interval where the value of the attribute is rising or falling or remaining constant.
An interval is described thus :  152 0-8186-7528/96 $5.00 0 1996 IEEE  =< Time,Attribute, V a l u e >  where ti,s is the start and t;,f is the end of the interval.
The attribute value Fi(ti,,,t , , f )is produced by a function on the set of parameter values covered by the time interval.
For a discrete quantitative value, if the value chosen is the velocity of the parameter over the interval, the function to obtain the velocity is : thf  Vel(t,,s,& , f ) =  E sva~,/(t,,f tz,s) -  3=t,,s  Figure 1: Extract from a patient's evolution.
If the value is a continuous quantitative value, the function can be replaced by an integral.
If the value is a qualitative value obtained from the parameter values over the interval, the function produces a value either from predefined categorizations by experts (e.g.
High blood pressure is defined as 80Pa), or by a function which calculates such categorizations automatically.
From Time, to Time the attribute Attribute has overadvalue Vaiue.
This is represented by :  AbstractEvent  =< Time,, T i m e j , Attribute, Value > 2.2  So abstract case representations are conjunctions of such summarized events, also called abstract events.
Case Representation Language.
So a case Case is a conjunction of representation elements El, :  Case =  Trend Representation  Trend Definition.
A trend is a typical evolution [8,9], one which a significant number of patients are observed as having.
It is a generalization of summarized events, and thus from intervals and the values attached to these.
Trend Representation Language.
A Trend is a con.junction of description elements Eli.
A E/, i  Each element of representation Eli contains a precise attribute, Att, i.e.
a parameter type.
Associated with each Att is a function which returns the range of this parameter type, range(Att) (for example range(Ca1ories) = 100kcal).
Three types of element of representation are defined:  Trend =  i  'The types of description elements in a trend are dernved from those in a case, since they are generalized from them.
They are :  1.
A time-independent attribute-value pair (such as the patient name) :  1.
A time-independent attribute-value pair :  El, =< Att,, Vali > .
El, =< Att,, Val, >  2.
A time-point attached to an attribute-value pair can be generalized by itself if this attribute is not repeated in time :  A time can be associated to it, for example the date when this data element has been recorded, but it is not necessary.
2.
A time-point attached to an attribute-value pair corresponds to a qualitative value (such as high blood-pressure at arrival time) or to a discrete quantitative value (such as weight equals 37.8 kg at arrival date) : Eli =< t,, Atti, Vali  Eli  =< t,, Atti, Vali > .
3.
A time-point attached to an attribute-value pair is generalized if this attribute is repeated j , times :  >  El;  3.
A time-interval attached to an attribute-value pair corresponds to a qualitative value or a discrete quantitative value constant over a time interval (such as high blood-pressure from week 2 to week 3, result of a test 125 from month 1 to month 2), or to the evolution of a continuous qualitative value over a time interval (such as weight 39kg from day 2 to day 4) : Eli  A El,  =< t i , Atti,  c,'2,,=1 Valj,/n> .
4.
A time-interval attached to an attribute-value pair can be generalized by itself if this attribute is not repeated in time :  Eli =< ti,s,ti,f,Atti,Gi(ti,s,ti,f) >  5.
A time-interval attached to an attribute-value  pair can be generalized if this attribute is repeated in time :  =< ti,s,ti,f,Att,,Fi(t,,s,t,,f) >  153  2.
A EL =< ta,s,t,,f,lb,,ubz,Att,,F,(tz,,,t,,f) >.
value attached to a time-interval has two components to be generalized, the interval and the value of the function on the attribute.
where t,,s is the biggest of the starting times, t,,j is the smallest of the final times, lb, is the lower bound, i.e.
the smallest of the starting times, ub, is the upper bound, i.e.
the biggest of the final times, calculated from the set of all the intervals generalized for the same attribute Att,.
3  Generalization of time-intervals.
Let inti and intJ be two intervals :  inti =< t , + , t , >>,int, f =< t j , s , t j , f> .
The intersection between two intervals, inti n int, , does not capture the overall generalization of the previous intervals.
A reference to previous intervals is needed, i.e.
the knowledge that int, and intj produced the current generalized interval.
An effective means of keeping track of the intervals that make up a generalization is to store the highest and lowest time-points previously met, called the lower bound and the higher bound.
So the generalization of the intervals int, and int, is the interval intk (see Figure 2 ) given by :  Memory Representation  3.1 Memory Composition The memory M is a network of cases c; and trends T j linked by relationships Rk, i.e.
more-speczfic-than between trends, and anstance-of between trends and cases.
Cases and trends are nodes in this network.
M = (T,I<, R) where T = {..TI...}, K = {..c,...},  R = {..Rk(nl,n2)...}, with  121,122  TrendInterval = intk =< tk,s,tk,f,lbk,Ubk>  E ( T U K).
A new patient case presented to the system must be matched to memory and inserted in memory where there is a correspondence between one of memory's trends or cases and the new case.
So a matching predicate must be defined between a case and a trend.
Close versions of this predicate will also be used to match cases between themselves, as well as to match trends between themselves.
3.2 Trend Formation A trend T is a conjunction of representation elements El,.
where t k , s = sup(t,,s,tj,s),tk,j = i n f ( t t , f , t j , j ) 161, , = i n f ( t ; , , tjLs) and ubk = sup(t,,j,t,,f).
This gives the interval a range within which it can  in11  T=/\EE,  ub  2  Each element is the generalization of one of the element types of a case representation.
When these element types are not repeated thru time, they are generalized by themselves.
So a trend representation has the three basic types of representation elements as an abstract case representation : timeindependent attribute-value pairs, time-points attached t o attribute-value pairs, and time-intervals attached t o attribute-value pairs.
But a trend generally has two other types of elements, generalized from the previous ones, for a given attribute Att, : 1.
A value attached to a time-point is generalized as the mean of all the attribute Att, values V a l J , which fall within the original time-point ti range, called timerange(Att,) :  Figure 2: Generalization of two intervals.
expand.
If the new patient interval's start point is within the lowerbound, the intersection is extended to this startpoint, similarly with the upperbound.
These bounds allow the system to take previous instances into account when generalizing.
What is required for a match of two intervals is given by the operator during [l] :  inti during intj  ((ti,$2 tj,.)
A ( t j , f 2 t ; , f ) ) .
Upperbound and lowerbound are not used during the actual match.
They are used when generalizing a trend interval that matches.
n  V a l J , / n> .
El, =< t , , Att,, .
?>=I  Generalization of the value attached to a timeinterval.
The generalization is the mean value of all velocities matched against this time-interval.
To generate this it was necessary to store the sum of all velocities and the count of values.
So :  More precisely, each time-point t has a (min,max) range for matching.
This depends on the time type Typ (such as Y e a r , Month, Week, D a y , etc.)
and on the attribute, and is returned by the function timerange(Att,T y p ) .
Then the timepoint range IS (min=t - tzmerange(dtt,Typ), max=t timerange(Att,T y p ) ) .
By simplification, this function is also noted timerange(Att).
n  +  Val,, n >  Trendvalue =< z t l  154  So the overall generalization for an interval bound to a numeric value is :  where C is an instance of T (linked to it in memory by an instance - of relation).
Depending of the type of the representation element, the match predicate takes the following forms :  match - indep(Eli, , Eli,) independent elements :  matches two time-  The overall generalization for a qualitative value attached to a time-interval is :  Gi(ti s, t i , f )in this case is a qualitative value which cannot be generalized any further, We can assimilate the two representations if we define (this simplification is only for the clarity of this text, it is not used in the actual system where keeping n explicitely is required) :  match-point( Eli, , Eli,) matches two time-point elements :  The Matching Predicate to Relate Cases to Trends  match - point(El,, , EliT) I Vi, , 3,,[(tjc 2t,, - timerange(Att,,)) A(t,, f ti, timerange(Att,,))] A(Atti, = Att,,) A (Vali, E [(Val,, - range(Att,,), (Val,, range(Att,,)].
nomatch - point(El,, , El,,) %, 3tc[(tic 2 t,, - timerange(Att,,)) A(&, 5 t,, timerange(Att,,))] A(Att,, = Att,,) A (Valzc$2 [(Vali, - range(Att,,), (Val,, range(Att,,)].
+  3.3  +  In the paradigm of reasoning by analogy, which is used in MNAOMIA [4],an analogy is a relation of resemblance between two entities D and DI, one from domain D , the other from domain DI.
The resemblance between D and DI supposes the existence of an element of description in common d .
Most of the time this resemblance is not found in the initial descriptions of D and D I , but can be obtained by the transformation of their descriptions, i.e.
abstraction.
Thus the common property, d , can be decomposed into two initial properties d ( D ) and d(D!).
Such is the situation in this problem domain, we are matching between the description of a patient history and the trends so the paradigm applies here.
We need a matching predicate between the description of a case C and the description of a trend T .
Let C = Eli,  +  +  In addition to the timerange function previously defined, each attribute Att has a (min,max) range for matching.
This depends on the attribute, and is returned by the function range(Att).
Then the attribute ran e is (min=val - range(Att), max=val -t- rongefAtt)).
match - interval(El,, , E l z T )matches two timeinterval elements :  A iC  and  T=  A El,, iT  be the descriptions of the trend T and the case C. An element in the trend description Eli., and an element in the case description Eli, match if all their components match.
Three main types of element (and their generalizations) have been defined for a case, and so a matching predicate must be defined for each of these :  match(C,T ) W  Vi,  , 3ic [match(Eli,, Eli,)]  3.4  Also, a non-matching predicate has to be defined for each of these :  nomatch(C,T )  Hierarchical Organisation of Trends  Tirends are linked to other trends by the relations more - specific - than (and its reverse relation more - general - than).
This relation permits the building of a hierarchy  3,,Vic [nomatch(Eli,, Eli,)]  155  VmG > 3,s  [ ( t m G , s ,t m G , f ) d u r i n g ( t m S , S  1  tmS,.f)l  A(AttmG= Att,,) A G m s ( t m s , s !
t m s , j )E [(GmG @ m G , S l t m G , f ) - r a n g e ( A t t m G ) l (GmG(tmG,S> ?
m G , f )  +  More precisely, the memory is organized around points of view.
Each point of view is specific of a precise cognitive task performed (i.e.
diagnosis, treatment planning, etc.).
These points of view are situated in a different part of the memory than the entities (trends, cases) previously defined : the theoretical memory (see Figure 4), but a different hierarchy of trends is associated to each of them.
4  Trends Learning  MNAOMIA performs an incremental concept learning during its case-based reasoning [ 5 ] .
The search thru the memory, from a new case, starts from the root of the hierarchy, which is the most general trend of the memory.
Most of the time, this root is empty, and the set of the most general trends in the memory are searched.
For each of these, the match between the new case, and the trend, is evaluated] so for each description element of the trend.
A successful match is returned if at least one interval of the case matches the concept description.
The new case will be stored at any node it matches.
Therefore the match predicate generalizes any trend elements that match at the time of the match.
The pruning of trends and attributes will eventually remove any redundant concepts.
The pruning is done by Pos and Neg attributes which are associated with each description element in a trend.
If a description element's negative score falls below a certain level it will be removed.
If a trend's number of description elements falls below a certain level it is removed These attributes are updated while the match is evaluated.
When a match is successful for the whole trend, the algorithm passes the list of description elements of the case not contained in the trend to the sub-trends of this concept.
The sub-trends are the trends linked to the current trend by as-more-specafic-than relations.
Figure 3 : The hierarchical organization of the memory around several points of view.
Search(Trend, Case) result := {3 for a l l representation elements in Case if match(Trend.Element, Case-Element) then POS := POS + I else NEG := NEG + I if NEG - POS < Threshold then remove the element from the Trend description if Trend is empty then suppress the Trend from the Memory link its sub-trends to its super-trends in the hierarchy (fusion) if there is at least one contradictory description element between Trend and Cas e then return Nil  156  important features from a patient case, selecting hypotheses from this abstraction, deriving expectations from these hypotheses, comparing the expected consequences of the first ranked hypothesis to the patient's actual condition, and confirming in memory the right hypotheses.
So this case-based reasoning general framework is well adapted to medical reasoning.
else for all Trend sub-trends newresult := Search(sub-trend, unmatched elements in Case) if newresult <> Nil then result := result + newresult if result <> 4 3 then return result else return (Trend)  5.1  Abstract  Tlhe initial patient case is a conjunction of attrilbute-value pairs attached to time.
This representation is abstracted into an abstract case representation, in which the relevant features are calculated, in this ]problem time intervals bound to overall attribute values.
A new case has an initial representation such as :  This algorithm is a modified version of the GBM algorithm [14].
The main difference is in the match function.
Matching a Case against a Trend is not only comparing values by an equality function, but a more complex matching process as the one defined previously.
As a matter of fact, the Search algorithm could be adapted to other incremental concept learning algorithms than GBM, such as COBWEB [6,7]for example.
Initialcase =  A < T i m e i ,Atti, Vali > i  For example :  New trends are learnt when a new, revised case is added to the memory, at a given T r e n d .
The algorithm is as follows :  , S u r n a m e ,Catherine> <21/06/95,Diagnosis, Anorexia > <21/06/95, W e i g h t , 38.9kg > <22/06/95, W e i g h t , 38.5kg > (Case1 = <24/06/95, W e i g h t , 39.0kg > <  Insert(Trend, Case) UnMatched := Elements of the Case not explained by the Trend's Elements for all cases Ct indexed under the Trend nb := number of successful matches of match(Unmatched, Ct.Element) if nb > threshold then create a new sub-trend Tn of Trend with these successful matches index Case under Tn index Ct under Tn remove Ct from the cases indexed under Trend if Case has not yet been indexed under a new sub-trend of Trend then index Case under Trend  <  ...  ,  ...  ,  ...  <21/06/95, Calories <28/06/95, Calories  <  ...  ,  ...  >  , 1532kcal > , 1621kcal > , ... >  T i m e i can take several forms, and the user of the svstem is able to chose the granularity of the description, such as week, month: or like here day.
From  Here again, this algorithm is that of GBM [14],but the match function, and the generalization of a Trend, are much more complex than in GBM, due to the temporal elements in the cases descriptions.
5  Overview of the Reasoning Process  This system is a case-based reasoning system.
Case-based reasoning is both an artificial intelligence methodology, and a cognitive model of reasoning such that reasoning is inseparable from memory and from learning.
This cognitive model is a very high aim, which current case-based reasoning systems are just beginning to pursue.
The tight interaction between reasoning, memory and learning is one characteristic of the general description of the system, as presented on figure 4 , which has been inspired by Aamodt [2] and Bichindaritz [4].
The main steps in the reasoning process are to abstract, to retrieve, to reuse, to revise and to retain.
They also correspond to the STMODEL [18]of medical reasoning.
According to this model medical reasoning consists of abstracting the  ~  Figure 4: Architecture of the system.
these data, an abstract case representation is calculated.
The advantage of an abstract representation is that it summarizes the main facts in the patient evolution, thus getting away too specific dates and values.
The abstraction process calculates intervals, and attaches values to these intervals.
The user also has the  157  option of defining the intervals in terms of days or in terms of weeks.
If the evolution is to be defined in terms of weeks, the weekly velocity of the parameter, for example weight gain, is calculated and entered as the parameter value for that week.
Search(Trend, Case) algorithm described in the previous section.
The result returned by this algorithm is a set of Trends.
The algorithm FindIntervals abstracts intervals from this representation, for all attributes having an evolution.
Under these Trends, cases are indexed by instance - of relations.
These cases are ranked by a similarity measure, such as sim(Case1,Casea) =  Abstractedcase =  Result = { T r e n d k } .
A < Timei,,,T i m e i , f ,Atti, Vali >  E:-,  -  17Xs'n(E't,k,E'l,k)tCkn_l  " k , , p r e d Xnt,pert Xsrm(Elt,k,Ell,k)  a x n t ~ ~ =" kl, , p r e d  2  X",,pert  where CY is a weight associated to the representation elements which are not important for the current process, and where n,,pertand nk,,predare some weighting variables learnt by the system during previous cases processing.
These variables are associated to the representation elements of cases and trends.
In the Retain part of the reasoning cycle, the learnt case will be stored at every trend that it matched, here the Trendk.
This is why a pruning is performed here, with the POS and NEG variables, associated to each trend representation element.
Some parts of trends are removed, others are generalized, and finally, new trends are added, while previous trends can be deleted.
So the matching, generalizing and pruning are performed simultaneously.
For example :  < , , Surname ,Catherine> < 8 , ,Diagnosis, Anorexia > < 8 , 9 , Weight , -0.411-g > AbstractedCasel = < 9,11, Weight , s0.511-g > < ...,..., ... , ... > < 8,15, Calories , +89kcal > < .
.
., .
.
.
, .
.
.
, ... > The FindIntervals algorithm calculates the start Tz,sand the finish T,,f of intervals, for each attribute Att, given an evolution of this attribute ranked in increasing time order :  The Result set is the set of all most specific matching trends in the memory, for the new abstracted case.
The set of all the cases indexed under these trends is the set Cand of all the cases similar to this new case.
It is ranked by decreasing order of similarity by the sim function.
i := I T i , s = t h e f i r s t time p o i n t i n t h e evolution for each t i m e - i n t e r v a l s t a r t e d t a k e t h e c u r r e n t time-point i n t h e evolution c a l c u l a t e t h e v e l o c i t y between t h e t i m e - p o i n t and t h e n e x t one c a l c u l a t e t h e v e l o c i t y with t h e next t i m e - p o i n t added i f t h e extended v e l o c i t y i s s i g n i f i c a n t l y d i f f e r e n t from t h e i n i t i a l v e l o c i t y t h e n end t h e c u r r e n t t i m e i n t e r v a l w i t h T i , f = t h e c u r r e n t time-point Vi = i n i t i a l velocity  Cand = { C a s e k } .
5.3  Reuse  This step is very dependent on the task performed.
In problem-solving, it is an adaptation of the most similar case solution to fit the new case.
In other tasks, such as interpretation, it can be the construction of an argumentation linking the new case with the retrieved cases.
5.4 Revise Depending on the success or the failure of the new case processing, the reused case is revised and transformed into an updated case, now ready to be stored in the memory.
i : = i + l s t a r t a new t i m e - i n t e r v a l w i t h T i , s = t h e n e x t time-point  t a k e t h e next time-point i n t h e evolution  5.2 Retrieve The abstracted case is then matched with the trends in memory, in order to retrieve the most similar memorized cases.
First of all, this matching process is directed by the task to perform.
This comes from the organization of the memory around points of view from the theoretical memory Each task performed is associated to a unique point of view.
So the retrieval step must be performed for a specific cognitive task, such as diagnosis or treatment.
The trends are organized in hierarchies dependent upon the points of view in memory, as is represented in Figure 3.
The case is first matched with the most general trends, and following with more and more specific trends.
The Search thru the memory is performed by the  5.5  Retain  The algorithm performing the enrichment of the memory with the new revised case has been given in the previous section: Insert(Trend, C a s e ) .
6  Related Work  This work is related both to temporal reasoning in general, and to time processing in case-based reasoning.
In case-based reasoning, very few systems have tackled time processing.
This is due to the novelty of the domain: more crucial problems had to be solved first.
For instance, MNAOMIA has addressed  158  In : Proceedangs of the 1st UIi' Workshop on Case-Based Reasonang, I. Watson and M. Fahrir (Edts.
), Springer-Verlag LNCS/LNAI, 1995, (in press).
many important problems before dealing with time, although it was obvious from the start that time processing could not be avoided.
The other case-based reasoning systems that handle time use a continuous representation of their cases [15, 161.
They do not learn trends from these temporal data, and focus on matching between cases.
The weakness of this approach is first of all its limitation to small amounts of cases and data, and the lack of all the advantages of qualitative reasoning, such as explainability, understandability and knowledge discovery.
On the other hand, thorough work has been performed in temporal reasoning.
Since time processing has been driven by the application domain, only subsets of this work has been used in this system, such as the during operator [1,11],or the matching of known trends with new evolutions [8,9,17.
More theoretical work, such as the event calculus 12,131 would have been suited for the domain, but it exceeded the requirements of the application at its current state.
[6] Fisher D.H., "Knowledge acquisition via incremental conceptual clustering" In : Machane Learning 2, 1987, 138-172.
[7] Gennari J.H., Langley P. and Fisher D. "Models of Incremental Concept Formation", Artzficzal Intelligence, 40, 1989, 11-61.
[8] Haimowitz I.J.
and Kohane IS., "An epistomology for clinically significant trends", In :Proceedangs of the Tenth Nataonal Conference on Artzjicaul Intellagence, 1994, 178-181.  i  7  [9] Haimowitz I.J.
and Kohane I.S., "Automated trend detection with alternate temporal hypotheses", In2: Internataonal Jotnt Conference on Artificaal Intellzgence, 1993, 146-151.
Conclusion  [lo]Kolodner Janet L., Case-Based Reasonang.
Morgan Kaufmann Publishers, San Mateo, California, 1993.
The MNAOMIA case-based reasoning system reasons from the temporal data in the patients cases in close interaction with its memory.
MNAOMIA organizes its memory around hierarchies of trends learnt by incremental concept learning from the cases.
This approach is more related to the temporal reasoning strategy of Allen [l than to the event calculus of Kowalski and Sergot [13 because it updates its memory at input data processing time with the incremental concept learning previously presented.
So interesting work can be accomplished by integrating more of Allen's formalisms in MNAOMIA.
Moreover, the memory organization supports the subsequent reasoning of the system.
This reasoning, and the complex problems related to the resuse step and to the revise step, are our current research topic.
For this work, common formalisms with the event calculus [13] and those of temporal deductive databases seem promising.
[ll]Kouramajian V., Fowler J., "Modelling past Current and Future Time in medical Databases", In .
Proceedangs of the 18th Symposaum on Computer Applzcations an Medzcal Care.
1994, 315-319.
\  [12] Kowalski R.A., "Database updates in the event calculus", Journal of Logzc Programmang, 12, 1992, 121-146.
[13] Kowalski R.A., Sergot M.J., "A logic-based calculus of events", New Generataon Computang, 4(1), 1986, 67-95.
[14] Lebowitz M., "Concept learning in a rich input domain" ,In : R. S. Michalslti, J. G. Carbonell and T .
M. Mitchell (Eds.
), Machzne Learning: an A.I.
approach, 2, Morgan Kaufmann, Los Altos, Ca., 1986.
References [l]Allen J.F., "Maintaining Knowledge about temporal intervals", Communacataons of the ACM, 26(11), 1983, 832-843.
[15] Ram A. and Santamaria J.C., "Continous CaseBased Reasoning", In : Proceedangs of the AAAI93 Workshop on Case-Based Reasoning, 1993, 86-93.
[2] Aamodt A., "Towards Expert Systems that Learn from Experience", In : Proceedings of a Workshop on case-based reasonang (DARPA), Pensacola Beach, Florzda, K.J.
Hammond (Edt.
), Morgan Kaufmann, San Mateo, CA, 1989, 181187.
[l6] Rougegrez-Loriette S., "Prddiction de processus 2, partir de comportements observds : le systbme REBECAS", LAFORIA Doctoral Report (unpublished), 1994.
[l'] Shahar Y., Das A.K., Musen M.A., Kraemar F.B., "Knowledge-Based Temporal Abstraction for Diabetic Monitoring", In :Proceedangs of the 18th Symposaum on Computer Applacatzons an Medical Care, 1994, 697-701.
[3] Bichindaritz I., "A case-based assistant for clinical psychiatry expertise", In : Proceedzngs 18th Symposaum on Computer Applacataons an Medacal Care, AMIA, Washington DC, 1994, 673-677.
141 Bichindaritz I., Apprentzssage d e concepts duns une mkmoire dynamique : raisonnement Ci partir de cas adaptable Ci la tciche cognitive, Thesis of University Rend Descartes, Paris, 1994.
[18] Stefanelli M., Ramoni M. "Epistomological Constraints on Medical Knowledge-Based Systems", In : D.A.
Evans and V.L.
Pate1 (Eds.
), Advanced Models of Cognataon f o r Medacal Traanzng and Practice, Springer-Verlag, 1991, 3-20.
[5] Bichindaritz I., "A case-based reasoning and conceptual clustering : for a cooperative approach",  159