Decidability of the Theory of the Totally Unbounded o-Layered Structure Angelo Montanari and Gabriele Puppis Dipartimento di Matematica e Informatica, Universita di Udine Via delle Scienze 206, 33100 Udine, Italy {montana, puppis}@dimi.uniud.it Abstract In this paper, we address the decision problem for a system of monadic second-order logic interpreted over an olayered temporal structure devoid of both a finest layer and a coarsest one (we call such a structure totally unbounded).
We propose an automaton-theoretic method that solves the problem in two steps: first, we reduce the considered problem to the problem of determining, for any given Rabin tree automaton, whether it accepts a fixed vertex-colored tree; then, we exploit a suitable notion of tree equivalence to reduce the latter problem to the decidable case of regular trees.
1.
Introduction This paper addresses the decision problem for a system of monadic second-order (MSO for short) logic interpreted over an o-layered temporal structure devoid of both a finest layer and a coarsest one (we call such a structure totally unbounded and we denote it by TULS).
Layered structures have been originally proposed by Montanari et al.
in [4, 5, 6] to model finite and infinite hierarchies of time granularities.
They focus their attention on three distinct layered structures: the n-layered k-refinable structure, denoted by n-LS, which consists of a fixed finite number n of temporal layers such that each time point can be refined into k time points of the immediately finer layer, if any, and the downward (resp.
upward) unbounded k-refinable o-layered structure, denoted by DULS (resp.
UULS), which consists of an infinite number of arbitrarily fine (resp.
coarse) layers.
The MSO theories of these structures have been shown to be expressive enough to capture meaningful temporal properties of reactive systems (such as "P holds at all time points k n , with n >= 0") and decidable.
The decidability of the theories of the k-refinable n-LS, DULS, and UULS has been proved by reducing them to the MSO theories of one successor (S1S), of k successors (SkS), and of the k-ary systolic  tree (S1S k ), respectively.
Both the DULS and the UULS can naturally be viewed as tree structures.
The DULS can be viewed as an infinite sequence of infinite k-ary trees, while the UULS can be seen as a complete k-ary infinite tree generated from the leaves or, equivalently, as an infinite sequence of finite increasing k-ary trees [3].
The totally unbounded k-refinable o-layered structure (TULS) can be viewed as the composition of the DULS and the UULS.
In this paper we deal with the decision problem for the theory of the TULS.
To some extent, the solution we propose can be viewed as an extension of Carton and Thomas' solution to the decision problem for the MSO theories of residually ultimately periodic words [1].
We first provide a tree-like characterization of the TULS.
Taking advantage of it, we define a non-trivial encoding of the TULS into a vertex-colored tree that allows us to reduce the decision problem for the TULS to the problem of determining, for any given Rabin tree automaton, whether it accepts such a vertex-colored tree.
Finally, this latter problem is reduced to the decidable case of regular trees by exploiting a suitable notion of tree equivalence [7] (we call residually regular trees those vertex-colored trees for which such a reduction works).
Notice that, since both the DULS and the UULS can be easily embedded into the TULS, we obtain, as a by-product, a new uniform decidability proof for the theories of the two structures.
2.
Basic notions MSO logics.
MSO logics over graph structures are defined as follows.
A graph structure is defined as a tuple S = (S, E1 , .
.
.
, Ek ), where S (also denoted Dom(S)) is a countable set of vertices and E1 , .
.
.
, Ek are binary relations defining the edge labels.
A vertex-colored graph is a graph S endowed with a partition P1 , .
.
.
, Pm of Dom(S) that defines the colors of the vertices.
MSO formulas are built up from a set of atoms of the form Xi (xj ), Pi (xj ), Pi [?]
Pj , Ei (xj , xk ), by means of the standard connectives [?]
, [?]
, and !
and quantifications over  first-order variables (which are denoted by lowercase letters, e.g., xj , xk , and interpreted as single vertices) and second-order variables (which are denoted by uppercase letters, e.g., Xi , and interpreted as sets of vertices).
The semantics of an MSO formula is defined in the standard way [9].
For a given formula ph(x1 , .
.
.
, xn , X1 , .
.
.
, Xl ), with free variables x1 , .
.
.
, xn , X1 , .
.
.
, Xl , we write S 2 ph[v1 , .
.
.
, vn , V1 , .
.
.
, Vl ] whenever the MSO formula ph holds in the structure S with the interpretation v1 /x1 , .
.
.
, vn /xn , V1 /X1 , .
.
.
, Vl /Xl .
The MSO theory of a structure S, denoted by MTh(S), is the set of all sentences that hold in S. Thus MTh(S) is said to be decidable iff there is an effective way to test whether a given sentence holds in S or not.
Furthermore, we say that an n-ary relation R is MSO-definable in S if there is a formula ph(x1 , .
.
.
, xn ) such that (v1 , .
.
.
, vn ) [?]
R iff S 2 ph[v1 , .
.
.
, vn ].
Colored trees.
K-ary m-colored trees are vertex-colored (deterministic) graphs whose domain is a prefix-closed language over [k], with [k] = {1, .
.
.
, k}, and whose edge relations are such that (u, v) [?]
Ei iff v = ui.
Given a colored tree S, we denote by S(v) the color of the vertex v. The frontier Fr (S) of the tree S is the prefix-free language {u [?]
Dom(S) : [?]
i [?]
[k].
ui 6[?]
Dom(S)}.
In this paper, we mainly deal with full trees, namely, those trees for which, whenever there exists l [?]
[k] such that (u, ul) [?]
El , then (u, ui) [?]
Ei , for every i [?]
[k].
Though the standard notion of full tree includes both empty trees and singleton trees, it is convenient to exclude such cases.
A path of the tree S is a (finite or infinite) word u such that every finite prefix of u belongs to Dom(S).
Given a path u of S, we denote by S|u the sequence of colors associated with the vertices of u.
A branch is a maximal path, namely, a path which is not a proper prefix of any element of S. We denote the set of all (finite or infinite) branches by Bch(S).
Tree automata.
According to [8], a k-ary Rabin tree automaton over the alphabet [m] is a quadruple M = ([n], I, E, AP ), where [n] is a finite set of states, I [?]
[n] is a set of initial states, E [?]
[n] x [m] x [n]k is a transition relation, and AP is a finite collection of accepting pairs (Li , Ui ) with Li , Ui [?]
S. Given an infinite complete k-ary m-colored tree S, a run of the automaton M on S is any infinite complete k-ary n-colored tree r such that (r(u), S(u), r(u1), .
.
.
, r(uk)) [?]
E for every u [?]
Dom(r).
r is said to be successful, and S is said to be accepted by M , if r(e) [?]
I and, for every branch u and every accepting pair (Li , Ui ), we have Inf (r|u) [?]
Li = [?]
and Inf (r|u) [?]
Ui 6= [?
], where Inf (a) denotes the set of elements that occur infinitely often in a sequence a.
The language L (M ) is the set of all trees accepted by M .
We further denote by Img(a) the set of elements that occur in a sequence a.
3.
Layered structures In this section we define (o-)layered structures and we explore the relationships among them.
In particular, we show that the theories of the (k-refinable) DULS and UULS can be easily embedded into the theory of the (k-refinable) TULS.
Definition 1.
AS k-refinable layered structure is a graph Sk = ( i[?
]I Li , <, (|l )l[?
][k] ), where I S [?]
Z, Li = {(i, n) : n [?]
N}, < is a totalSorder over i[?
]I Li , and, for all l [?]
[k] and all (i, n) [?]
i[?
]I Li , |l is a function that maps (i, n) to (i + 1, kn + l - 1) (if there exists such an element).
For all i [?]
I, Li is called a layer of the structure and, for all l [?]
[k], |l is called the l-th projection function, since it maps elements of a given layer to elements of the immediately finer layer (if any).
Both n-layered and o-layered structures have been studied in the literature; in the following, we restrict our attention to o-layered ones.
In [5], Montanari et al.
investigate two meaningful o-layered structures, namely, the k-refinable DULS (abbreviated Dk ) and the krefinable UULS (Uk ).
As already pointed out, Dk can be seen as an infinite sequence of infinite complete k-ary trees, while Uk can be seen either as an infinite k-branching tree generated from the leaves or as an infinite sequence of finite increasing k-trees.
Formally, Dk is obtained by setting I = N and defining < as the total order given by the preorder visit (for elements of the same tree) and by the linear order of the trees (for elements belonging to different trees), while Uk is obtained by setting I = -N and defining < as the total order given by the in-order visit of the nodes of the tree.
In this paper, we focus our attention on a new class of o-layered structures, namely, the k-refinable TULS (Tk ).
For any k, Tk can be seen as the composition of Dk and Uk .
Formally, Tk is obtained by setting I = Z and defining < as a suitable total order over Dom(Tk ) (e.g., the total order induced by the pre-order visit or the in-order one).
In order to systematically analyze the relationships between Tk and Dk (resp.
Uk ), we define a couple of auxiliary relations.
With a little abuse of notation, we use the unary relational symbol L0 to identify the elements of the layer L0 = {(0, n) : n [?]
N} (L0 is the top layer of Dk , the bottom layer of Uk , and a distinguished intermediate layer of Tk ).
Furthermore, we denote by <0 (resp.
+0 ) the order relation (resp.
the successor function) over L0 , which is defined as follows: for every n, n0 [?]
N, (0, n) <0 (0, n0 ) iff n < n0 (resp.
+0 ((0, n)) = (0, n0 ) iff n0 = n + 1).
(It is well-know that <0 is MSO-definable in terms of +0 .)
In Figure 1, we depict a little part of T2 , pointing out the elements of L0 by black-colored vertices and the successor function +0 by bold arrows.
It is not difficult to show that the total order < is MSOdefinable in terms of (|l )l[?
][k] both in Uk and in Tk .
This is  1 3 1 1  2  2  1  +0 1  1  +0  2  2  1  1  2  1  1  2  2  1  1  2  3  2 +0  1  +0  2  2  1  1  2  1  1  3  2  2  1 3  1  2  2  2  2  1  1  3 1  3 1  2 3  2  3  2  1  2  3 1  2  2 3  1  2  3 1  3 1  2  2 3  1  2  3 1  2  3 1  2  Figure 1.
The layered structure (T2 , L0 , +0 ).
Figure 2.
The colored tree ([?
]3 , DT2 , LT2 ).
not the case with Dk , where < is MSO-definable in terms of (|l )l[?
][k] and <0 , or, equivalently, +0 (but not L0 ).
Moreover, the addition of one relation among L0 , <0 , and +0 to Tk (it is easy to show that they are inter-definable in Tk ) allows us to prove that the MSO logic over both Dk and Uk can be embedded into the MSO logic over Tk (it is worth emphasizing that the additional predicate is needed for dealing with both Dk and Uk , not only for Dk ).
The details of the proofs can be found in [7].
The following theorem states that MSO formulas interpreted over (Tk , L0 ) can be turned into equivalent MSO formulas interpreted over the colored tree ([?
]k+1 , DTk , LTk ).
In particular, we have (i) (Tk , L0 ) 2 L0 [v] iff ([?
]k+1 , DTk , LTk ) 2 LTk [fTk (v)], and (ii) (Tk , L0 ) 2 |1 (u, v) iff ([?
]k+1 , DTk , LTk ) 2 E1 (fTk (u), fTk (v)) [?]
Ek+1 (fTk (v), fTk (u)).
4.
The decision problem for (Tk , L0 ) In [3], the decision problems for the MSO theories of the DULS and the UULS have been solved by reducing them to the decision problems for theories of suitable (different) tree structures.
In the following, we deal with the decision problem for the MSO theory of Tk extended with L0 , namely, for the theory of the relational structure (Tk , L0 ).
As a preliminary step, we show that the MSO logic over (Tk , L0 ) can be embedded into the MSO logic over a suitable (k + 1)-ary vertex-colored tree, thus reducing the original problem to the problem of deciding the theory of such a colored tree.
Notice that this embedding allows us to move from the setting of layered structures to the more standard framework of colored tree structures.
The correspondence between the two structures is established by means of a suitable injective function fTk , which maps vertices of Tk to vertices of the infinite complete (k + 1)-ary tree, henceforth denoted by [?
]k+1 : fTk ((i, n)) = (k + 1) * .
.
.
* (k + 1) * | {z } A times  n * ( kA+i-1 mod k + 1) * .
.
.
* ( kn0 mod k + 1) | {z } A+i times  where A is equal to dlog k (n+1)e-i, whenever n+1 >= k i , and to 0 otherwise.
Let DTk = fTk (Dom(Tk )) and LTk = fTk (L0 ).
Both DTk and LTk are (proper) subsets of [k +1]* .
Let us assign them the status of vertex-coloring relations over [?
]k+1 .
In Figure 2, we represent the relations DT2 and LT2 for the (portion of the) layered structure depicted in Figure 1.
Shaded nodes represent the vertices of the domain of (T2 , L0 ) and black-colored nodes represent the vertices belonging to the layer L0 .
Theorem 1.
For any MSO formula ph(x, X), there is an MSO formula ph0 such that (Tk , L0 ) 2 ph[v, V ] iff ([?
]k+1 , DTk , LTk ) 2 ph0 [fTk (v), fTk (V )].
It is easy to see that DTk = [k]* [?]
{k + 1} * {k + 1}* * {k} * [k]* is a regular language of finite words over [k + 1], and thus there exists an MSO formula ph(x) such that [?
]k+1 2 ph[v] iff v [?]
DTk , that is, DTk is MSOdefinable in [?
]k+1 .
As for LTk , assume, by contradiction, that there exists an MSO formula ph defining LTk in [?
]k+1 .
This would imply that ps(X) = [?]
x. X(x) - ph(x) holds in [?
]k+1 iff X is interpreted as LTk .
By Rabin's Theorem [8], there would be a Rabin automaton M such that L (M ) is the singleton consisting of the tree [?
]k+1 colored by LTk .
Such a tree would be non-regular since it would have infinitely many non-isomorphic subtrees.
Because any non-empty Rabin-recognizable set of trees contains a regular tree, L (M ) could not be a singleton.
This is a contradiction and hence LTk is not MSO-definable in [?
]k+1 .
It follows that the MSO logic of ([?
]k+1 , LTk ) is (strictly) more expressive than the MSO logic of [?
]k+1 .
In the following, we develop an automaton-based approach to the decision problem for MTh([?
]k+1 , LTk ).
5.
The automaton-based approach In this section, we outline an automaton-based proof method that generalizes the method advocated by Carton and Thomas in [1], where noticeable properties of residually ultimately periodic words are exploited to prove the decidability of the MSO theories of labelled linear orderings (a detailed presentation of the proposed method can be found in [7]).
As a first step, we show how to reduce the decision problem for MSO theories of colored trees to the acceptance problem for Rabin tree automata.
It is well-known that any  tuple V = (V1 , .
.
.
, Vm ), with Vi [?]
[k]* , can be naturally encoded by a suitable infinite complete k-ary 2m -colored tree, called the canonical representation of V .
Let us denote by SV the canonical representation of V .
Rabin's Theorem [8] establishes a strong correspondence between MSO formulas satisfied by ([?
]k , V ) and Rabin tree automata accepting SV : for every formula ph(X), we can compute a Rabin tree automaton M (and, conversely, for every Rabin tree automaton M , we can compute a formula ph(X)) such that [?
]k 2 ph[V ] iff SV [?]
L (M ).
Let us denote by Acc(SV ) the problem of deciding whether a given Rabin tree automaton recognizes SV .
We have that MTh([?
]k , V ) is decidable  iff Acc(SV ) is decidable.
The problem Acc(SV ) is known to be decidable for any regular colored tree SV (this follows from the decidability of the emptiness problem for Rabin tree automata and from their closure under intersection [8]).
In the following, we will extend the class of colored trees for which the acceptance problem turns out to be decidable.
We introduce the class of residually regular trees and we solve the acceptance problem for such a class by reducing residually regular trees to equivalent regular colored trees (according to a suitable notion of tree equivalence).
We preliminarily introduce some tools for manipulating colored trees.
For every pair of full k-ary m-colored trees S1 and S2 and for every color c [?]
[m], the concatenation S1 *c S2 is the tree resulting from the simultaneous substitution of all the c-colored leaves of S1 by S2 .
The operator *c is not associative; thus, we assume that it associates to the left.
We note that by concatenating a full tree to S, we always obtain a tree S 0 that extends S. Hence, we can easily generalize the definition to the case of infinite concatenations.
We call factorization any finite or infinite concatenation of the form Q S0 *c0 S1 *c1 .
.
.
(we denote infinite concatenations by i[?
]N (Si )ci ).
A factorization is said to be regular if each Sn is either a finite or a regular full tree and there are two positive integers p and q (called respectively prefix and period) such that, for every n >= p, cn = cn+q and Sn = Sn+q .
It is easy to prove that a full colored tree is regular iff it enjoys a regular factorization.
This implies that the MSO theory of any infinite complete colored tree generated by a regular factorization is decidable.
Now, given an automaton M , we define a suitable equivalence relation [?
]M between full colored trees such that (i) [?
]M is a congruence (that is, it respects factorizations) and (ii) it groups together those trees which are indistinguishable by M .
We preliminarily introduce the notion of computation of M .
A computation of the automaton M = ([n], I, E, AP ) on a full m-colored tree S is a full n-colored tree r such that (i) Dom(r) = Dom(S) and (ii) (r(u), S(u), r(u1), .
.
.
, r(uk)) [?]
E for every u [?]
Dom(r) \ Fr (r).
Definition 2.
Given an automaton M = ([n], I, E, AP ) over the alphabet [m], and two full m-colored trees S1 and S2 , S1 [?
]M S2 holds iff, for every computation r1 of M on S1 , there is a computation r2 of M on S2 (and vice versa) such that 1.
(S1 (e), r1 (e)) = (S2 (e), r2 (e)), namely, the colors and the states at the roots of the trees are the same; 2.
{Inf (r1 |u) : u [?]
Bch(S1 )} = {Inf (r2 |v) : v [?]
Bch(S2 )}, namely, the states occurring infinitely often in the branches of the trees are the same; 3.
{(S1 (u), r1 (u), Img(r1 |u)) : u [?]
Fr (S1 )} = {(S2 (v), r2 (v), Img(r2 |v)) : v [?]
Fr (S2 )}, namely, for every finite branch u of S1 , there is a finite branch v of S2 (and vice versa) such that S1 (u) = S2 (v), r1 (u) = r2 (v), and Img(r1 |u) = Img(r2 |v).
It is possible to show that [?
]M is a congruence of finite index that groups together those trees which are indistinguishable by the automaton M (namely, S1 [?
]M S2 implies S1 [?]
L (M ) iff S2 [?]
L (M )) [7].
By exploiting the indistinguishability of equivalent trees, we will reduce the acceptance problem for a large class of colored trees (that we will call residually regular trees) to the acceptance problem for regular colored trees.
Intuitively, we say that a sequence of finite full colored trees is 1-residually regular if, for every congruence of finite index, it is congruent to an ultimately periodical sequence of finite trees (and this sequence can effectively be constructed).
We call residually regular trees those trees that are obtained by concatenating the trees in a residually regular sequence.
We further extend the notion to level n by no longer considering finite trees but level n - 1 residually regular trees.
Let us formalize such an idea.
We denote by [i]l,r either i or ((i - l) mod r) + l, depending on whether i < l or not.
Definition 3.
Given n >= 1, a factorization S0 *c0 S1 *c1 .
.
.
is an n-residually regular factorization if 1. for every i, either Si is a finite full tree or n > 1 and we can provide an (n - 1)-residually regular factorization of Si , 2. for any congruence [?]
of finite index, there exist two positive integers p and q (called prefix and pattern of the factorization with respect to [?])
such that ci = c[i]p,q and Si [?]
S[i]p,q .
An n-residually regular tree is a tree enjoying an nresidually regular factorization.
Given a congruence [?]
of finite index, we inductively define regular forms of residually regular factorizations.
The regular factorization Q [?
]-regular form ofQa 1-residually 0 (S ) is the tree (S ) , where Si0 = S[i]p,q , and i[?
]N i ci i[?
]N i ci p and q are respectively a prefix and a period of the factorization with respect to [?].
For n > Q 1, a [?
]-regular form of an n-residually regular factorization i[?
]N (Si )ci is a tree Q 0 0 (S ) , where S is either S or a [?
]-regular form [i]p,q i i[?
]N i ci  of an (n - 1)-residually regular factorization of S[i]p,q , depending on whether Si is finite or not, Qwhere p and q are respectively a prefix and a period of i[?
]N (Si )ci with respect to [?].
It is easy to verify that a [?
]-regular form of a residually regular tree S is a regular tree equivalent to S, and hence the following theorem trivially follows.
The upshot of such a result is that infinite complete residually regular trees enjoy a decidable MSO theory.
Theorem Q 2.
Let M be an automaton over the alphabet [m], i[?
]N (Si )ci be an n-residually regular factorization of an infinite complete m-colored tree S, and S 0 be its [?
]M regular form.
We have that S [?]
L (M ) iff S 0 [?]
L (M ) (and thus Acc(S) is decidable).
6.
Decidability of the MSO theory of (Tk , L0 ) We conclude the paper by exploiting Theorem 2 to decide the MSO theory of (T2 , L0 ) (the proof can be easily generalized to any k > 2).
By Theorem 1, such a problem can be reduced to the decidability of MTh([?
]3 , LT2 ).
Figure 3 shows the corresponding colored tree ST2 , where blackcolored nodes represent the elements of the layer L0 .
Such a tree can be easily shown to enjoy a decidable MSO theory by providing a residually regular factorization.
A possible choice for the components of such a factorization is represented by dashed regions in Figure 3.
For convenience we denote colored trees by terms.
For instance, the term 2hS1 , S2 , S3 i denotes the tree obtained by appending S1 , S2 , and S3 to a vertex colored by 2.
Using a set of Qthree colors {1, 2, 3}, the factorization can be written as i[?
]N (Si )3 , where * S0 = 2hW, W, 3i, * Si+1 = 1hW, 2, 3i *2 Ri , * W is the infinite complete ternary 1-colored tree ([?
]3 , [3]* ), * R0 = 2hW, W, Wi, * Ri+1 = 1h2, 2, Wi *2 Ri .
The elements corresponding to L0 are represented by color 2.
Now, notice that any congruence [?]
of finite index induces an homomorphism from the set of full colored trees endowed with operator *2 to a finite groupoid.
By exploiting the recursive definition of the Ri 's and noticeable properties of finite groupoids [7], one can easily prove that (Si )i[?
]N is an ultimately periodic sequence up to [?]
and hence the above factorization is residually regular.
7.
Conclusions In this paper, we developed an automaton-based method for deciding the MSO theory of the k-ary totally unbounded o-layered structure.
As a by-product we obtained new uniform decidability proofs for the theories of downward and upward unbounded o-layered  Figure 3.
The tree ST2 embedding (T2 , L0 ).
structures.
The proposed method uses well-known results from automata-theory to reduce the decision problem for the considered MSO theory to the acceptance problem for Rabin tree automata.
It further introduces the class of residually regular trees, which extends that of regular trees, and for which the acceptance problem turns out to be solvable by exploiting a suitable notion of tree equivalence.
As a matter of fact, in [7] we exploited the proposed automaton-based approach to solve the decision problem for a large set of meaningful relational structures, including, for instance, the deterministic trees in the Caucal hierarchy [2].
References [1] O. Carton and W. Thomas.
The monadic theory of morphic infinite words and generalizations.
Information and Computation, 176:51-65, 2002.
[2] D. Caucal.
On infinite terms having a decidable monadic theory.
In Proceedings of the 27th International Symposium on Mathematical Foundations of Computer Science, volume 2420 of LNCS, pages 165-176.
Springer, 2002.
[3] M. Franceschet and A. Montanari.
Temporalized logics and automata for time granularity.
Theory and Practice of Logic Programming, Special Issue on Verification and Computational Logic, 4(5), 2004.
To appear.
[4] A. Montanari.
Metric and Layered Temporal Logic for Time Granularity.
ILLC Dissertation Series 1996-02.
Institute for Logic, Language and Computation, University of Amsterdam, 1996.
[5] A. Montanari, A. Peron, and A. Policriti.
Theories of olayered metric temporal structures: Expressiveness and decidability.
Logic Journal of IGPL, 7(1):79-102, 1999.
[6] A. Montanari and A. Policriti.
Decidability results for metric and layered temporal logics.
Notre Dame Journal of Formal Logic, 37(2):260-282, 1996.
[7] A. Montanari and G. Puppis.
Monadic second-order theories of branching structures.
Research Report 01, Dipartimento di Matematica e Informatica, Universita di Udine, Italy, 2004.
[8] M. Rabin.
Decidability of second-order theories and automata on infinite trees.
Transactions of the American Mathematical Society, 141:1-35, 1969.
[9] W. Thomas.
Languages, automata, and logic.
In G. Rozemberg and A. Salomaa, editors, Handbook of Formal Languages, volume 3, pages 389-455.
Springer, 1997.