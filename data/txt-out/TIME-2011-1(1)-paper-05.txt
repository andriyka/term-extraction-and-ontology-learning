Verification of Time Ontologies with Points and Intervals Michael Gruninger Darren Ong Department of Mechanical and Industrial Engineering University of Toronto Toronto, Ontario, Canada M5S 3G8  Abstract Ontology verification is concerned with the relationship between the intended structures for an ontology and the models of the axiomatization of the ontology.
The verification of a particular ontology requires characterization of the models of the ontology up to isomorphism and a proof that these models are equivalent to the intended structures for the ontology.
In this paper we consider the verification of three time ontologies (first introduced by Hayes in his Catalog of Temporal Theories) that axiomatize both timepoints and time intervals together with the relationships between them.
We identify axioms that are missing from these ontologies and provide a complete account of the metatheoretic relationships between the ontologies.
I.
Introduction An ontology is a logical theory that axiomatizes the concepts in some domain, which can either be commonsense knowledge representation (such as time, process, and shape) or the representation of knowledge in more technical domains (such as biology and engineering).
Verification of an ontology is concerned with the relationship between the intended structures for an ontology and the models of the axiomatization of the ontology.
In particular, we want to characterize the models of an ontology up to isomorphism and determine whether or not these models are equivalent to the intended structures for the ontology.
This relationship between the intended structures and the models of the axiomatization plays a key role in the application of ontologies in areas such as semantic integration and decision support.
Over the years, a number of first-order ontologies for time have been proposed, and many of these were collected by Hayes in [1].
In addition to ontologies that axiomatize  only time points and ontologies that axiomatize only time intervals ([2], [3]), Hayes also included three ontologies that axiomatize both timepoints and time intervals together with the relationships between them.
Remarkably, there has been no work on a formal characterization of the models of these ontologies up to isomorphism, despite the fact that upper ontologies such as SUMO [4], Cyc [5], and OWLTime ([6], [7], [8]) incorporate axiomatizations that are very similar to the ontologies from [1].
Although Hayes describes some models of the ontologies, he does not provide a characterization of all models, or any discussion concerning the existence of potentially unintended models.
After reviewing our approach to ontology verification, we examine the three ontologies from [1] that combine timepoints and time intervals - endpoints, vector continuum, and point continuum 1 .
For each theory, we provide a representation theorem (characterization of the models of the ontology up to isomorphism) which also enables us to understand the metalogical relationships between the theories.
Within each theory, we also identify missing axioms that are needed to either derive claims made by Hayes or to eliminate unintended models and ensure the proof of the representation theorem for the theory.
All proofs in this paper were generated using the Prover9 automated theorem prover.
Counterexamples (models that satisfy the negation of a proposed axiom and hence demonstrate the independence of an axiom from an ontology) were generated using Mace4.
In this paper, we are providing a logical analysis of the models of each ontology; we do not critique the underlying ontological commitments, and hence we are not interested in questions concerning which ontology is appropriate to 1 The online CLIF (Common Logic Interchange Format) axiomatization of these theories can be found at http://stl.mie.utoronto.ca/colore/time/endpoints http://stl.mie.utoronto.ca/colore/time/vector_continuum http://stl.mie.utoronto.ca/colore/time/point_continuum  use as a time ontology in a given context.
II.
Ontology Verification Our methodology revolves around the application of model-theoretic notions to the design and analysis of ontologies.
The semantics of the ontology's terminology can be characterized by a set of structures, which we refer to as the set of intended structures for the ontology.
Intended structures are specified with respect to the models of well-understood mathematical theories (such as partial orderings, lattices, incidence structures, geometries, and algebra).
The extensions of the relations in an intended structure are then specified with respect to properties of these models.
Why do we care about ontology verification?
The relationship between the intended models and the models of the axiomatization plays a key role in the application of ontologies in areas such as semantic integration and decision support.
Software systems are semantically integrated if their sets of intended models are equivalent.
In the area of decision support, the verification of an ontology allows us to make the claim that any inferences drawn by a reasoning engine using the ontology are actually entailed by the ontology's intended models.
If an ontology's axiomatization has unintended models, then it is possible to find sentences that are entailed by the intended models, but which are not provable from the axioms of the ontology.
The existence of unintended models also prevents the entailment of sentences or a possible barriers to interoperability.
With ontology verification, we want to characterize the models of an ontology up to isomorphism and determine whether or not these models are elementarily equivalent to the intended structures of the ontology.
From a mathematical perspective this is formalized by the notion of representation theorems.
Representation theorems are proven in two parts - we first prove every intended structure is a model of the ontology and then prove that every model of the ontology is elementary equivalent to some intended structure.
Classes of structures for theories within an ontology are therefore axiomatized up to elementary equivalence - the theories are satisfied by any structure in the class, and any model of the theories is elementarily equivalent to a structure in the class.
A. Interpretability We now show how a theorem about the relationship between the class of the ontology's models and the class of intended structures can be replaced by a theorem about the relationship between the ontology (a theory) and the theory axiomatizing the intended structures (assuming that  such axiomatization is known).
We will later show how we can use automated reasoners to prove this relationship and thus verify an ontology in a (semi-)automated way.
The relationship between theories TA and TB is the notion of interpretation, which is a mapping from the language of TA to the language of TB that preserves the theorems of TA .
We adopt the next two definitions from [9]: Definition 1: An interpretation p of a theory T0 with language L0 into a theory T1 with language L1 is a function on the set of parameters of L0 such that 1) p assigns to [?]
a formula p[?]
of L1 in which at most the variable v1 occurs free, such that T1 |= ([?
]v1 ) p[?]
2) p assigns to each n-place relation symbol P a formula pP of L1 in which at most the variables v1 , ..., vn occur free.
3) For any sentence s in L0 , T0 |= s = T1 |= p(s) Thus, the mapping p is an interpretation of T0 if it preserves the theorems of T0 .
If there is an interpretation of TA in TB , then there exists a set of sentences (referred to as translation definitions) in the language LA [?]
LB of the form ([?
]x) pi (x) [?]
ph(x) where pi (x) is a relation symbol in LA and ph(x) is a formula in LB .
We will say that two theories TA and TB are definably equivalent iff they are mutually interpretable, i.e.
TA is interpretable in TB and TB is interpretable in TA .
Definition 2: An interpretation p of a theory T0 into a theory T1 is faithful iff there exists an interpretation p of T0 into T1 and T0 6|= s = T1 6|= p(s) for any sentence s [?]
L(T0 ).
Thus, the mapping p is a faithful interpretation of T0 if it preserves satisfiability with respect to T0 .
We will also refer to this by saying that T0 is faithfully interpretable in T1 .
B.
Representation Theorems The primary challenge for someone attempting to prove representation theorems is to characterize the models of an ontology up to isomorphism.
Definition 3: A class of structures M can be represented by a class of structures N iff there is a bijection ph : M - N such that for any M [?]
M, M is definable in ph(M) and ph(M) is definable in M.  The key to using theorem proving and model finding to support ontology verification is the following theorem ([10]): Theorem 1: A theory T1 is definably equivalent with a theory T2 iff the class of models M od(T1 ) can be represented by M od(T2 ).
Let Mintended be the class of intended structures for the ontology, and let Tonto be the axiomatization of the ontology.
The necessary direction of a representation theorem (i.e.
if a structure is intended, then it is a model of the ontology's axiomatization) can be stated as M [?]
Mintended = M [?]
M od(Tonto ) If we suppose that the theory that axiomatizes Mintended is the union of some previously known theories T1 , ..., Tn , then by Theorem 1 we need to show that Tonto interprets T1 [?]
...
[?]
Tn .
If [?]
is the set of translation definitions for this interpretation, then the necessary direction of the representation theorem is equivalent to the following reasoning task: Tonto [?]
[?]
|= T1 [?]
...
[?]
Tn  (Rep-1)  The sufficient direction of a representation theorem (any model of the ontology's axiomatization is also an intended structure) can be stated as M [?]
M od(Tonto ) = M [?]
Mintended In this case, we need to show that T1 [?]
...
[?]
Tn interprets Tonto .
If P is the set of translation definitions for this interpretation, the sufficient direction of the representation theorem is equivalent to the following reasoning task: T1 [?]
...
[?]
Tn [?]
P |= Tonto  (Rep-2)  III.
Graphical Incidence Structures Before we begin the model-theoretic analysis of the time ontologies, we introduce the classes of mathematical structures which will be used in the representation theorems.
The basic building blocks for the models presented in this paper are based on the notion of incidence structures ([11]).
Definition 4: A k-partite incidence structure is a tuple I = (1 , ..., k , in), where 1 , ..., k are sets with i [?]
j = [?
], i 6= j and in [?]
(  [  i x j )  Definition 5: An strict graphical incidence structure is a bipartite incidence structure G = hX, Y, inG i such that all elements of Y are incident with exactly two elements of X, and for each pair of points p, q [?]
X there exists a unique element in Y that is incident with both p and q.
The class of strict graphical incidence structures is axiomatized by Tstrict graphical 2 .
Definition 6: An strong graphical incidence structure is a bipartite incidence structure S = hX, Y, inS i such that all elements of Y are incident with either one or two elements of X, and for each pair of points p, q [?]
X there exists a unique element in Y that is incident with both p and q.
The class of strong graphical incidence structures is axiomatized by Tstrong graphical 3 .
These two classes of incidence structures get their names from graph-theoretic representation theorems of their own.
Definition 7: A graph G = (V, E) consists of a nonempty set V of vertices and a set E of ordered pairs of vertices called edges.
An edge whose vertices coincide is called a loop.
A graph with no loops or multiple edges is a simple graph.
A complete graph is a graph in which each pair of vertices is adjacent.
Theorem 2: Let G = (V, E) be a complete simple graph.
A bipartite incidence structure is a strict graphical incidence structure iff it is isomorphic to I = (V, E, [?
]), where [?]
is the containment relation for vertices in an edge.
Theorem 3: Let G = (V, E) be a complete graph with loops.
A bipartite incidence structure is a strong graphical incidence structure iff it is isomorphic to I = (V, E, [?]).
These two representation theorems show that there is a one-to-one correspondence between each class of incidence structures and the given class of graphs, and in so doing, we have a characterization of the incidence structures up to isomorphism.
The third class of incidence structures used in this paper require the notion of the direct product of incidence structures: Definition 8: Given two incidence structures  i6=j  Two elements of I that are related by in are called incident.
The models of the time ontologies in this paper will be constructed using special classes of incidence structures.
2 http://stl.mie.utoronto.ca/colore/incidence/ strict-graphical.clif 3 http://stl.mie.utoronto.ca/colore/incidence/ strong-graphical.clif  I1 = hP1 , L1 , in1 i and I2 = hP2 , L2 , in2 i the direct product I1 x I2 is the incidence structure such that * P = P1 x P 2 ; * L = (P1 x L2 ) [?]
(L1 x P2 ); * the point (x, y) is incident with the line (x, L) [?]
P1 x L2 iff hy, Li [?]
in2 ; * the point (x, y) is incident with the line (M, y) [?]
L1 x P2 iff hx, M i [?]
in1 .
Definition 9: Let G = hP, G, inG i be a strict graphical incidence structure.
Let S = hP, S, inS i be a strong graphical incidence structure.
An incidence structure D = hP, X, inD i is a double complete incidence structure iff  endpoints as presented in [1]: ([?
]x) timepoint(x) [?]
timeinterval(x)  (1)  ([?
]x) timepoint(x) [?]
!timeinterval(x)  (2)  ([?
]x, y) bef ore(x, y) [?]
timeinterval(between(x, y))  Let Tendpoints be the theory in which endpoints is extended with these axioms.
The first step in the verification of Tendpoints is to prove the reasoning tasks that instantiate (Rep - 1) and (Rep - 2): Theorem 5: Tendpoints is definably equivalent to  D~ =GxS The class of double complete incidence structures is axiomatized by Tdouble complete 4 .
As above, we can also provide a representation theorem for double complete incidence structures with respect to a class of graphs: Theorem 4: Let G = (V, E) be a complete graph in which E is a symmetric reflexive relation.
A bipartite incidence structure is a double complete incidence structure iff it is isomorphic to I = (V, E, [?]).
(3)  Tlinear  ordering  [?]
Tstrict  graphical  Proof: Let [?]
be the following set of translation definitions: ([?
]x) point(x) [?]
timepoint(x) ([?
]x) line(x) [?]
timeinterval(x) ([?
]x, y) in(x, y) [?]
((beginof (y) = x) [?]
(endof (y) = x)) ([?
]x, y) bef ore(x, y) [?]
leq(x, y) Using Prover9, we have shown that  IV.
Endpoints The endpoints theory combines the language of intervals and points by defining the functions beginof, endof, and between to relate intervals to points and vice-versa.
This theory imports the axioms of linear point that define the binary before relation between timepoints as transitive and irreflexive, and impose the condition that all timepoints are linearly ordered and infinite in both directions.
The endpoints theory includes axioms defining the meetsat relation as one between two intervals and the point at which they meet along with conservative definitions for meets, precedes, overlaps, starts, during and finishes.
Finally, an axiom that restricts the beginof an interval to always come before its endof and another that states that intervals are between two points if they are properly ordered complete the theory.
The first of the final two axioms has the effect of preventing single-point intervals from existing in this theory as an interval that has the same point as its beginof and endof would be inconsistent due to the irreflexive property of the before relation.
In order to prove the representation theorems below, we discovered that the following axioms are missing from 4 http://stl.mie.utoronto.ca/colore/incidence/ double-complete.clif  Tendpoints [?]
[?]
|= Tlinear  ordering  [?]
Tstrict  graphical  Let P be the following set of translation definitions: ([?
]x) timepoint(x) [?]
point(x) ([?
]x) timeinterval(x) [?]
line(x) ([?
]x, y)(beginof (y) = x) [?]
((in(x, y)[?](([?
]z)in(z, y) [?]
leq(x, z)) ([?
]x, y)(endof (y) = x) [?]
((in(x, y)[?](([?
]z)in(z, y) [?]
leq(z, x)) ([?
]x, y) bef ore(x, y) [?]
leq(x, y) Using Prover9, we have shown that Tlinear  ordering  [?]
Tstrict  graphical  [?]
P |= Tendpoints  The second step in the verification of Tendpoints is to define the class of intended models: Definition 10: Mendpoints is the following class of structures: M [?]
Mendpoints iff 1) M ~ = P [?]
G, where a) P = hP, <=i is a linear ordering b) G = hP, G, inG i is a strict graphical incidence structure.
2) hti [?]
timepoint iff t [?]
P ; 3) hii [?]
timeinterval iff i [?]
G;  4) beginof (i) = t iff ht, ii [?]
inG and for any t0 [?]
P such that ht0 , ii [?]
inG , we have t <= t0 .
5) endof (i) = t iff ht, ii [?]
inG and for any t0 [?]
P such that ht0 , ii [?]
inG , we have t0 <= t. 6) between(t1 , t2 ) = i iff ht1 , ii, ht2 , ii [?]
inG ; 7) ht1 , t2 i [?]
before iff t1 < t2 .
We can now state the Representation Theorem for Tendpoints : Theorem 6: M [?]
Mendpoints iff M [?]
M od(Tendpoints ).
Proof: This follows from Theorem 5 and Theorem 1, together with the fact that Tstrict graphical axiomatizes the class of strict graphical incidence structures and Tlinear ordering axiomatizes the class of linear orderings.
Theorem 7: Tvc is definably equivalent to Tlinear ordering [?]
Tdouble complete Proof: Let [?]
be the following set of translation definitions: ([?
]x) point(x) [?]
timepoint(x) ([?
]x) line(x) [?]
timeinterval(x) g  ([?
]x, y)in (x, y) [?]
((beginof (y) = x)[?
](endof (y) = x)) ([?
]x, y)ins (x, y) [?]
((beginof (y) = x)[?
](endof (y) = x)) ([?
]x, y) bef ore(x, y) [?]
leq(x, y) Using Prover9, we have shown that Tvc [?]
[?]
|= Tlinear  ordering  [?]
Tdouble  complete  Let P be the following set of translation definitions:  V. Vector Continuum  ([?
]i, t) (beginof (i) = t) [?]
The vector continuum theory is a theory of timepoints and intervals that introduces the notion of orientation of intervals.
It also imports theory linear point and adds to it axioms that define the meets-at relation and the conservative definitions of meets, precedes, overlaps, starts, during and finishes in the same way as the endpoints theory.
Although it has the same three functions (beginof, endof, and between) that transform intervals to points and vice-versa, it differs in its definition of between by allowing the formation of intervals whose endof point is equal to or before its beginof.
Thus, unlike the endpoints theory, every interval in vector continuum has a reflection in the opposite direction via the back function and intervals oriented in the forward direction (beginof is before endof ) are defined by the forward relation.
In this theory single-point intervals, known as moments, are defined as intervals whose beginof and endof points are the same.
Similar to endpoints, we discovered that the following axioms are missing from vector continuum as presented in [1]: ([?
]x) timepoint(x) [?]
timeinterval(x)  (4)  ([?
]i, p) (beginof (i) = p) [?]
endof (i) = q [?]
between(p, q) = i  (5)  Without these axioms, there exist models that falsify the sentence ([?
]i) (back(back(i)) = i) Hence, this sentence is not provable from vector continuum, as Hayes claims.
Let Tvc be the theory in which vector continuum is extended with these axioms.
(in (t, i) [?]
(([?
]t0 ) ing (t0 , i) [?]
leq(t, t0 )) g  [?
](ins (t, i) [?]
(([?
]t0 ) ins (t0 , i) [?]
leq(t0 , t)) ([?
]i, t) (endof (i) = t) [?]
(in (t, i) [?]
(([?
]t0 ) ing (t0 , i) [?]
leq(t0 , t)) g  [?
](ins (t, i) [?]
(([?
]t0 ) ins (t0 , i) [?]
leq(t, t0 )) Using Prover9, we have shown that Tlinear  ordering  [?]
Tdouble  complete  [?]
P |= Tvc  The definition of the class of intended structures is slightly more complicated since we need to use two different incidence substructures - a strict graphical incidence structure for forward intervals and a strong graphical incidence structure for backward intervals: Definition 11: Mvc is the following class of structures: M [?]
Mvc iff 1) M ~ = P [?]
(G x S), where a) P = hP, <=i is a linear ordering; b) G = hP, G, inG i is a strict graphical incidence structure; c) S = hP, S, inS i is a strong graphical incidence structure.
2) hti [?]
timepoint iff t [?]
P ; 3) hii [?]
timeinterval iff i [?]
G [?]
S; 4) hii [?]
moment iff i [?]
S and there exists a unique t [?]
P such that ht, ii [?]
inS ; 5) beginof (i) = t iff G * ht, ii [?]
in and for any t0 [?]
P such that 0 G ht , ii [?]
in , we have t <= t0 , or S 0 * ht, ii [?]
in and for any t [?]
P such that 0 S 0 ht , ii [?]
in , we have t <= t.  6) endof (i) = t iff G * ht, ii [?]
in and for any t0 [?]
P such that 0 G ht , ii [?]
in , we have t0 <= t, or S 0 * ht, ii [?]
in and for any t [?]
P such that 0 S ht , ii [?]
in , we have t <= t0 .
7) between(t1 , t2 ) = i iff ht1 , ii, ht1 , ii [?]
inG [?
]inS .
The Representation Theorem for Tvc shows that this definition of intended structures does characterize the models of Tvc up to isomorphism: Theorem 8: M [?]
Mvc iff M [?]
M od(Tvc ).
Proof: This follows from Theorem 7 and Theorem 1, together with the fact that Tdouble complete axiomatizes the class of double complete incidence structures and Tlinear ordering axiomatizes the class of linear orderings.
point-continuum  endpoints  no-backwards  vector-continuum  no-moment  moment  backwards  Sim(endpoint,vc)  Figure 1.
Relationships between the time ontologies for points and intervals.
Dotted lines denote nonconservative extension and solid lines denote faithful interpretation.
VI.
Relationship between Tendpoints and Tvc Let moment be the sentence The Tendpoints and Tvc theories have the same primitive nonlogical lexicon, and hence we can determine their relationship using the notions of satisfiability, extension, and independence.
In particular, we use the following notion: Definition 12: Let T1 and T2 be theories with the language L. The similarity of T1 and T2 is the strongest subtheory of T1 and T2 so that for all s, ph [?]
L: if T1 |= s and T2 |= ph and T 6|= s and T 6|= ph, then either s [?]
ph is independent of T or it is a tautology.
Let Sim(endpoint, vc) be the theory which is equivalent to Tvc with the axiom ([?
]p, q) timepoint(p) [?]
timepoint(q) [?]
(beginof (between(p, q)) = p) [?
]endof (between(p, q)) = q) replaced by ([?
]p, q) bef ore(p, q) [?]
(beginof (between(p, q)) = p) [?
]endof (between(p, q)) = q) Theorem 9: Sim(endpoint, vc) is the similarity of Tendpoints and Tvc .
Proof: Let backwards be the sentence ([?
]i1 ) timeinterval(i1 ) [?]
([?
]i2 ) timeinterval(i2 ) [?
](beginof (i2 ) = endof (i1 ))[?
](endof (i2 ) = beginof (i1 )) Let no backwards be the sentence ([?
]i2 ) timeinterval(i1 ) [?]
!([?
]i2 ) timeinterval(i2 ) [?
](beginof (i2 ) = endof (i1 ))[?
](endof (i2 ) = beginof (i1 ))  ([?
]t) timepoint(t) [?]
([?
]i) timeinterval(i) [?
](beginof (i) = t) [?]
(endof (i) = t) Let no moment be the sentence ([?
]t) timepoint(t) [?]
!([?
]i) timeinterval(i) [?
](beginof (i) = t) [?]
(endof (i) = t) Using Prover9, we have shown Tendpoints |= no backwards [?]
no moment Tvector  continuum  |= backwards [?]
moment  Using Mace4, we have shown that if disjunctions of these sentences are not tautologies, then they are independent of Sim(endpoints, vc).
Theorem 10: Sim(endpoint, vc) is definably equivalent to the theory IQ in [12].
The next corollary is not explicitly stated in [1], but it follows from the propositions used in the proof of Theorem 9.
Corollary 1: Tendpoints and Tvc are mutually inconsistent.
The relationships between the theories is summarized in Figure 1.
VII.
Point Continuum The point-continuum theory combines intervals and points by defining the relation in that relates a point to the interval it is contained in.
All intervals of this theory are oriented in the forward direction and are considered either open, when the beginof and endof points are not in in the interval, or closed, when the beginof and endof  points are included in in the interval.
Therefore, the axioms defining the functions beginof, endof, and between also make the distinction between open and closed intervals.
The axiom for the function closure ensures that every open interval has a closed interval with the same endpoints.
The relation acoao (also closed or also open) that compares two intervals is essential for the conservative definitions of the temporal relations meets, starts and finishes.
With the distinction between closed and open intervals, open intervals in this theory can only meet and interval that is closed.
Therefore, if two open intervals share an endpoint in common (where the endof one is equal to the beginof the other) these intervals do not meet each other, but instead they each meet the same closed single-point interval known as a moment that resides between them.
The following axioms are missing from point continuum: ([?
]x) timepoint(x) [?]
timeinterval(x)  (6)  ([?
]i) open(i) [?]
timeinterval(i)  (7)  ([?
]i) closed(i) [?]
timeinterval(i)  (8)  ([?
]i) timeinterval(i) [?]
timepoint(beginof (i)) [?]
timepoint(endof (i))  (9)  Let Tpc be the theory in which point continuum is extended with these axioms.
A.
Relationship to the other Theories Tpc uses a language that expands the nonlogical lexicon of both Tendpoints and Tvc , so we need to turn to the metatheoretic notion of relative interpretation to understand the relationships among these theories 5 .
Theorem 11: Tpc faithfully interprets Tendpoints .
Proof: If [?]
is the following set of translation definitions: ([?
]x) timepointec (x) [?]
timepointpc (x) ([?
]x) timeintervalec (x) [?]
openpc (x) ([?
]x, y) (beginof ec (x) = y) [?]
(beginof pc (x) = y) ([?
]x, y) (endof ec (x) = y) [?]
(endof pc (x) = y) then Tpc [?]
[?]
|= Tendpoints .
Theorem 12: Tpoint continuum faithfully interprets Tvc .
Proof: If [?]
is the following set of translation definitions: ([?
]x) timepointvc (x) [?]
timepointpc (x) 5 Since these theories use relations with the same names, we distinguish them by a superscript that denotes the theory in which they are axiomatized.
([?
]x) timeintervalvc (x) [?]
closedpc (x) ([?
]x, y) (beginof vc (x) = y) [?]
(beginof pc (x) = y) ([?
]x, y) (endof vc (x) = y) [?]
(endof pc (x) = y) then Tpc [?]
[?]
|= Tvc .
Notice that intervals in Tendpoints are interpreted as open intervals in Tpc and intervals in Tvc are interpreted as closed intervals.
In this sense, the the inconsistency between Tendpoints and Tvc appears as the disjointness of the classes of open and closed intervals in Tpc .
B.
Representation Theorem for Tpc As the relationships between the three theories indicate, the verification of Tpc combines the representation theorems for both Tendpoints and Tvc .
Theorem 13: Tpc is definably equivalent to Tlinear ordering [?]
Tstrict graphical [?]
Tdouble complete Proof: We can use the translation definitions in Theorems 11 and 12 and the representation theorems for Tendpoints (Theorem 6) and for Tvc (Theorem 8) to show that Tpc [?]
[?]
|= Tlinear  ordering  [?]
Tstrict  graphical  [?]
Tdouble  complete  For the other direction, we can use the translation definitions from Theorems 5 and 7.
The characterization of the models of Tpc combines the classes of models that were introduced in Definitions 10 and 11: Definition 13: Mpc is the following class of structures: M [?]
Mpc iff 1) M ~ = P [?]
O [?]
(G x S), where a) P = hP, <=i is a linear ordering, b) O = hP, O, inO i is a strict graphical incidence structure, c) G = hP, G, inG i is a strict graphical incidence structure, d) S = hP, S, inS i is a strong graphical incidence structure; 2) hti [?]
timepoint iff t [?]
P ; 3) hii [?]
timeinterval iff i [?]
O [?]
G [?]
S; 4) hii [?]
open iff i [?]
O; 5) hii [?]
closed iff i [?]
G [?]
S; Theorem 14: M [?]
Mpc iff M [?]
M od(Tpc ).
Proof: This follows from Theorem 13 and Theorem 1, together with the fact that Tstrict graphical axiomatizes the class of strict graphical incidence structures, Tdouble complete axiomatizes the class of double complete incidence structures and Tlinear ordering axiomatizes the class of linear orderings.
VIII.
Summary Three time ontologies first introduced by Hayes in [1] (endpoints, vector continuum, and point continuum) axiomatize both timepoints and timeintervals.
We have provided a characterization of the intended structures for these ontologies up to isomorphism, and we have shown that these intended structures are isomorphic to the models of the ontologies.
This characterization constitutes the verification of the ontologies.
In the course of proving the representation theorems, we identified axioms that were missing from each theory, and hence allowed unintended models.
We also provided a complete characterization of the relationships among the theories.
In particular, we specified the the similarity between endpoints and vector continuum, and demonstrated that point continuum can faithfully interpret the other two theories.
We can extend this methodology of ontology verification to other upper ontologies (such as SUMO, Cyc, and OWL-Time) that use similar first-order temporal theories for timepoints and intervals.
References [1] P. Hayes, "Catalog of temporal theories," University of Illinois Urbana-Champagne, Tech.
Rep. Technical Report UIUC-BI-AI-96-01, 1996.
[2] J. F. Allen, "Maintaining knowledge about temporal intervals," Commun.
ACM, vol.
26, no.
11, pp.
832-843, 1983.
[3] J. van Benthem, The Logic of Time.
Publishers, 1991.
Kluwer Academic  [4] I. Niles and A. Pease, "Towards a standard upper ontology," in Formal Ontologies and Information Systems, 2001, pp.
2-9.
[5] M. Fernandez-Lopez and A. Gomez-Perez, "Searching for a time ontology for semantic web applications," in Formal Ontologies and Information Systems, 2004, pp.
331-341.
[6] J. Hobbs and F. Pan, "Time ontology in OWL," http://www.w3.org/TR/owl-time, Tech.
Rep. W3C Working Draft 27 September 2006, 2006.
[7] ----, "An ontology of time for the semantic web," ACM Transactions on Asian Language Processing (TALIP): Special issue on Temporal Information Processing, vol.
3, pp.
66-85, 2004.
[8] R. Fikes and Q. Zhou, "A reusable time ontology," in Proceedings of the AAAI Workshop on Ontologies for the Semantic Web, 2002.
[9] H. Enderton, Mathematical Introduction to Logic.
demic Press, 1972.
Aca-  [10] M. Gruninger, T. Hahmann, A. Hashemi, and D. Ong, "Ontology verification with repositories," in Formal Ontologies and Information Systems, 2010, pp.
317-330.
[11] F. Buekenhout, Handbook of Incidence Geometry.
Elsevier, 1995.
[12] L. Vila, "Formal theories of time and temporal incidence," in Handbook of Temporal Reasoning in Artificial Intelligence, 2005, pp.
1-24.