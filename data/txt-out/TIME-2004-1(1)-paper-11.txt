Model Checking u-Calculus in Well-Structured Transition Systems E. V. Kouzmin Yaroslavl State University Sovetskay st. 14, Yaroslavl 150000, Russia egorkuz@mail.ru  N. V. Shilov Institute of Informatics Systems Lavrentev av.
6, Novosibirsk 630090, Russia shilov@iis.nsk.su  Abstract We study the model checking problem for fixpoint logics in well-structured multiaction transition systems.
P.A.
Abdulla et al.
(1996) and Finkel & Schnoebelen (2001) examined the decidability problem for liveness (reachability) and progress (eventuality) properties in well-structured single action transition systems.
Our main result is as follows: the model checking problem is decidable for disjunctive formulae of the propositional u-Calculus of D. Kozen (1983) in well-structured transition systems where propositional variables are interpreted by upward cones.
We also discuss the model checking problem for the intuitionistic modal logic of Fisher Servi (1984) extended by least fixpoint.
1.
Well-Preordered Transition Systems Let D be a set.
An equivalence is a reflexive, transitive and symmetric binary relation on D. A partial order is a reflexive, transitive, and antisymmetric binary relation on D. A preorder (synonym: quasi-order) is a reflexive and transitive binary relation on D. A well-preorder (synonym: wellquasi-order) is a preorder  where every infinite sequence d0 , ... di , ... of elements of D contains a pair of elements dm and dn so that m < n and dm  dn .
Let (D, ) be a well-preordered set (i.e.
a set D provided with a well-preorder ).
An ideal (synonym: cone) is an upward closed subset of D, i.e.
a set I [?]
D such that for all d0 , d00 [?]
D, if d0  d00 and d0 [?]
I then d00 [?]
I.
Every d [?]
D generates the upward cone (| d) [?]
{e [?]
D : d  e}.
For every set S [?]
D and every element d [?]
S, d is a minimal element of S iff for every element s [?]
S either d  s or d and s are non-comparable.
For every subset S [?]
D, the set of its minimal elements is min(S).
For every subset S [?]
D, a basis of S is a subset B [?]
S such that for every s [?]
S there exists an element b [?]
B such that b  s.  V. A. Sokolov Yaroslavl State University Sovetskay st. 14, Yaroslavl 150000, Russia sokolov@uniyar.ac.ru  Let us present some algebraic properties of well-preorders that are easy to prove [1, 4].
Let us fix for simplicity a well-preordered set (D, ).
First, (D, ) is well-founded, i.e.
infinite strictly decreasing sequences of elements of D are impossible; moreover, every infinite sequence in (D, ) contains an infinite non-decreasing subsequence.
Next, every subset S [?]
D provided with the preorder  also forms another well-preordered set (S, ).
Third, every S [?]
D has a finite basis that consist of the set of the minimal elements min(S); in particular, every ideal I has a finite basis min(I), and I = [?]d[?
]min(I) (| d).
Finally, every nondecreasing sequence of ideals I0 [?]
...
[?]
Ii [?]
... eventually stabilizes, i.e.
there is some k >= 0 such that Im = In for all m, n >= k. Let Act be a fixed finite alphabet of action symbols.
A transition system (synonym: Kripke frame) is a tuple (D, R), where the domain D is a non-empty set of elements that are called states, and the interpretation R is a total mapping R : Act - 2DxD .
A run (in the frame) is a maximal sequence of states s1 ...si si+1 ... such that for all adjacent states within the sequence (si , si+1 ) [?]
R(a) for some a [?]
Act.
A well-preordered transition system (WPTS) is a triple (D, , R) such that (D, ) is a well-preordered set and (D, R) is a Kripke frame.
We are most interested in wellpreordered transition systems with decidable and compatible well-preorders and interpretations.
The decidability condition for the well-preorder is straightforward:  [?]
D x D is decidable.
The decidability condition for interpretations of action symbols and compatibility conditions for well-preorders and interpretations of action symbols are discussed below.
Let (D, , R) be a WPTS and a [?]
Act be an action symbol.
We consider the following decidable condition for the interpretation R(a) of the action symbol a [?]
Act: the funcR(a) tion l s [?]
D .
min{t : t -- s} is computable.
We refer to this condition as tractable past.
Again, let (D, , R) be a WPTS and a [?]
Act be an ac-  (future) upward [?
]s01 , s001 , s02 [?
]s002 : R(a) s01 -- s001 & s01  s02 = R(a) = s02 -- s002 & s001  s002 00 s1 .
.
.
s002  |  | | |  s01  s02 -  *R(a) [?]
R(a)* -  (future) downward [?
]s01 , s02 , s002 [?
]s001 : R(a) s02 -- s002 & s01  s02 = R(a) = s01 -- s001 & s001  s002 s001 .
.
.
s002 | | |  |  s01  s02  *R(a) [?]
R(a) *   Table 1.
(Future) Fisher Servi conditions tion symbol.
There are 2 options for strong future compatibility of the well-preorder  and the interpretation R(a) of the action symbol a [?]
Act.
They are represented in the table 1 in logic, diagram, and algebraic notation (rows 1, 2, and 3 respectively).
The terminology used in these tables is explained in the following three paragraphs.
The adjectives "upward" and "downward" have been introduced by [4]; they have explicit mnemonics.
The adjective "strong" has also been introduced by [4]; it refers to a single step of action R(a) that interprets the corresponding action symbol a.
In accordance with [4], one can define the transitive, the reflexive and "plain" compatibility by + using the transitive closure R(a) , the reflexive closure  * = [?]
R(a) and the reflexive-transitive closure R(a) instead of the single step R(a).
The adjective "future" is about states after an action, i.e.
future states, while states before an action are past states.
The Fisher Servi conditions are due to intuitionistic modal logic FS suggested by G. Fisher Servi [5] (see also [8] and [3]).
Semantics of FS is defined in partially ordered transition systems (D, , R), where  is a partial order which is upward and downward compatible with R. Let M be a WPTS.
We say that M has tractable past, iff it enjoys this property for every action symbol a [?]
Act.
Let us fix a particular compatibility property from the table 1; we say that M has this property, iff it enjoys it for every action symbol a [?]
Act.
An upward compatible well-preordered transition system with tractable past and decidable preorder is said to be a well-structured transition system (WSTS).
Extensive case study and some generic examples of single action1 WSTS can be found in the foundational papers [1, 4].
We would like to point out that there are close relations between compatibility and (bi)simulation [7, 10].
Let (D,  , R) be a WPTS.
One can see that * future upward compatibility states that the well-pre1  i.e.
when |Act| = 1  order  is a simulation relation on the states of the transition system (D, R); * future downward compatibility states that the inverse - of the well-preorder  is a simulation relation on the states of the transition system (D, R).
These observations lead to the following proposition.
Proposition 1 Every transition system (D, R) provided with any bisimulation ' on the states in D forms a Fisher Servi compatible WPTS (D, ', R).
In particular, (D, R) provided with equality forms a Fisher Servi compatible WPTS (D, =, R).
2.
Propositional u-Calculus The u-Calculus of D.Kozen (uC) [6] is a very powerful propositional program logic with fixpoints.
It is widely used for specification and verification of properties of finite state systems.
(Please refer to [9] for the elementary introduction to uC.
The comprehensive definition of uC can be found, for example, in a recent textbook [2].)
Some authors denote the u-Calculus with the single action symbol by Lun since in the single action settings it becomes a propositional modal logic with two modalities ( and ) extended by fixpoints (u and n).
If to assume standard duality between modalities  and  and between fixpoints u and n then Lun becomes uK - the basic propositional modal logic K extended by fixpoints.
The syntax of uC consists of formulae.
Let P rp be an alphabet of propositional variables which is disjoint with the alphabet of action symbols Act fixed above.
A context-free definition of uC formulae is as follows: ph ::= p | (!ph) | (ph [?]
ph) | (ph [?]
ph) | ([a]ph) | (haiph) | (n p. ph) | (u p. ph) where metavariables ph, p, and a range over formulae, propositional variables and action symbols.
The only context constraint is the following: no instances of bound (by u or n) propositional variables are in the range of odd number of negations.
The semantics of uC is defined in labeled transition systems (synonym: Kripke models).
A model is a triple (D, R, V ), where (D, R) is a Kripke frame, and the valuation V is another total mapping V : P rp - 2D .
In every model M = (D, R, V ), for every formula ph, the semantics M (ph) is a subset of the domain D that is defined by induction on the formula structure: * M (p) = V (p), M (!ps) = D \ M (ps), M (ps 0 [?]
ps 00 ) = M (ps 0 ) [?]
M (ps 00 ), M (ps 0 [?]
ps 00 ) = M (ps 0 ) [?]
M (ps 00 ), * M ([a]ps) = { s : t [?]
M (ps) for every t such that (s, t) [?]
R(a) },  M (haips) = { s : t [?]
M (ps) for some t such that (s, t) [?]
R(a) }, * M (np.ps) = the greatest fixpoint of the mapping     M (up.ps) = the least fixpoint of the mapping     lS [?]
D .
MS/p (ps) , lS [?]
D .
MS/p (ps) ,  where metavariables ps, ps 0 , ps 00 , p, and a range over formulae, propositional variables and action symbols, and MS/p denotes the model that agrees with M everywhere but p: VS/p (p) = S. A propositional variable is said to be a propositional constant in a formula iff it is free in the formula.
A formula is said to be in the normal form iff negation is applied to propositional constants in the formula only.
A formula is said to be positive iff it is negation-free.
Due to the standard De Morgan laws and the following equivalences (!
(haiph)) - ([a](!ph)) (!
([a]ph)) - (hai(!ph)) (!p) (!
(up.ph)) - (np.(!
(php )) (!p) (!
(np.ph)) - (up.(!
(php )) every formula of uC is equivalent to some formula in the normal form that can be constructed in polynomial time.
(Here and throughout the paper XZY stays for substitution of Y instead of all instances of Z into X.)
We are especially interested in the fragment of the uCalculus that comprises the disjunctive formulae, i.e.
formulae without negations !, conjunctions [?
], and "infinite conjunctions" [ ] and n. A context-free definition of these formulae is the following: ph ::= p | (ph [?]
ph) | (haiph) | (u p. ph), where metavariables ph, p, and a range over formulae, propositional variables and action symbols.
We can remark that liveness and progress properties are easy to present in this fragment: EFp - uq.
(p [?]
hnextiq) and AFp - uq.
(p [?]
[next]q), where next is the single implicit action symbol of CTL.
Another logic that we use in our studies is the Fisher Servi intuitionistic modal logic FS [5, 8, 3].
The syntax of FS consists of formulae that are constructed from propositional variables P rp in accordance with the following context-free definition:  states,  is a partial order on D, the interpretation R interprets the single implicit action symbol (say next) by a binary relation R(next) [?]
D x D in an upward and downward compatible manner with , and the valuation V is a total mapping V : P rp - {I [?]
D : I is a cone in (D,  )}.
In every model M = (D, , R, V ), for every formula ph, the semantics M (ph) is a subset of the domain D that is defined by induction on the formula structure: * M (p) = V (p), M (!ps) = {s : (| s) [?]
M (ps) = [?
]}, M (ps 0 - ps 00 ) = {s : (| s) [?]
M (ps 0 ) [?]
M (ps 00 )}, M (ps 0 [?]
ps 00 ) = M (ps 0 ) [?]
M (ps 00 ), M (ps 0 [?]
ps 00 ) = M (ps 0 ) [?]
M (ps 00 ), * M (ps) = { s : (| t) [?]
M (ps) for every t such that (s, t) [?]
R(next) }, M (ps) = { s : t [?]
M (ps) for some t such that (s, t) [?]
R(next) }.
where metavariables ps, ps 0 , ps 00 , and p range over formulae and propositional variables, respectively.
(Sic!
In contrast to classical modal logics, there is no standard duality between  and  in intuitionistic modal logic.)
Please refer to papers [5, 8, 3].
for finite model property, axiomatization, and decidability issues of FS, but let us define a variant uFS of FS with multiactions and fixpoints as follows.
The syntax of uFS coincides with the syntax of uC.
The semantics of uFS is defined in models that are partially ordered Fisher Servi compatible labeled transition systems.
A model of this kind is a quadruple (D, , R, V ), where the domain D is a nonempty set of states,  is a partial order on D, the interpretation R is a total mapping R : Act - 2DxD that interprets every action symbol a [?]
Act by a binary relation R(a) [?]
D xD in an upward and downward compatible manner with , and the valuation V is a total mapping V : P rp - {I [?]
D : I is a cone in (D, )} (i.e., it interprets every propositional variable p [?]
P rp by some ideal in (D, )).
In every model M = (D, , R, V ), for every formula ph, the semantics M Int (ph) is a subset of the domain D that is defined by induction on the formula structure:  ph ::= p | (!ph) | (ph - ph) | (ph [?]
ph) | (ph [?]
ph) | (ph) | (ph)  * M Int (p) = V (p), M Int (!ps) = {s : (| s) [?]
M Int (ps) = [?
]}, M Int (ps 0 - ps 00 ) = = {s : (| s) [?]
M Int (ps 0 ) [?]
M Int (ps 00 )}, Int 0 M (ps [?]
ps 00 ) = M Int (ps 0 ) [?]
M Int (ps 00 ), M Int (ps 0 [?]
ps 00 ) = M Int (ps 0 ) [?]
M Int (ps 00 ),  where metavariables ph and p range over formulae and propositional variables.
FS semantics is defined in intuitionistic Kripke models.
A model of this kind is a quadruple (D, , R, V ), where the domain D is a nonempty set of  * M Int ([a]ps) = { s : (| t) [?]
M Int (ps) for every t such that (s, t) [?]
R(a) }, M Int (haips) = { s : t [?]
M Int (ps) for some t such that (s, t) [?]
R(a) },  * M Int (np.ps) = the greatest fixpoint of the  mapping  Int lS [?]
D .
MS/p (ps) ,  M Int (up.ps) = the least fixpoint of the mapping     Int lS [?]
D .
MS/p (ps) ,  where metavariables ps, ps 0 , ps 00 , p, and a range over formuInt lae, propositional variables and action symbols, and MS/p Int denotes the model that agrees with M everywhere but p: VS/p (p) = S. The following proposition is standard for intuitionistic logic.
Proposition 2 For every uFS model M , for every formula ph of uFS, the intuitionistic semantics M Int (ph) is an upward cone.
We are especially interested in the fragment of uFS that comprises the disjunctive formulae, i.e.
formulae without negations !, implications -, conjunctions [?
], and "infinite conjunctions" [ ] and n, i.e.
they coincide with the disjunctive formulae of uC.
It is easy to observe that clauses responsible for semantics of the disjunctive formulae in uC and in uFS also coincide.
It leads to the following proposition.
Proposition 3 For every uFS model M , for every disjunctive uFS formula ph, the intuitionistic semantics M Int (ph) coincides with the classical semantics M (ph).
3.
The Main Result and Conclusion A well-structured labeled transition system is a quadruple (D, , R, V ), where (D, R, V ) is a labeled transition system, and (D, , R) is a well-structured transition system.
An ideal-based model is a well-structured labeled transition system (D, , R, V ), where V : P rp - {I [?]
D : I is a cone in (D, )}, i.e.
it interprets every propositional variable p [?]
P rp by some ideal in (D, ).
In particular, every uFS model is an ideal-based model that is also downward compatible.
Proposition 4 For every positive formula ph of the uC without conjunctions [?
], boxes [ ], and greatest fixpoints n, for every ideal-based model M , the semantics M (ph) is an ideal.
Moreover, if valuations of all propositional constants in ph are defined by their finite bases, then some finite basis for M (ph) is computable.
Let M be a class of models, Ph be a class of formulae.
The model checking problem for M and Ph is to decide the following set  	 (ph, M, s) : ph [?]
Ph, M [?]
M and s [?]
M (ph) .
The following theorem is a corollary from propositions 3 and 4.
Theorem 1 The model checking problem is decidable for the ideal-based models and the disjunctive formulae of the propositional u-Calculus.
It is also decidable for the disjunctive formulae of the intuitionistic modal logic with least fixpoints uFS in the models with tractable past.
Acknowledgment.
Authors would like to thanks S.P.
Odintsov who draw our attention to close relations between well-structured transition systems and Kripke frames for intuitionistic modal logics.
References [1] P.A.
Abdulla, K. Cerans, B. Jonsson, T. Yih-Kuen "General decidability theorems for infinite-state systems", Proc.
11th IEEE Symp.
Logic in Computer Science (LICS'96), 1996, pp.313-321.
[2] A. Arnold and D. Niwinski Rudiments of u-calculus, North Holland, 2001.
[3] A. Chagrov, F. Wolter and M. Zakharyaschev "Advanced Modal logic", Handbook of Philosophical Logic, 2nd ed, v.3.
Kluwer, 2001.
[4] A. Finkel, Ph.
Schnoebelen "Well-structured transition systems everywhere!"
Theoretical Computer Science, 256(1-2), 2001, pp.63-92.
[5] G. Fisher Servi G. "Axiomatizations for some intuitionistic modal logics", Rend.
Sem.
Mat.
Univers., 42, 1984, pp.179194.
[6] D. Kozen "Results on the Propositional Mu-Calculus", Theoretical Computer Science, 27(3), 1983, pp.333-354.
[7] R. Milner A Calculus of Communicating Systems, Springer Verlag, Lecture Notes in Computer Science, v.92, 1989.
[8] A.K.
Simpson The Proof Theory and Semantics of Intuitionistic Modal Logic.
PhD Thesis, University of Edinburg, 1994.
[9] N.V. Shilov, K. Yi "How to find a coin: propositional program logics made easy", The Bulletin of the European Association for Theoretical Computer Science, 75, 2001, pp.127151.
[10] C. Stirling "The joys of bisimulation", Lecture Notes in Computer Science, Springer Verlag, 1450, 1998, pp.142151.