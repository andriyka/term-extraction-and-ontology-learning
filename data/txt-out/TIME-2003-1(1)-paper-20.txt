On-line transportation Scheduling using Spatio-Temporal Reasoning Maroua Bouzid GREYC - Universite de Caen BD du Marechal Juin 14032 Caen, France bouzid@info.unicaen.fr  Abstract  quires new extensions to existing methods in order to increase their efficiency and expressiveness.
Indeed, these techniques need to be adapted to provide adequate solutions to cope with applications characterized by a high level of uncertainty and rapid change.
These characteristics are common to several domains such as transportation scheduling and crisis situations.
Algorithms used to efficiently solve static scheduling problems such as classical techniques, Operations research, and centralized approaches have failed to address open dynamic scheduling problems in the presence of uncertainty.
Some investigators have offered approaches dedicated to dynamic scheduling problems in presence of uncertainty [6, 7].
Transportation scheduling application consists of distributed transportation companies that have to carry out transportation orders received asynchronously.
Each company is provided with a set of trucks.
Each company should optimize the use of its trucks when executing orders.
Several approaches have been suggested to this application such as MARS [5], TRACONET [1] based on the task delegation method and using the Contract Net Protocol techniques (CNP).
Existing approaches assume that each local plan (for each truck) is known with precision thus ignoring the presence of uncertainties.
However, the task of transportation is characterized by a high level of uncertainty regarding different factors such as the traffic density, the power of the truck used, etc... that cannot be ig-  In this paper we address the problem of the on-line transportation scheduling.
Previous approaches use an off-line scheduling algorithm that accounts for new transportation tasks only when trucks are at a destination.
To increase the performance of the system, we need to introduce the ability to account for the new transportation tasks immediately and to delegate it to a truck while this latter is moving toward a destination.
For this purpose, the system needs to address two issues : (1) to determine the current location of the truck and its proximity to the departure and arrival of the new transportation task, and (2) to respect the temporal constraints.
To this purpose, we use a space-time approach allowing us to deal with the first issue using a spatial reasoning, then address the second issue using a temporal reasoning.
This approach is a first step towards a design of temporally situated multi-agent system that allows us to take location and the time of agents existing at this location to determine the suitable actions.
Topics: Temporal Representation and Reasoning in IA, Temporal aspects of agent-based system  1.
Introduction The growing interest in the development of methods for large and complex applications re1  Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTL'03) 1530-1311/03 $17.00 (c) 2003 IEEE  nored.
Consequently, the time at which a truck reaches destination is usually not known with precision, however, the uncertainty of the time interval during which the truck is due to arrive is well known.
During this interval the availability of the truck is weighted by uncertainty.
Consequently, during task transportation, there exist intervals during which truck's availability is not known precisely but it is assumed that it can be represented by a degree of uncertainty.
Furthermore, the formal framework used to represent the availability of trucks, in the existing approach, is so weak that no powerful reasoning can be performed.
to, 1. determine the trucks in movement to be considered and 2. to select the most suitable to respond to this new order.
In what follows, we mean by a system a temporally situated multiagent system that is able to deal with time and space.
This ability allows this situated multiagent system a good interaction between agents and their environments by using spatial structures and when to interact by using the temporal dimension.
This kind of multi-agent system is based on a perception-deliberation and action mechanism where the position in the environment defines the situations in which actions (considering a transportation order) can be considered.
In the same way, this system considers also the time at which agents are located in a given site to take actions and the time when they could be located in a future site to make predictions on their future actions.
In the rest of the paper we introduce some preliminary definitions necessary for our approach, we then recall the off-line scheduling algorithm [4] and finally we describe our new approach to consider real-time issues when executing orders.
We have developed a suitable temporal representation of trucks based on Temporal Characteristic functions (TCF) [3, 4].
A characteristic function is a (possibly partial) function describing for how long a logical property holds (or does not hold) - thus it refers to the idea of characteristic function of a set.
Roughly speaking, it can be also considered as a kind of twovalued 'trajectory' or 'history' characterizing the logical behavior given by certain atemporal formulae.
Moreover, the possibility of representing the uncertainty on the property validity over time follows naturally from our functional approach and leads to the Fuzzy Temporal Characteristic Function (FTCF).
FTCFs allow the representation of the uncertainty on the behavior of trucks due to traffic density and unpredictable events that prevent them from respecting their schedules.
Thus, the FTCFs allow the representation of the uncertainty that characterizes the availability of trucks during task transportation.
2.
Preliminaries 2.1.
Temporal characteristic functions In this Section, we introduce the idea of a temporal approach to knowledge representation based on characteristic functions [3].
Basically, a characteristic function is a function specifying the time intervals during which a logical property holds (or does not hold) - thus it refers to the idea of characteristic functions of a set.
A characteristic function for a given set Ph is any function psPh of the form: psPh : T -- L, where T is the global domain of interest and L denotes some set of values describing to 'what degree' an element of T belongs to Ph.
In this paper, only the sets Ph which have the form of {x : ph(x)} are considered; where ph is a given property.
Thus, a characteristic function is defined to be a function of the form psph : T -- L describing to "what degree" an element of T satisfies the property (formula) ph, or, for convenience, to what degree the property expressed  In [4], we have addressed the problem of allocating orders to trucks using an off-line FTCF-based algorithm, where new orders are taken into consideration only for the parked trucks.
In this paper, we extend our previous approach using a space-time reasoning in order to also consider the new orders that are for trucks in movement and to assess their ability to accept the new order.
For that purpose, a representation of the spatial information of trucks will be introduced, in particular, their itinerary and their neighborhood.
This spatial information allow us to develop a space-time reasoning 2  Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTL'03) 1530-1311/03 $17.00 (c) 2003 IEEE  by ph is satisfied by any of the elements of T .
For further discussion, let us first establish the domain (maximal time interval) of interest.
We shall consider events happening after a given time lapse 0 and before +[?].
This defines the domain for all characteristic functions.
The formal definition of a characteristic function is as follows:  The idea of the knowledge representation language to be used consists in associating a propositional symbol p and a TCF ps for expressing explicitly when p is true, false or unknown over the time domain T .
Thus, the elementary objects of the language are pairs of the form p, ps.
The basic intuition concerning the semantics of p, ps is that some property p holds over time if the associated characteristic function ps takes 1 as its value, and does not hold if it takes 0 (for weak episodes, p is undetermined for undefined ps).
TCFs constitute formal means to represent some properties over time; they seem to be more general and more powerful than intervals.
Basically, a single function can represent 'behavior' of some property over the whole time domain T; thus, it represents the "history" of the a certain phenomenon.
Moreover, as opposed to intervals, they can be easily extended to deal with multiple-valued or fuzzy logics.
Definition 1 Let T = [0, +[?
][ be the time domain of interest and let L = {0, 1} be the set of distinguished values.
Any mapping ps : T -- L will be called a Temporal Characteristic  Function (TCF).
Any mapping ps : T -- L will be called a weak (partial) characteristic  function, if T [?]
T It is assumed that a TCF changes its value over T only a finite number of times.
Thus any TCF is an interval-stable function taking values 0 or 1 over time.
Any point of the domain where the function changes its value will be referred to as a change point, specific point or landmark.
When considering weak TCFs one may be especially interested in positive weak functions and negative weak ones.
2.2.
Fuzzy Temporal Characteristic Functions (FTCF) The idea of fuzzy characteristic functions consists in allowing the truth values to cover different degrees of truth from certainly false (0) to certainly true (1) passing through different scales of truth certainty.
i.e.
in terms of characteristic functions between 1 and 0.
Definition 2 A positive weak TCF is a weak TCF which takes as its value only 1 (inf {x|x = ps(t) f or t [?]
T } = 1).
A negative weak TCF is a weak TCF which takes as its value only 0 (sup{x|x = ps(t) f or t [?]
T } = 0).
Definition 3 Let T = [0, +[?
][ be the time domain of interest and let L = [0, 1] be the set (closed interval) of distinguished values.
Any mapping ps : T -- L will be called a Fuzzy Temporal Characteristic Function.
Any map ping ps : T -- L is called a weak (or partial)  FTCF, if T [?]
T .
Note that any TCF can be represented as a finite union of convex intervals denoting the largest intervals within which the function does not change its value[2].
Thus ps can be given by {(a1 , b1 ), .
.
.
, (ak , bk )} provided that avalues denote the beginnings of intervals for which the function has value 1 or the end of intervals for which the function has as value 0 and b-values denote the ends of respective intervals for which the function has the value 1 or the beginnings of intervals for which the function is equal to 0.
A similar representation can be applied to weak TCFs; however, the domain of the function must be given explicitly.
The problem of what value (0 or 1) is taken at the a and b-values can be solved arbitrarily depending on current needs.
Thus any FTCF takes as its values some real numbers from the closed interval [0, 1]; for simplicity we assume that the function is "sufficiently regular".
Note that any characteristic function satisfies the definition of FTCF (the opposite is not necessarily true).
Note that an arbitrary FTCF cannot be represented using just a set of intervals (the a and b values): the discussed extension yields a concept significantly more general than a simple interval.
3  Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTL'03) 1530-1311/03 $17.00 (c) 2003 IEEE  3.2.
A truck selection algorithm  Furthermore, we a filtering operation for FTCF is an operation aimed at determining from a FTCF ps defined over T and a condition C, a  weak FTCF ps C defined on T [?]
T and such that ps C (t) satisfies C. In a formal way:  Let us consider O the set of orders received by a given company where each order oi is characterized by its deadlines Di before which the order should be satisfied, a duration dei representing an estimate of the time required to satisfy the order, and the worst-case duration dw i .
These durations are determined from statistical data collected from previous execution of the truck.
We use for the duration dei the average duration over the collected data and the duration dw i the average duration increased with the standard deviation computed from the same collected data.
Furthermore, we consider that each truck r has its FTCF psr that indicates at time t to what degree the truck is allocated psr (t) = p. Given a set of trucks R and a set of orders O, we need to generate a service schedule of the set O.
For this, the company, that we name in the following C1 , uses an algorithm based on the following steps:  Definition 4 Let ps be a FTCF defined over T and C a condition.
filtering(ps, T, C) is the weak fuzzy characteristic function ps C defined  on T [?]
T and such that: [?
]t [?]
T, ps C (t) =   ps(t), if ps(t) satisfies C undefined, otherwise  Example 1 Let ps be a FTCF defined on T and s [?]
[0, 1]: filtering(ps, T, ps(t) <= s) =  ps(t), if ps(t) <= s undefined, otherwise For more details about this formalism, we invite the reader to consult [3].
* Compute expected utilities for all orders oi , U tilityC1 (oi ) = Reward(oi )- Cost(dw i ); where cost is a function depending on the duration and charges to satisfy an order while Reward is a function representing the rewarded value gained when the order is satisfied, it can for example represent the amount of money that the company is wanting to earn.
3.
Off-line transportation scheduling approach: a temporal reasoning algorithm 3.1  Stating the problem  The transportation scheduling problem consists of a set of shipping companies that receive orders of the form "Load amount s of good g at location l1 and transport it to location l2 during a duration equal at most to dw before a deadline D. The system dedicated to solve this problem assigns each company's truck a specific time qualification.
The time qualification is a FTCF ps taking the value 1 when the truck is allocated and the value 0 when the truck is free.
The FTCF allows the representation of the uncertainty on the availability of the truck during the intervals where the availability is not known in a precise way.
The goal for each company is to optimize its service by executing the maximum number of orders and minimizing the allocation of truck-availability intervals.
* Sort the set O according to the utility of orders; * Satisfy the orders one by one as follows: - Search among the set of FTCFs of trucks those which are defined in the interval [Now, Di ] and of which values are less than a threshold s. This step is performed through a filtering operation to find these trucks.
Let Struck be the set of selected trucks.
- For each truck j [?]
Struck , let oi Ij,d e be the intervals such that dui oi w ration( Ij,d (if I = [x, y], e ) > di i duration(I) = y - x) 4  Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTL'03) 1530-1311/03 $17.00 (c) 2003 IEEE  oi - Let Ik,min be the interval with the least duration for all trucks j [?]
oi = Struck : [?
]j [?]
Struck Ik,min oi arg(M IN (duration(Ij,de ))).
The i intuition behind the selection of the smallest truck-availability interval is 1. to maximize the utility of the truck and 2. to reduce the allocation of the truck to free it for other tasks.
an FCTF has a minimal tangent is the interval where the likelihood the truck be free is the highest.
* S c  = [?
]: this situation implies that there are intervals [x, y] in the interval [a, b] during which psr takes the value 0.
We select the interval [x, y] with the highest duration, y - x = M AX[xi ,yi ][?
]S c (yi - xi ).
For all cases, in order to compute the value of FTCF ps, we assume that ps is linear between two points (with known values of ps) and we then generate the linear equation representing ps between these points.
In some cases, the allocation of the interval is based on construction of an interval having the same middle as the one computed for the truck.
This strategy is motivated by the fact that we guarantee the allocation of the interval where the degree of availability is highest regardless of the fact that the allocation is not necessarily optimal.
The reader interested on the technical details on this section can see [4].
- Send to the selected truck, the order oi , its estimated and worst-case durations dei and dw i and the interval oi Ik,min .
3.3.
An order allocation algorithm The truck selected to carry out the order should allocate the interval during which it satisfies the order.
This operation consists in updating its FTCF by changing its value for every t [?]
I, where I is the interval during which it satisfies the order.
The truck r receives the order oi , its interval Ii =[a,b] during which it satisfies the order, the duration de required to satisfy the order and the duration dw as the worstcase duration to satisfy the order.
To update the FTCF, the agent has to assess several situations.
To optimize its service, the truck tries to allocate the interval where the probability to be free is the highest.
Consequently, the truck agent performs a filtering operation over its FTCF in Ii such that: filtering(psr , Ii , psr (t) = 0).
This operation enables us to select a set S c of intervals {Irc }.
There are two possible outcomes for the set S c :  4 On-line transportation scheduling : a spatio-temporal reasoning algorithm In the previous section, we consider situations where an agent can take a new order into consideration only when it doesn't move toward a destination.
In other words, an agent (truck) must reach destination to consider a new transportation order.
In this section, we relax this assumption by extending the approach presented in the previous section in order to allow an agent to consider new orders in real time.
An agent, with this extension, is able to analyze its current capacity to accept a new order on-line while moving toward its destination.
To do that, we develop a new approach using simple space-time reasoning.
This reasoning requires, in addition to the characteristic function, spatial information :  * S c = [?
]: this situation means that there is no interval during which the truck is sure to be free.
Then, we select intervals during which the probability that the truck is free is the highest.
Because a FTCF during these intervals is approximated with a linear function, the most important intervals are the ones with the smallest |tangent|.
Since the tangent allows us to measure the overall uncertainty over an interval (other measurements can be used such as the integral over the interval, but the tangent is sufficient to give us the required information).
Therefore, the interval during which  * Truck at a destination : the system needs to know its location.
* Truck moves toward a destination to achieve an order : in such situations, many 5  Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTL'03) 1530-1311/03 $17.00 (c) 2003 IEEE  4.2.
Spatial reasoning to determine the appropriate set of trucks in movement  spatial information are necessary for the reasoning.
- the departure and arrival locations consist of the interval [l1 , l2 ] of locations where the truck loads goods to where it should unload them.
The spatial reasoning we have used consists in looking for the trucks moving toward the neighborhood N of the location l1 .
For that, consider truck i that is moving in its subinterval [lik , lik+1 ].
Many situations need to be studied :  - This interval is divided into a set of sub-intervals [[l1 , l11 ], [l11 , l12 ], .
.
.
, [l1k , l2 ]], where l1i is a location that will be visited by the truck while heading toward The locations are obtained l2 .
from a geographical database.
The sub-intervals allow the system to determine in real time and in a precise way the current location of the truck during its moving .
The system needs only to know in which subinterval [l1i , l1i+1 ] the truck is moving.
* lik+1 [?]
N : truck i is considered.
* lik [?]
N and lik+1  [?]
N : truck i should not be considered * lik  [?]
N and lik+1  [?]
N : truck i should not be considered.
4.3.
Spatio-temporal reasoning to allocate the order to moving trucks In the previous section, we introduced a spatial reasoning that determines the trucks in movement that can be considered for the new order allocation.
Let this set be T M. We need to locate each truck e [?]
T M according to departure and arrival locations of the new order.
Many cases need to be addressed.
Before that, let us define what we mean by two spatial relations that we use in the following :  - The deadline before which the truck should reach l2 - Finally, the system uses the time needed for loading and unloading goods at a location that we call thc and thd respectively.
4.1.
Accounting for a new order  1. overlap relation: we use it as an extension of the overlap relation defined by Allen.
Therefore, in our case, [l1 , l2 ] overlaps [l1 , l2 ] if the projection of [l1 , l2 ] on the axis defined by [l1 , l2 ] and [l1 , l2 ] overlap.
Let a new order be characterized by the transportation of goods from location l1 to l2 and the deadline of the delivery is D .
The allocation technique consists in determining the truck to which the order should be allocated.
The system takes all trucks into consideration including the ones moving towards a destination and that are not so far from the departure location l1 .
To determine trucks in movement that should be considered, the system determines trucks moving in the vicinity of the location l1 .
This vicinity can be determined as a circle around the location l1 with a ray K suitable to the distance l2 -l1 .
This approach needs first to determine all trucks able to satisfy the order (all truck moving inside the vicinity) and then select the most suitable for the order.
2. include relation: we use it as an extension of the include relation of Allen.
Therefore, [l1 , l2 ] is included in [l1 , l2 ] if the projection of [l1 , l2 ] on the axis defined by [l1 , l2 ] is included in [l1 , l2 ] 1.
[l1 , l2 ] and [l1 , l2 ] overlap such that l1 < l1 and l2 < l2 : in this situation, we locate exactly the sub-interval in which the truck moves, let it be [l1k , l1k+1 ].
The truck can drive towards l1 , get goods (of the new order) then determine what is the best policy.
Two policies need to be analyzed.
6  Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTL'03) 1530-1311/03 $17.00 (c) 2003 IEEE  2.
[l1 , l2 ] [?]
[l1 , l2 ] : as in the previous case, we need to assess many policies 1.
All of the time constraint are modeled as follows :  * policy 1 : driving towards the first destination (l2 ) and then driving towards the new destination l2 .
l 1  k  l1  k'  k+1 l 1  l1  l2  1  * policy 1 : drive towards l2 and then towards l1 .
The time constraints for this policy are:  3  2  l '2  '  l1  l1  Figure 1.
[l1 , l2 ] and [l1 , l2 ] overlap * policy 2 :driving towards the new destination l2 and then driving towards the first destination l2 .
l1  k l1  k+1 l1  k' l1  k+1  k  l1  l2  l1  1  2 3 ' l1  l' 2  l2  1  Figure 3.
[l1 , l2 ] [?]
[l1 , l2 ]  3 2    ,l2  D >= tcurrent + tlk+1 1  D >= tcurrent + tlk+1 ,l2 + thd +  1  tl2 ,l1 + tl1 ,l2 + thc  l '2  '  l1  Figure 2.
[l1 , l2 ] and [l1 , l2 ] overlap In both policies, the time constraints (deadlines) should be respected such that: * policy 1 : The time constraints are :     ,l1 + thc + tl1 ,l2  D >= tcurrent + tlk+1 1   D >= tcurrent + tlk+1 ,l + thc +  1 1  tl1 ,l2 + tl2 ,l2 + thd * policy 2 : the time constraints are then :   D >= tcurrent + tlk+1 ,l + thc + tl1 ,l2   1 1  D >= tcurrent + tlk+1 ,l + thc + 1 1    t   + t  + th l1 ,l2  l2 ,l2  d  Where tl,l is a function measuring the time necessary to move from l to l', tcurrent is the current time, thc time of loading goods and thd time of unloading goods.
We assume that the time tlk ,lk+1 we take from the 1  1  * policy 2 : drives towards l1 , then towards l2 and finally towards l2 .
The time constraints are: l1  k' l1  k  l1  k+1  l2  l1  1 3 2 '  l1  l' 2  Figure 4.
[l1 , l2 ] [?]
[l1 , l2 ]       ,l1 + thc + tl1 ,l2  D >= tcurrent + tlk+1 1 D >= tcurrent + tlk+1 ,l + thc +  1 1  tl1 ,l2 + tl2 ,l2 + thd * policy 3 : drives towards l1 , then towards l2 and finally towards l2 .
The time constraints are:      D >= tcurrent + tlk+1 ,l1 + thc + tl1 ,l2 1   D >= tcurrent + tlk+1 ,l + thc + 1 1   tl1 ,l2 + tl2 ,l2 + thd    current location l1k to l1k+1 is negligible in comparison with tlk+1 ,l .
1 1 This assumption has no effect on our model.
7  Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTL'03) 1530-1311/03 $17.00 (c) 2003 IEEE  l1  k  k+1  k' l1  l1 1  l  l1 2  '  l1  5.
Conclusion  2  In this paper, we have presented an extension of an off-line transportation scheduling algorithm to give trucks the ability to take new order online.
This approach combines the temporal reasoning developed in the previous approach based on the FTCF, with a spatial reasoning that allows to determine trucks to be considered.
We have developed a spatial reasoning with different policies and how trucks can determine the best policy using the shortest path criterion.
Finally we discuss the problem when many trucks can respond to the new order.
For this problem, we introduce a new measure based on the opportunity cost that allows a strategy to prefer a truck minimizing this cost over another.
Many other extensions could be studied in future works such as relaxing the assumption that a truck can be derived from its initial destination.
One question is how to extend this approach to derive the truck, once, twice, and so on ... as much as possible.
A stack of secondary orders need to be handled and some new criteria of selection can be merged.
Another issue that appears in this paper is the multi-criteria decision, especially for truck selection.
Finally, this work is an interesting step towards the development of time-situated Multi-Agents Systems.
The design of such systems will motivate our next research.
3  l' 2  Figure 5.
[l1 , l2 ] [?]
[l1 , l2 ] The policy selection is simply the policy with the shortest path strategy.
We can introduce other criteria to select policies or use some multi-criteria decision approaches that we do not address in this paper.
4.4.
A truck selection algorithm In the neighborhood N , many trucks can be selected for the new order.
In this section, we discuss the selection criterion to select the optimal truck.
In general, we can use the length of the path that a truck will follow and select the truck that will travel toward the shortest path.
This criterion should be considered by it is not sufficient because the truck moving towards the shortest path could be different from the cheapest.
To introduce this notion, we need to take into account the cost of loading the new goods given a current load of the truck.
For that, we introduce an opportunity cost OC measure of loading new goods (NO) such that :  References  OC(N O) = Cost(current load)-  [1] M. Andersson and T. Sandholm.
Timequality tradeoffs in reallocative negotiation with combinatorial contract types.
In Proceedings of the National Conference on Artificial Intelligence AAAI'99, pages 3-10, 1999.
Cost(current load + LOAD(N O)) where LOAD gives the weight of new goods and Cost function measures the cost of moving with a load at a given level.
The strategy simply consists in selecting the truck that minimizes this opportunity cost.
The selected truck is then determined by :  [2] M. Bouzid and P. Ladkin.
Simple reasoning with time-dependent propositions.
International Journal of Interest Group in Pure and Applied Logic (IGPL), 10(4):1- 21, 2002.  truck = min OCt (N O) t[?
]T M  When we have more than one truck, we can at this moment selects the truck with the shortest path.
[3] M. Bouzid and A. Ligeza.
Temporal logic based on characteristic functions.
In 8  Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTL'03) 1530-1311/03 $17.00 (c) 2003 IEEE  C. Rolliger I. Wachsmuth and W. Brauer, editors, Advances in Atrificial Intelligence, 19th Annual German Conference on Artificial Intelligence, volume 981 of Lecture Notes in Artificial Intelligence, pages 221- 232.
Speinger Verlag, 1995.
[4] M. Bouzid and A.I Mouaddib.
Uncertain temporal reasoning for the distributed transportation.
In Proceedings of TIME98, International Workshop on Temporal Representaion and Reasoning, pages 45- 56, 1998.
[5] K. Fischer, J.P. Muller, and M. Pischal.
Cooperative transportation scheduling: an application domain for dai.
Technical Report RR-95-01, 1995.
[6] A.I.
Mouaddib.
A study of a dynamic progressive reasoning system.
International Journal of Theoretic and Experimental Artificial Intelligence, 12:101-122, 2000.
[7] Thierry Vidal.
Dealing with temporal uncertainty and reactivity in a space mission plan.
In Proceedings of 2nd NASA International Workshop on Planning and Scheduling for Space, 2000.
9  Proceedings of the 10th International Symposium on Temporal Representation and Reasoning and Fourth International Conference on Temporal Logic (TIME-ICTL'03) 1530-1311/03 $17.00 (c) 2003 IEEE